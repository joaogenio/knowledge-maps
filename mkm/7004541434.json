[
    {
        "doc_title": "A privacy-focused approach for anomaly detection in IoT networks",
        "doc_scopus_id": "85100346295",
        "doc_doi": "10.1002/nem.2154",
        "doc_eid": "2-s2.0-85100346295",
        "doc_date": "2022-01-01",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Science Applications",
                "area_abbreviation": "COMP",
                "area_code": "1706"
            },
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            }
        ],
        "doc_keywords": [
            "Background noise",
            "Behavioral patterns",
            "Channel activity",
            "Data exfiltration",
            "End-to-end data flow",
            "Kernel Density Estimation",
            "Monitoring mechanisms",
            "One-class Classification"
        ],
        "doc_abstract": "© 2021 John Wiley & Sons, Ltd.IoT devices present a series of liabilities to administrators that aim for fully secure networks. Owing to their heterogeneity and limited processing power, administrators often implement monitoring mechanisms to prevent unauthorized use of resources and data exfiltration. However, most approaches allow for easy discrimination of private behavioral patterns of its users or nodes by their MAC or IP addresses. Inferring data exchange patterns at the physical layer is a more complex task, as a single signal power indicator may correspond to a mixture of simultaneous data transmissions. This article proposes privacy-focused mechanisms by resorting to physical layer data analysis and one-class classification models to perform anomaly detection in IoT networks. We present a full processing pipeline that considers the signal that identifies and models patterns on the channel activity and silence periods. We train our models with data captured from interactions with an Amazon Echo with devices generating background noise and test them against a similar scenario with a tampered network node periodically uploading data. Our data show that the best performing model, kernel density estimation, is able to detect anomalies with a 99% precision rate, even surpassing the tested neural networks approaches. We also propose a framework that aims to deploy validated models into production IoT environments. We designed an end-to-end data flow that autonomously extracts data and classifies them at the anomaly detection server. The envisioned components were designed to be horizontally scaled for a myriad of data streams and machine learning algorithms working in parallel.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Prediction of low accessibility in 4G networks",
        "doc_scopus_id": "85105442070",
        "doc_doi": "10.1007/s12243-021-00849-9",
        "doc_eid": "2-s2.0-85105442070",
        "doc_date": "2021-01-01",
        "doc_type": "Article",
        "doc_areas": [
            {
                "area_name": "Electrical and Electronic Engineering",
                "area_abbreviation": "ENGI",
                "area_code": "2208"
            }
        ],
        "doc_keywords": [
            "4G networks",
            "Key performance indicators",
            "Machine learning approaches",
            "Machine learning models",
            "Network problems",
            "Number of principal components",
            "Pro activities",
            "Programmability"
        ],
        "doc_abstract": "© 2021, Institut Mines-Télécom and Springer Nature Switzerland AG.The increased programmability of communication networks makes them more autonomous, and with the ability to actuate fast in response to users and networks’ events. However, it is usually a difficult task to understand the root cause of the network problems, so that autonomous actuation can be provided in advance. This paper analyzes the probable root causes of reduced accessibility in 4G networks, taking into account the information of important key performance indicators (KPIs), and considering their evolution in previous time-frames. This approach resorts to interpretable machine learning models to measure the importance of each KPI in the decrease of the network accessibility in a posterior time-frame. The results show that the main root causes of reduced accessibility in the network are related with the number of failure handovers, the number of phone calls and text messages in the network, the overall download volume, and the availability of the cells. However, the main causes of reduced accessibility in each cell are more related to the number of users in each cell and its download volume produced. The results also show the number of principal component analysis (PCA) components required for a good prediction, as well as the best machine learning approach for this specific use case. In addition, we finished our considerations with a discussion about 5G network requirements where proactivity is mandatory.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Physical Layer Anomaly Detection Mechanisms in IoT Networks",
        "doc_scopus_id": "85086757443",
        "doc_doi": "10.1109/NOMS47738.2020.9110323",
        "doc_eid": "2-s2.0-85086757443",
        "doc_date": "2020-04-01",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            },
            {
                "area_name": "Computer Science Applications",
                "area_abbreviation": "COMP",
                "area_code": "1706"
            },
            {
                "area_name": "Signal Processing",
                "area_abbreviation": "COMP",
                "area_code": "1711"
            },
            {
                "area_name": "Information Systems and Management",
                "area_abbreviation": "DECI",
                "area_code": "1802"
            },
            {
                "area_name": "Health Informatics",
                "area_abbreviation": "MEDI",
                "area_code": "2718"
            },
            {
                "area_name": "Artificial Intelligence",
                "area_abbreviation": "COMP",
                "area_code": "1702"
            }
        ],
        "doc_keywords": [
            "Background noise",
            "Detection mechanism",
            "Multiple devices",
            "One-class Classification",
            "Packet inspection",
            "Precision rates",
            "Relevant features",
            "Security risks"
        ],
        "doc_abstract": "© 2020 IEEE.With the advent of IoT and wireless mesh networks, security risks inherent to these types of networks have grown in number, severity, and potential for harm. Most of the approaches currently available for anomaly detection in IoT networks perform frame and packet inspection, which may inadvertently reveal private behavioural patterns of its users.This paper proposes a privacy-focused framework for anomaly detection which analyses radio activity at the physical layer, measuring silence and activity periods, and extracts relevant features for training One-Class Classification (OCC) models.We train our models with data captured from interactions with an Amazon Echo with multiple devices generating background noise, thus simulating a business-like environment, and test them against a similar scenario with a tampered network node periodically uploading data to a local machine. Our data show that the best performing model is able to detect anomalies with a 99% precision rate.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Root Cause Analysis of Reduced Accessibility in 4G Networks",
        "doc_scopus_id": "85084172110",
        "doc_doi": "10.1007/978-3-030-45778-5_9",
        "doc_eid": "2-s2.0-85084172110",
        "doc_date": "2020-01-01",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Theoretical Computer Science",
                "area_abbreviation": "MATH",
                "area_code": "2614"
            },
            {
                "area_name": "Computer Science (all)",
                "area_abbreviation": "COMP",
                "area_code": "1700"
            }
        ],
        "doc_keywords": [
            "4G networks",
            "Key performance indicators",
            "Machine learning approaches",
            "Machine learning models",
            "Network problems",
            "Phone calls",
            "Programmability",
            "Root cause analysis"
        ],
        "doc_abstract": "© 2020, IFIP International Federation for Information Processing.The increased programmability of communication networks makes them more autonomous, and with the ability to actuate fast in response to users and networks’ events. However, it is usually a difficult task to understand the root cause of the network problems, so that autonomous actuation can be provided in advance. This paper analyzes the probable root causes of reduced accessibility in 4G networks, taking into account the information of important Key Performance Indicators (KPIs), and considering their evolution in previous time-frames. This approach resorts to interpretable machine learning models to measure the importance of each KPI in the decrease of the network accessibility in a posterior time-frame. The results show that the main root causes of reduced accessibility in the network are related with the number of failure handovers, the number of phone calls and text messages in the network, the overall download volume and the availability of the cells. However, the main causes of reduced accessibility in each cell are more related to the number of users in each cell and its download volume produced. The results also show the number of PCA components required for a good prediction, as well as the best machine learning approach for this specific use case.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Detecting Internet-Scale Traffic Redirection Attacks Using Latent Class Models",
        "doc_scopus_id": "85064892606",
        "doc_doi": "10.1007/978-3-030-17065-3_37",
        "doc_eid": "2-s2.0-85064892606",
        "doc_date": "2020-01-01",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Control and Systems Engineering",
                "area_abbreviation": "ENGI",
                "area_code": "2207"
            },
            {
                "area_name": "Computer Science (all)",
                "area_abbreviation": "COMP",
                "area_code": "1700"
            }
        ],
        "doc_keywords": [
            "Bgp securities",
            "Comprehensive analysis",
            "Internet security",
            "Latent class model",
            "Statistical detection",
            "Statistical learning",
            "Supervised learning methods",
            "Traffic redirections"
        ],
        "doc_abstract": "© 2020, Springer Nature Switzerland AG.Traffic redirection attacks based on BGP route hijacking has been an increasing concern in Internet security worldwide. This paper addresses the statistical detection of traffic redirection attacks based on the RTT data collected by a network of probes spread all around the world. Specifically, we use a Latent Class Model to combine the decisions of individual probes on whether an Internet site is being attacked, and use supervised learning methods to perform the probe decisions. We evaluate the methods in a large number of scenarios, and compare them with an empirically adjusted heuristic. Our method achieves very good performance, superior to the heuristic one. Moreover, we provide a comprehensive analysis of the merits of the Latent Class Model approach.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Client side localization of bgp hijack attacks with a quasi-realistic internet graph",
        "doc_scopus_id": "85061142227",
        "doc_doi": "10.1007/978-3-030-11039-0_1",
        "doc_eid": "2-s2.0-85061142227",
        "doc_date": "2019-01-01",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Science (all)",
                "area_abbreviation": "COMP",
                "area_code": "1700"
            },
            {
                "area_name": "Mathematics (all)",
                "area_abbreviation": "MATH",
                "area_code": "2600"
            }
        ],
        "doc_keywords": [
            "Internet graphs",
            "Quasi-realistic",
            "Real IX",
            "Route hijack",
            "Routing attacks"
        ],
        "doc_abstract": "© Springer Nature Switzerland AG 2019.Internet routing relies completely on the Border Gateway Protocol (BGP) which is inherently insecure and allow the deployment of route hijacking attacks. The client side detection of such type of attacks can be achieved by detecting Round Trip Time (RTT) deviations from multiple points on the Internet to the target network. However, the localization of the autonomous systems where the attack originates can only be performed with an underlying realistic and precise model of the Internet interconnections. A usable and useful realistic Internet interconnections model does not exist. The existing interconnection models are to simplistic to be applicable in real scenarios and/or incorporate to much uncorrelated information that cannot be used due to its complexity. This work presents a client side methodology to locate the source of BGP hijack attacks based on a quasi-realist graph that models the Internet as an all. The construction of such graph builds upon all known Internet exchange points (IX) and landing points of all known submarine cables. The lack of information about interconnections between Internet exchangers (IX) nodes and landing points is extrapolated from simple rules that take in consideration Earth geographic characteristics. This approach results in a graph that includes all major corner stones of the Internet while maintaining a simple structure. This underlying quasi-realist graph model of the Internet will allow the search for IX nodes where a false route could be injected to create a similar RTT anomaly observed during an attack. With very simplistic assumptions as similar node, link loads and symmetric routing by the shortest path, and calibration using a relatively small set of world-scale measurements, the proof-of-concept results show that the model allows to locate the source of routing hijack attacks within a reasonable degree of efficiency.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Modular Platform for Customer-Side Detection of BGP Redirection Attacks",
        "doc_scopus_id": "85052022890",
        "doc_doi": "10.5220/0006543601990206",
        "doc_eid": "2-s2.0-85052022890",
        "doc_date": "2018-01-01",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Science Applications",
                "area_abbreviation": "COMP",
                "area_code": "1706"
            },
            {
                "area_name": "Information Systems",
                "area_abbreviation": "COMP",
                "area_code": "1710"
            },
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            },
            {
                "area_name": "Safety, Risk, Reliability and Quality",
                "area_abbreviation": "ENGI",
                "area_code": "2213"
            }
        ],
        "doc_keywords": [
            "Autonomous systems",
            "Corporate customers",
            "Internet connectivity",
            "Internet service providers (ISP)",
            "Misconfigurations",
            "Modular platform",
            "Network service providers",
            "Routing information"
        ],
        "doc_abstract": "Copyright © 2018 by SCITEPRESS – Science and Technology Publications, Lda. All rights reserved.Border Gateway Protocol (BGP) enables world-wide Internet connectivity and its inherent non-secure characteristics, together with the nonexistence of a trustable identity that correlates IP network prefixes with the Autonomous Systems (AS) allowed to announce them, opens the way to attacks or misconfiguration on a world-wide scale. Since corporate customers do not have access to the whole routing information used by Internet Service Providers (ISP), they can not act against these kind of attacks and must only rely on the ISP to promptly detect and take measures to mitigate them. This paper presents a world-wide distributed probing platform, with a simple and very low cost implementation, that can be used to detect traffic routing variations. Upon detection, the corporate customer can locally deploy security policies while notifying its network service provider(s) and requesting for further actions.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Socially-Aware Multimedia Dissemination in Personal Mobile Networks",
        "doc_scopus_id": "85021105061",
        "doc_doi": "10.1007/s11277-017-4609-1",
        "doc_eid": "2-s2.0-85021105061",
        "doc_date": "2017-11-01",
        "doc_type": "Article",
        "doc_areas": [
            {
                "area_name": "Computer Science Applications",
                "area_abbreviation": "COMP",
                "area_code": "1706"
            },
            {
                "area_name": "Electrical and Electronic Engineering",
                "area_abbreviation": "ENGI",
                "area_code": "2208"
            }
        ],
        "doc_keywords": [
            "End to end delay",
            "Mobile infrastructureless networks",
            "Mobile multimedia",
            "Multimedia contents",
            "Multimedia dissemination",
            "Social behavior",
            "Social Metrics",
            "Social preference"
        ],
        "doc_abstract": "© 2017, Springer Science+Business Media, LLC.Mobile multimedia entertainment is pervasive on mobile devices, leading people to access, store and disseminate a diversity of multimedia contents anytime and anywhere. The main challenge comes from achieving high successful delivery rates with low end-to-end delays for dissemination of multimedia content at last-hop devices. This article presents a novel approach to disseminate multimedia content merging technical with social behaviors and preferences to better perform device associations. Those technical and social preferences allow to understand and infer a full social-aware behavior, aiming to create the possibility to maintain the best associations between devices through their activities and interactions in the network. The potential to consider a real social-aware behavior is presented as a solution to enhance the dissemination of multimedia content process over mobile infrastructureless networks. Through two proposed case studies: (1) Mobile Tour Guide and (2) Soccer Stadium with its own peculiarities and characteristics, we show how our proposed solution enhances the dissemination and reception of multimedia content beyond the baselines analyzed.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Supporting Unified Distributed Management and Autonomic Decisions: Design, Implementation and Deployment",
        "doc_scopus_id": "84992715372",
        "doc_doi": "10.1007/s10922-016-9398-4",
        "doc_eid": "2-s2.0-84992715372",
        "doc_date": "2017-04-01",
        "doc_type": "Article",
        "doc_areas": [
            {
                "area_name": "Information Systems",
                "area_abbreviation": "COMP",
                "area_code": "1710"
            },
            {
                "area_name": "Hardware and Architecture",
                "area_abbreviation": "COMP",
                "area_code": "1708"
            },
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            },
            {
                "area_name": "Strategy and Management",
                "area_abbreviation": "BUSI",
                "area_code": "1408"
            }
        ],
        "doc_keywords": [
            "Autonomous managements",
            "Centralized management systems",
            "Cooperative decisions",
            "Decentralized management",
            "Distributed decision",
            "Distributed network management",
            "Management functionality",
            "Management information"
        ],
        "doc_abstract": "© 2016, Springer Science+Business Media New York.Nowadays, the prevailing use of networks based on traditional centralized management systems reflects on a fast increase of the management costs. The growth in the number of network equipments and services reinforces the need to distribute the management responsibilities throughout the network devices. In this approach, each device executes common network management functionalities, being part of the overall network management platform. In this paper, we present a Unified Distributed Network Management (UDNM) framework that provides a unified (wired and wireless) management network solution, where further different network services can take part of this infrastructure, e.g., flow monitoring, accurate routing decisions, distributed policies dissemination, etc. This framework is divided in two main components: (A) Situation awareness, which sets up initial information through bootstrapping, discovery, fault-management process and exchange of management information; (B) Autonomic Decision System (ADS) that performs distributed decisions in the network with incomplete information. We deploy the UDNM framework in a testbed which involves two cities (≈ 250 km between), different standards (IEEE 802.3, IEEE 802.11 and IEEE 802.16e) and network technologies, such as, wired virtual grid, wireless ad-hoc gateways, ad-hoc mobile access devices. The UDNM framework integrates management functionalities into the managed devices, proving to be a lightweight and easy-respond framework. The performance analysis shows that the UDNM framework is feasible to unify devices management functionalities and to take accurate decisions on top of a real network.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "A quasi-realistic Internet graph",
        "doc_scopus_id": "85029416719",
        "doc_doi": "10.5220/0006440100270032",
        "doc_eid": "2-s2.0-85029416719",
        "doc_date": "2017-01-01",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Electrical and Electronic Engineering",
                "area_abbreviation": "ENGI",
                "area_code": "2208"
            },
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            },
            {
                "area_name": "Signal Processing",
                "area_abbreviation": "COMP",
                "area_code": "1711"
            }
        ],
        "doc_keywords": [
            "Construction steps",
            "Geographic characteristics",
            "Graph model",
            "Internet exchange points",
            "Quasi-realistic",
            "Routing optimization",
            "Routing security",
            "Simple structures"
        ],
        "doc_abstract": "© Copyright 2017 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.The existence of a realistic Internet interconnections model has been an important requirement to effectively support areas as routing optimization, routing security, and services QoS prediction. However, no usable and no useful models exist. The existing interconnection models are to (i) simplistic to be applicable in real scenarios, or (ii) incorporate to much uncorrelated information that cannot be used due to its complexity. This work presents the construction steps and final solution for a quasi-realist graph that models the Internet as an all. The graph is based on all known Internet exchange points (IX) and landing points of all known submarine cables. The lack of information about interconnections between IX and landing points is extrapolated from simple rules that take in consideration Earth geographic characteristics. This approach results in a graph that includes all major corner stones of the Internet while maintaining a simple structure. This graph can then be used to predict connectivity and routing properties between any two geographical points in Earth. The proof-of-concept results, even with very simplistic assumptions as similar node and link loads and symmetric routing by the shortest path, show that the model allows the prediction of the round-trip time of traffic and number of nodes between any two Internet points with an acceptable average error.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Extracting information from interval data using symbolic principal component analysis",
        "doc_scopus_id": "85018268732",
        "doc_doi": "10.17713/ajs.v46i3-4.673",
        "doc_eid": "2-s2.0-85018268732",
        "doc_date": "2017-01-01",
        "doc_type": "Article",
        "doc_areas": [
            {
                "area_name": "Statistics and Probability",
                "area_abbreviation": "MATH",
                "area_code": "2613"
            },
            {
                "area_name": "Statistics, Probability and Uncertainty",
                "area_abbreviation": "DECI",
                "area_code": "1804"
            },
            {
                "area_name": "Applied Mathematics",
                "area_abbreviation": "MATH",
                "area_code": "2604"
            }
        ],
        "doc_keywords": [],
        "doc_abstract": "© 2017, Austrian Statistical Society. All rights reserved.We introduce generic definitions of symbolic variance and covariance for random interval-valued variables, that lead to a unified and insightful interpretation of four known symbolic principal component estimation methods: CPCA, VPCA, CIPCA, and SymCov-PCA. Moreover, we propose the use of truncated versions of symbolic principal components, that use a strict subset of the original symbolic variables, as a way to improve the interpretation of symbolic principal components. Furthermore, the analysis of a real dataset leads to a meaningful characterization of Internet traffic applications, while highligting similarities between the symbolic principal component estimation methods considered in the paper.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Do we need a perfect ground-truth for benchmarking Internet traffic classifiers?",
        "doc_scopus_id": "84954233511",
        "doc_doi": "10.1109/INFOCOM.2015.7218634",
        "doc_eid": "2-s2.0-84954233511",
        "doc_date": "2015-08-21",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Science (all)",
                "area_abbreviation": "COMP",
                "area_code": "1700"
            },
            {
                "area_name": "Electrical and Electronic Engineering",
                "area_abbreviation": "ENGI",
                "area_code": "2208"
            }
        ],
        "doc_keywords": [
            "Anomaly detection",
            "Imperfect ground",
            "Internet application",
            "Internet traffic",
            "Latent class model",
            "Performance measure",
            "Statistical learning techniques",
            "Traffic classification"
        ],
        "doc_abstract": "© 2015 IEEE.The classification of Internet traffic using supervised or semi-supervised statistical learning techniques, both for anomaly detection and identification of Internet applications, has been impaired by difficulties in obtaining a reliable ground-truth, required both to train the classifier and to evaluate its performance. A perfect ground-truth is increasingly difficult, or sometimes impossible, to obtain due to the growing percentage of cyphered traffic, the sophistication of network attacks, and the constant updates of Internet applications. In this paper, we study the impact of the ground-truth on training the classifier and estimating its performance measures. We show both theoretically and through simulation that ground-truth imperfections can severely bias the performance estimates. We then propose a latent class model that overcomes this problem by combining estimates of several classifiers over the same dataset. The model is evaluated using a high-quality dataset that includes the most representative Internet applications and network attacks. The results show that our latent class model produces very good performance estimates under mild levels of ground-truth imperfection, and can thus be used to correctly benchmark Internet traffic classifiers when only an imperfect ground-truth is available.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Detecting DDoS attacks at the source using multiscaling analysis",
        "doc_scopus_id": "84919372880",
        "doc_doi": "10.1109/NETWKS.2014.6959267",
        "doc_eid": "2-s2.0-84919372880",
        "doc_date": "2014-11-14",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            },
            {
                "area_name": "Strategy and Management",
                "area_abbreviation": "BUSI",
                "area_code": "1408"
            }
        ],
        "doc_keywords": [
            "DDoS",
            "Distributed denial of service attack",
            "Efficient detection",
            "Multiscaling",
            "Periodic components",
            "Source detection",
            "Traffic analysis",
            "wavelet"
        ],
        "doc_abstract": "© 2014 IEEE.The proliferation of Distributed Denial of Service (DDoS) attacks is a constant threat to business and individuals. Existing systems proved to be inefficient when deploying counter-measures at the target of the attacks. In fact, efficient counteractions should be applied at the networks that contain the sources of the attack. However, the detection of such type of attacks at the source is extremely difficult. In this work, we propose a novel and more efficient methodology to detect DDoS attacks at the source that relies on the inherent periodicity of the traffic generated by DDoS attack sources. Detecting and quantifying the traffic periodic components using multiscaling traffic analysis based on wavelet scalograms allows an efficient detection of DDoS attacks at the source, even when the attacks are performed using encrypted channels or are embedded within licit traffic.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "A peer-to-peer system for large scale traffic measurements",
        "doc_scopus_id": "84919361255",
        "doc_doi": "10.1109/NETWKS.2014.6959269",
        "doc_eid": "2-s2.0-84919361255",
        "doc_date": "2014-11-14",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            },
            {
                "area_name": "Strategy and Management",
                "area_abbreviation": "BUSI",
                "area_code": "1408"
            }
        ],
        "doc_keywords": [
            "Large amounts of data",
            "Peer to peer",
            "Peer-to-peer architectures",
            "Peer-to-Peer system",
            "replication",
            "Resource Constraint",
            "Traffic measurements",
            "Traffic monitoring"
        ],
        "doc_abstract": "© 2014 IEEE.The characteristics of Internet traffic are becoming more and more complex due to the large and growing diversity of applications, the drastic differences in user behaviors and the mobility of users and devices, the complexity of traffic generation and control mechanisms, and the increasing diversity of link types and qualities. In such an environment, it is inevitable that network management tasks will rely heavily on (real-time) traffic measurements. Due to the large amounts of data that need to be processed and stored, measurement platforms have to become more distributed, allowing for scattered storage, replication and efficient retrieval of measurement data. This paper describes the specification, development and evaluation of distributed traffic measurement system with a peer-to-peer architecture, based on dynamic hierarchical overlay, highly adaptive to resource constraints, and providing replication of measurement data.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Framework for collecting social network events",
        "doc_scopus_id": "84919347031",
        "doc_doi": "10.1109/NETWKS.2014.6959218",
        "doc_eid": "2-s2.0-84919347031",
        "doc_date": "2014-11-14",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            },
            {
                "area_name": "Strategy and Management",
                "area_abbreviation": "BUSI",
                "area_code": "1408"
            }
        ],
        "doc_keywords": [
            "Digital interactions",
            "Graphical interface",
            "Monitoring frameworks",
            "On-line social networks",
            "Personal information",
            "Privacy and security",
            "Social interaction platform",
            "User behaviour"
        ],
        "doc_abstract": "© 2014 IEEE.Online Social Networks became a relevant part of daily digital interactions for more than half a billion users around the world. The various personal information sharing practices that social network providers promote have led to their success as innovative social interaction platforms. At the same time, these practices have risen much critique and concerns with respect to privacy and security from different stakeholders. In fact, the massive use of online social networks has risen the attention of hackers and attackers that want to propagate malware and viruses for obtaining sensitive data. In this way, every social network user should be able to easily access, control and analyse the information he shares on his profile in order to efficiently detect any usage deviation. The possibility of detecting different sources of shared information in the same account lead us to design a system based not on information itself but on the timestamps associated to it. The proposed event collector framework can collect all posted information and store it in a relational database for further analysis. Using a friendly graphical interface, users can access all stored information in a comprehensible manner, according to the type of event, thus facilitating the analysis of the user behaviour. Since each event is stored with its corresponding timestamp, it is possible to perform an efficient analysis of all posted contents, compute statistics over collected data, infer/establish the so called 'normal' or 'typical' usage profile and, thus, be able to detect possible deviations that may correspond to a compromised user account.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Customer-side detection of Internet-scale traffic redirection",
        "doc_scopus_id": "84919344201",
        "doc_doi": "10.1109/NETWKS.2014.6958532",
        "doc_eid": "2-s2.0-84919344201",
        "doc_date": "2014-11-14",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            },
            {
                "area_name": "Strategy and Management",
                "area_abbreviation": "BUSI",
                "area_code": "1408"
            }
        ],
        "doc_keywords": [
            "Attack detection",
            "BGP routes hijacking",
            "Corporate customers",
            "Encrypted communication",
            "Implementation cost",
            "Man in the middle attacks",
            "Network service providers",
            "Traffic redirections"
        ],
        "doc_abstract": "© 2014 IEEE.Recent reports of Internet-scale traffic redirection based on BGP route hijacking, for perpetration of man-in-the-middle (at distance) attacks, have put major institutions and network service providers in alert. However, corporate customers have to content with a helpless bystander and victim roles due to the lack of tools to detect and counter-act Internet-scale traffic redirection. An world-wide redirection of target traffic will compromise unencrypted communications and allow the deployment of various attacks on encrypted communications. This paper proposes a world-wide distributed probing methodology to detect traffic routing variations. Upon detection, a corporate customer cannot act in terms of Internet-scale routing but can warn its network service providers and request consequent actions. Nevertheless, upon warning, the corporate customer can locally deploy extreme security policies, like terminating sensible deferrable communications (database/information synchronization, audio/video calls) and increasing the required encryption level for public services. The proposed solution is easily deployed and has a very low implementation cost. The proof-of-concept presented in this paper uses worldwide deployed probes to detected specific traffic redirection. The results obtained reveal that the proposed methodology, due to this world-wide spreading of the probes and joint analysis of measurements, is able: (i) to detect Internet-scale traffic redirection attacks, and (ii) ignore localized licit inner-AS rerouting.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "A Facebook event collector framework for profile monitoring purposes",
        "doc_scopus_id": "84908180851",
        "doc_doi": "10.1109/ISCC.2014.6912474",
        "doc_eid": "2-s2.0-84908180851",
        "doc_date": "2014-09-26",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Software",
                "area_abbreviation": "COMP",
                "area_code": "1712"
            },
            {
                "area_name": "Signal Processing",
                "area_abbreviation": "COMP",
                "area_code": "1711"
            },
            {
                "area_name": "Mathematics (all)",
                "area_abbreviation": "MATH",
                "area_code": "2600"
            },
            {
                "area_name": "Computer Science Applications",
                "area_abbreviation": "COMP",
                "area_code": "1706"
            },
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            }
        ],
        "doc_keywords": [
            "Comprehensive analysis",
            "Confidential information",
            "Developed applications",
            "Facebook applications",
            "Monitoring frameworks",
            "No-statistical analysis",
            "Profile Hijack",
            "User behaviour"
        ],
        "doc_abstract": "© 2014 IEEE.Social networks have recently emerged to become vital tools for information and content dissemination among connections. Indeed, the immense increase of the number of users of Facebook made it rise to become the largest existing social network with more than 1.2 billion active users. However, these numbers also rose the attention of hackers and attackers who aim at propagating malware and viruses for obtaining confidential information regarding social network users. In this manner, it is crucial that each Facebook user is able to easily access, control and analyse the information shared on the corresponding profile so that profile usage deviations can be more efficiently detected. However, despite the fact that Facebook allows an analysis of all user actions through the Timeline Review, this information is not comprehensively organized and there is no statistical analysis of the user generated data. In this paper, we propose a novel framework comprising a Facebook event collector, which by being provided with an authentication token for a user profile obtained through a Facebook application developed for this purpose, collects all the corresponding posted information and stores it in a relational database for a posteriori analysis. Through the graphical interface of the developed application, users can access all stored information in a comprehensible manner, according to the type of event, thus facilitating the analysis of the user's behaviour. By storing each event with the corresponding timestamp, we are able to perform an efficient and comprehensive analysis of all posted contents and compute statistical models over the obtained data. In this manner, we can create a notion of normal usage profile and detect possible deviations which may be indicative of a compromised user account.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "DICOM interception system for independent image backup",
        "doc_scopus_id": "84904154038",
        "doc_doi": "10.1109/NOMS.2014.6838338",
        "doc_eid": "2-s2.0-84904154038",
        "doc_date": "2014-01-01",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            }
        ],
        "doc_keywords": [
            "DICOM",
            "Hospital environment",
            "Hospital information",
            "Linux distributions",
            "Management support systems",
            "Network-based",
            "Proprietary software",
            "Services management"
        ],
        "doc_abstract": "The management of network and information services in an hospital environment is an arduous task with continuous new challenges. Hospital information services should maintain a high degree of service reliability and resilience and imperative data preservation while maintaining modern and legacy end-devices, usually, with proprietary software and/or outsourced management. This paper presents the architecture and implementation results of a DICOM interception system for alternative and independent medical imaging backup in hospital IP networks. The main purpose of this network/service management support system is to capture, at the network level, DICOM images sent from different image acquisition devices to a central DICOM/PACS server and store them in multiple heterogeneous backup locations. The interception system will serve as a network based entity that will allow an independent way of performing medical imaging backup. The system will not require any change of the medical imaging devices configurations. Its importance is more relevant in hospital networks where imaging devices are older and/or include proprietary interfaces, which do not allow the definition of storing alternatives and/or do not support local temporary backup. The system is based on open-source tools available in any Linux distribution, which is the basis of a low cost and easy deployable solution. © 2014 IEEE.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Statistical characterization of P2P-TV services and users",
        "doc_scopus_id": "84901694609",
        "doc_doi": "10.1007/s11235-013-9793-z",
        "doc_eid": "2-s2.0-84901694609",
        "doc_date": "2014-01-01",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Electrical and Electronic Engineering",
                "area_abbreviation": "ENGI",
                "area_code": "2208"
            }
        ],
        "doc_keywords": [
            "SOPCast",
            "Statistical characterization",
            "Traffic measurements",
            "TVAnts",
            "TVU player"
        ],
        "doc_abstract": "P2P-TV systems will certainly contribute to innovate the broadcast TV concept by allowing ubiquitous access to a practically unlimited number of channels, representing an important step forward in the direction of the Anything/Anyone/Anywhere/Anytime communication paradigm of future Internet applications. Since its deployment, P2P-TV has already attracted millions of users and it is expected to grow exponentially in the near future, both in terms of the number and diversity of their clients. Analyzing the behavior of P2P-TV systems and users and characterizing the generated traffic are fundamental steps to understand and evaluate the potential impacts of these applications on the underlying transport network. In this paper, a set of intensive measurements was conducted in a residential Internet access environment in order to obtain a good insight over the mechanisms that govern data transfer on some of the most important P2P-TV applications (TVants, SOPCast and TVU Player) and understand the most important advances they have suffered in the latest years. Among other relevant findings, the analysis showed that peer location does not seem to be exploited by any of the studied applications and P2P-TV is already a worldwide phenomenon: using the three selected applications during 12 days of experiments, peers from 177 different countries all over the world were contacted, including countries where the interest for English-spoken channels was not so likely. © 2013 Springer Science+Business Media New York.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Using multiscale traffic analysis to detect WPS attacks",
        "doc_scopus_id": "84890886320",
        "doc_doi": "10.1109/ICCW.2013.6649386",
        "doc_eid": "2-s2.0-84890886320",
        "doc_date": "2013-12-27",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            }
        ],
        "doc_keywords": [
            "Confidential information",
            "IEEE 802.11 standards",
            "scalogram",
            "Security environments",
            "Traffic identification",
            "Wi-Fi protected access",
            "Wired equivalent privacy",
            "WPS"
        ],
        "doc_abstract": "The worldwide adoption of the IEEE 802.11 standard as the solution to provide efficient network coverage with high data-rates raised several security concerns. In a first stage, Wired Equivalent Privacy (WEP) was used to protect wireless networks from intrusions, whose main motivations ranged from simply getting free Internet access to the perpetration of complex attacks in order to retrieve confidential information. However, due to multiple technical flaws, this approach was not sufficient, leading to the emergence of the Wi-Fi Protected Access (WPA) and WPA2 technologies, which provided more secure mechanisms at the cost of requiring more complicated configuration tasks. In order to create a simple configuration interface, the Wi-Fi Alliance proposed a simple configuration approach: the Wi-Fi Protected Setup (WPS), which is used by major network products manufacturers and provides a much easier configuration setup, although in a less efficient security environment. Actually, this implementation is vulnerable to brute force attacks, which are very quick to execute, have little complexity and are difficult to detect. After cracking WPS, attackers can access to WPA/WPA2 login information and illicitly connect to the target wireless network. There are several technical requirements and legal constrains that limit access to the contents of wireless frames, thus preventing their deep analysis. This paper presents a method to detect attacks over WPA-enabled routers with Wi-Fi Protected Setup, based only on the amount of generated traffic. The detection methodology uses a monitoring station that exclusively analyzes traffic flows from the router: by monitoring traffic and using a multiscale analysis procedure, the approach is able to accurately identify each intrusion attempt. © 2013 IEEE.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "A Spanning Tree Protocol over mobile wireless ad hoc networks",
        "doc_scopus_id": "84890883192",
        "doc_doi": "10.1109/ICCW.2013.6649399",
        "doc_eid": "2-s2.0-84890883192",
        "doc_date": "2013-12-27",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            }
        ],
        "doc_keywords": [
            "Distributed knowledge",
            "IEEE 802.11 networks",
            "Mobile wireless ad hoc networks",
            "Network topology",
            "Resource consumption",
            "Root selections",
            "Spanning tree protocols",
            "Wireless ad hoc"
        ],
        "doc_abstract": "This paper proposes mobility-enabled and loop-free extensions to the Spanning Tree Protocol (STP) for wireless ad hoc environments, taking into account requirements such as loop avoidance, root selection, ability to deal with interference, path loss or multipath fading, all without requiring to modify the existing protocol stack. Our approach is compliant with IEEE 802.11 networks and considers that mobile nodes constantly join and leave the range of each other due to their unpredicted movements, often changing the network topology. This implies that coherent information must be forwarded between nodes in order to keep their distributed knowledge synchronized, to allow the spanning tree topology maintenance and avoid or remove undesirable loops in multi-hop paths. The results obtained through simulation show that WSTP ensures a lower distance between the nodes and the root when compared to an approach that performs associations based on the first contact, and therefore, it provides a lower resource consumption and lower delay in the communications. © 2013 IEEE.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Localization system for wireless networks",
        "doc_scopus_id": "84890866363",
        "doc_doi": "10.1109/ICCW.2013.6649380",
        "doc_eid": "2-s2.0-84890866363",
        "doc_date": "2013-12-27",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            }
        ],
        "doc_keywords": [
            "Developed applications",
            "Fundamental characteristics",
            "indoor",
            "Mobile multimedia applications",
            "Real-time tracking systems",
            "RSSI",
            "Trilateration",
            "Wireless environment"
        ],
        "doc_abstract": "Positioning in wireless environments is crucial for the continuity of rich and mobile multimedia applications. A good position accuracy is particularly difficult to obtain in indoor or mixed indoor-outdoor scenarios. An efficient positioning system must accurately localize any mobile terminal/user in these demanding environments, being at the same time low-cost and easy to deploy. This paper proposes a real time tracking system for Wi-Fi networks based on trilateration calculated from RSSI values that are returned by the different wireless network interfaces. A fundamental characteristic of the system is the fact that it operates in passive mode, which means that there is no relationship between the positioning system and the terminal/user whose position is being calculated. The characteristics of the developed application are presented, together with the most important considerations that were taken into account during its development phase. The accuracy of the proposed system is evaluated by applying it to different scenarios and the results obtained prove that the application is able to achieve a good precision level, in spite of being a low cost solution that is very easy to deploy in practice. © 2013 IEEE.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Detecting social-network bots based on multiscale behavioral analysis",
        "doc_scopus_id": "84894186396",
        "doc_doi": null,
        "doc_eid": "2-s2.0-84894186396",
        "doc_date": "2013-12-01",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Information Systems",
                "area_abbreviation": "COMP",
                "area_code": "1710"
            }
        ],
        "doc_keywords": [],
        "doc_abstract": "Social network services have become one of the dominant human communication and interaction paradigms. However, the emergence of highly stealth attacks perpetrated by bots in social-networks lead to an increasing need for efficient detection methodologies. The bots objectives can be as varied as those of traditional human criminality by acting as agents of multiple scams. Bots may operate as independent entities that create fake (extremely convincing) profiles or hijack the profile of a real person using his infected computer. Detecting social networks bots may be extremely difficult by using human common sense or automated algorithms that evaluate social relations. However, bots are not able to fake the characteristic human behavior interactions over time. The pseudo-periodicity mixed with random and sometimes chaotic actions characteristic of human behavior is still very difficult to emulate/simulate. Nevertheless, this human uniqueness is very easy to differentiate from other behavioral patterns. As so, novel behavior analysis and identification methodologies are necessary for an accurate detection of social network bots. In this work, we propose a new paradigm that, by jointly analyzing the multiple scales of users' interactions within a social network, can accurately discriminate the characteristic behaviors of humans and bots within a social network. Consequently, different behavior patterns can be built for the different social network bot classes and typical humans interactions, enabling the accurate detection of one of most recent stealth Internet threats.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Lightweight discovery and exchange of network information in distributed network management",
        "doc_scopus_id": "84883478997",
        "doc_doi": null,
        "doc_eid": "2-s2.0-84883478997",
        "doc_date": "2013-09-10",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            }
        ],
        "doc_keywords": [
            "Control messages",
            "Distributed management",
            "Distributed network management",
            "Management information",
            "Network discovery",
            "Network information",
            "Node cooperation",
            "Periodic exchange"
        ],
        "doc_abstract": "Node cooperation is a key part of distributed management process, requiring periodic exchange of management information between the nodes. To increase scalability of the network information exchange, network nodes need to cooperate through an efficient set of rules, policies and criteria, to minimize the time and amount of control messages flowing in the network. We propose a solution for optimized decision of the network nodes to perform discovery and exchange of network information, through a Neighbors Eyesight Direction (NED) function and cooperation between the nodes. The proposed solution is embedded into a protocol, named HIde and SeeK Directional Decision (HISK2D), which is compared against current protocols for network discovery and awareness. We show, by means of experimentation, that our HISK2D is more efficient than the base approaches analyzed, in terms of control overhead to discover the nodes, convergence time and exchange of network information according to the acquired knowledge of the network. © 2013 IFIP.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "A genetic algorithm approach to improve network nodes association",
        "doc_scopus_id": "84904110425",
        "doc_doi": "10.1109/GLOCOM.2013.6831285",
        "doc_eid": "2-s2.0-84904110425",
        "doc_date": "2013-01-01",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Electrical and Electronic Engineering",
                "area_abbreviation": "ENGI",
                "area_code": "2208"
            }
        ],
        "doc_keywords": [
            "Decision functions",
            "Fitness functions",
            "Genetic algorithm approach",
            "Input parameter",
            "Mathematical formulas",
            "Optimization method",
            "Simulation-based optimizations",
            "System behaviors"
        ],
        "doc_abstract": "In decision approaches applied to network control, it is common to use a function that encompasses a set of parameters weighted through empirically defined values. However, these weights are usually not optimized, and the error from the optimal value will be propagated to the decision function. This paper presents a method to determine the best input weight parameters according to a predefined payoff function using a genetic algorithm (GA). We have extended the GA with respect to its key elements, e.g. chromosomes coding scheme and fitness function. The method is quite general and suits any simulation-based optimization problem with multiple discrete input parameters, without requiring the whole system behavior to be expressed into a mathematical formula. The optimization method is tested in our approach for social-aware nodes' association in mobile networks, and the results show that it autonomously searches for the input weight values that lead to the best solution for the association decision, improving the results when compared to empirically defined weights. © 2013 IEEE.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "On the analysis of dissemination management information through an Eyesight perspective",
        "doc_scopus_id": "84902960854",
        "doc_doi": "10.1109/GLOCOMW.2013.6825122",
        "doc_eid": "2-s2.0-84902960854",
        "doc_date": "2013-01-01",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            }
        ],
        "doc_keywords": [
            "Controlled flooding",
            "Large networks",
            "Management information",
            "Monitoring and management",
            "Network process",
            "Research challenges",
            "Wireless scenarios"
        ],
        "doc_abstract": "The dissemination of information in wireless networks is a fundamental aspect in several network processes, such as routing, monitoring and management. Nowadays, most of the techniques for dissemination of management information adopt controlled flooding approaches, which usually impairs the network performance. In this sense, the optimization of the dissemination of management information for dense wireless scenarios remains a relevant research challenge. In this paper, it is presented and analyzed the performance of the Neighbors Eyesight Direction (NED) dissemination against to OSPF, uncontrolled flooding and Gossip approaches in wired and large network scenarios. NED is able to work on wired and dense wireless scenarios, showing to be more efficient than the baseline approaches. With lower dissemination cost and lesser recursive cycles, NED proved to be scalable to disseminate management information for scenarios with a large number of devices. © 2013 IEEE.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Characterizing and predicting internet users hidden behaviors with Markovian models",
        "doc_scopus_id": "84881472256",
        "doc_doi": null,
        "doc_eid": "2-s2.0-84881472256",
        "doc_date": "2012-12-01",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Information Systems",
                "area_abbreviation": "COMP",
                "area_code": "1710"
            },
            {
                "area_name": "Safety, Risk, Reliability and Quality",
                "area_abbreviation": "ENGI",
                "area_code": "2213"
            }
        ],
        "doc_keywords": [
            "Behavior prediction",
            "Markovian",
            "Multiscaling behaviors",
            "Multivariate Gaussian Distributions",
            "User profiling",
            "Wavelets"
        ],
        "doc_abstract": "The ability to characterize and predict Internet users behaviors in environments where only layer 2 statistics are available can be very important for a network operator. At network entry points, like Wi-Fi or WiMax access points or UMTS or LTE base stations, the operator can perform a low level monitoring of the communications independently of the data encryption level and even without being associated with the network itself. Based on this low level network data, it is possible to infer the user behavior, optimize the access service and offer new security threat detection services. The user behavior inference consists in identifying the underlying web application that is responsible by the layer 2 traffic at different time instants and characterize the usage dynamics of the different web applications. Many identification methodologies have been proposed over the last years to classify/identify IP applications, including port-based analysis, deep packet inspection, behavior-based approaches and learning theory, each one having its own advantages and drawbacks. However, all these methodologies fail when only low level statistics are available or under data encryption restrictions. We propose the use of multiscaling traffic characteristics to differentiate between different web applications and the use of a Markovian model to characterize the dynamics of the user actions over time. By applying this methodology to Wi-Fi layer 2 traffic generated by users accessing different common web services/contents through HTTP (namely social networking, web news and web-mail applications), it was possible to achieve a good matching and prediction of the users behaviors. The results show that the proposed multiscaling traffic Markovian model has the potential to identify, model and predict Internet users behaviors based only on layer 2 traffic statistics.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Analyzing the behavior of top spam botnets",
        "doc_scopus_id": "84871942598",
        "doc_doi": "10.1109/ICC.2012.6364709",
        "doc_eid": "2-s2.0-84871942598",
        "doc_date": "2012-12-01",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            },
            {
                "area_name": "Electrical and Electronic Engineering",
                "area_abbreviation": "ENGI",
                "area_code": "2208"
            }
        ],
        "doc_keywords": [
            "Botnet",
            "Botnets",
            "Command and control",
            "Control mechanism",
            "Efficient detection",
            "Enterprise networks",
            "Hard task",
            "Real traffic",
            "Security threats",
            "Source codes",
            "Spam",
            "Statistical characterization"
        ],
        "doc_abstract": "Botnets became the preferred platform for launching attacks and committing fraud on enterprise networks and the Internet itself. Characterizing existing Botnets will help to coordinate and develop new technologies to face this serious security threat. Several approaches can be taken to study this phenomenon: analyze its source code, which can be a hard task mainly due to license restrictions; study the control mechanism, particularly the activity of its Command and Control server(s); study its behavior, by measuring real traffic and collecting relevant statistics. In this work, we have installed some of the most popular spam Botnets, capturing the originated traffic and characterizing it in order to identify the main trends/patterns of their activity. From the intensive statistics that were collected, it was possible to conclude that there are distinct features between different Botnets that can be explored to build efficient detection methodologies. © 2012 IEEE.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Self-organizing decentralized wireless management through social-based metrics",
        "doc_scopus_id": "84864226131",
        "doc_doi": "10.1109/NOMS.2012.6212051",
        "doc_eid": "2-s2.0-84864226131",
        "doc_date": "2012-07-30",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Management Science and Operations Research",
                "area_abbreviation": "DECI",
                "area_code": "1803"
            }
        ],
        "doc_keywords": [
            "Control messages",
            "Distributed management",
            "Efficient sets",
            "Information exchanges",
            "Network information",
            "Network node",
            "Resource aggregation",
            "Self organizing",
            "Social-based"
        ],
        "doc_abstract": "Autonomic and distributed management requires the cooperation between the network nodes and the periodical exchange of network information between them. To increase scalability of the information exchange, network nodes need to be associated and grouped through an efficient set of rules, to minimize the amount of control messages flowing in the network. This paper proposes a community-based association between nodes, where nodes in a community are connected through social-based metrics. The proposed social-based metrics are able to join the network nodes through their characteristics and probable interactions, reducing the disconnection between nodes and optimizing the information exchange between them. The obtained results show that the social-based metrics increase stability of the links and provide better resource aggregation, decreasing the required number of messages exchanged between nodes in a distributed management approach. © 2012 IEEE.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Classification of hidden users' profiles in wireless communications",
        "doc_scopus_id": "84869598103",
        "doc_doi": "10.1007/978-3-642-30422-4_1",
        "doc_eid": "2-s2.0-84869598103",
        "doc_date": "2012-07-27",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            }
        ],
        "doc_keywords": [
            "Classification approach",
            "Frequency components",
            "Frequency spectra",
            "Interaction paradigm",
            "Layer 2",
            "Network resource",
            "Passive monitoring",
            "Scalograms",
            "Service personalization",
            "Services and applications",
            "Traffic mapping",
            "User profiling",
            "Web-based applications",
            "Wired and wireless",
            "Wireless access points",
            "Wireless communications",
            "Wireless traffic",
            "Classification approach",
            "Scalograms",
            "Service personalization",
            "Services and applications",
            "User profiling",
            "WEB application",
            "Wireless access points",
            "Wireless communications"
        ],
        "doc_abstract": "The Internet can be seen as a mix of several services and applications running on top of common protocols. The emergence of several web-applications changed the users' interaction paradigm by placing them in a more active role allowing them to share photos, videos and much more. The analysis of the profile of each user, both in wired and wireless networks, becomes very interesting for tasks such as network resources optimization, service personalization and security. In this paper, we propose a promiscuous wireless passive monitoring classification approach that can accurately create users' profiles in terms of the used web-applications and does not require authentication with the wireless Access Point. By extracting appropriate layer 2 traffic metrics, performing a Wavelet Decomposition and analyzing the obtained scalograms, it is possible to analyze the traffic's time and frequency components. An appropriate communication profile can then be defined in order to describe this frequency spectrum which is characteristic to each web-based application. Consequently, it is possible to identify the applications that are being used by the different connected clients and build user-profiles. Wireless traffic generated by several connected clients running some of the most significant web-based applications was captured and analyzed and the obtained results show that it is possible to obtain an accurate application traffic mapping and an accurate user profiling. © 2012 ICST Institute for Computer Science, Social Informatics and Telecommunications Engineering.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Nodes discovery in the in-network management communication framework",
        "doc_scopus_id": "84869594127",
        "doc_doi": "10.1007/978-3-642-30422-4_11",
        "doc_eid": "2-s2.0-84869594127",
        "doc_date": "2012-07-27",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            }
        ],
        "doc_keywords": [
            "Autonomic management",
            "Bootstrapping",
            "Collaborative decisions",
            "Communication framework",
            "Communication mechanisms",
            "Control messages",
            "Convergence time",
            "Discovery",
            "In-network management",
            "Management information",
            "Network node",
            "Self-managed networks",
            "Bootstrapping",
            "Collaborative decisions",
            "Communication framework",
            "Communication mechanisms",
            "Discovery",
            "In-network management",
            "Management information",
            "Self-managed networks"
        ],
        "doc_abstract": "The main role of a communication framework in distributed autonomic management is to support the dissemination of management information between network nodes. In distributed autonomic management, each network node intelligently self-adapts its behavior through collaboration and cooperation between the several nodes. In this paper, we propose a set of communication mechanisms between self-managed network nodes, comprehending the several stages of communication, including a bootstrapping, discovery and election of entities, and ensure the base of communication of information between nodes to perform the collaborative decisions and to enforce these decisions. We propose a bootstrapping and discovery mechanism that uses the concept of Hide & Seek, where the entities change their role dynamically according to events in the network, with dynamic probing intervals according to the number of Seekers entering or leaving the network. We compare our discovery approach with current solutions, and we show that our mechanism is more efficient both in terms of control messages overhead and convergence time. © 2012 ICST Institute for Computer Science, Social Informatics and Telecommunications Engineering.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Improving MAC layer association through social-based metrics in mobile networks",
        "doc_scopus_id": "84862272007",
        "doc_doi": "10.1109/MCOM.2012.6211491",
        "doc_eid": "2-s2.0-84862272007",
        "doc_date": "2012-06-20",
        "doc_type": "Article",
        "doc_areas": [
            {
                "area_name": "Computer Science Applications",
                "area_abbreviation": "COMP",
                "area_code": "1706"
            },
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            },
            {
                "area_name": "Electrical and Electronic Engineering",
                "area_abbreviation": "ENGI",
                "area_code": "2208"
            }
        ],
        "doc_keywords": [
            "Context information",
            "Data messages",
            "Data traffic",
            "Efficient sets",
            "Information delivery",
            "Information exchanges",
            "Layer 2",
            "MAC layer",
            "Mobile communications",
            "Mobile social networks",
            "Mobile users",
            "Mobility pattern",
            "Network efficiency",
            "Network node",
            "Network usage",
            "Online social networks",
            "Social Networks",
            "Social-based"
        ],
        "doc_abstract": "Mobile Social Network (MSN) is a social network where one or more elements share interests or commonalities by connecting with one another using mobile devices. However, contrary to traditional online social networks, efficient communication and information exchanged depends on mobile users' context. In order to increase the scalability of the information exchange, network nodes need to be associated and grouped through an efficient set of rules and criterions, to minimize the time and amount of data messages flowing in the network. This article shows how social-based metrics can increase the efficiency of layer 2 associations in mobile networks, where nodes are able to join the network through their context information and probable interactions, optimizing the information exchange at MAC layer. Through a case study of mobile communications with different mobility patterns and dissemination approaches, we show that the social-based metrics increase overall network efficiency: maximize the percentage of information delivery, decrease the time to disseminate data traffic and reduce network usage. © 2012 IEEE.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Robust feature selection and robust PCA for internet traffic anomaly detection",
        "doc_scopus_id": "84861595814",
        "doc_doi": "10.1109/INFCOM.2012.6195548",
        "doc_eid": "2-s2.0-84861595814",
        "doc_date": "2012-06-04",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Science (all)",
                "area_abbreviation": "COMP",
                "area_code": "1700"
            },
            {
                "area_name": "Electrical and Electronic Engineering",
                "area_abbreviation": "ENGI",
                "area_code": "2208"
            }
        ],
        "doc_keywords": [
            "Anomaly detection",
            "Anomaly detection methods",
            "Automatic procedures",
            "Data sets",
            "Feature selection algorithm",
            "Internet traffic",
            "Mutual informations",
            "Network condition",
            "Network scenario",
            "Outlier Detection",
            "Performance Gain",
            "Pre-processing step",
            "Robust estimators",
            "Robust feature selection",
            "Robust PCA",
            "Robust principal component analysis",
            "Robust statistics",
            "Traffic conditions"
        ],
        "doc_abstract": "Robust statistics is a branch of statistics which includes statistical methods capable of dealing adequately with the presence of outliers. In this paper, we propose an anomaly detection method that combines a feature selection algorithm and an outlier detection method, which makes extensive use of robust statistics. Feature selection is based on a mutual information metric for which we have developed a robust estimator; it also includes a novel and automatic procedure for determining the number of relevant features. Outlier detection is based on robust Principal Component Analysis (PCA) which, opposite to classical PCA, is not sensitive to outliers and precludes the necessity of training using a reliably labeled dataset, a strong advantage from the operational point of view. To evaluate our method we designed a network scenario capable of producing a perfect ground-truth under real (but controlled) traffic conditions. Results show the significant improvements of our method over the corresponding classical ones. Moreover, despite being a largely overlooked issue in the context of anomaly detection, feature selection is found to be an important preprocessing step, allowing adaption to different network conditions and inducing significant performance gains. © 2012 IEEE.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "A real-time traffic classification approach",
        "doc_scopus_id": "84857499445",
        "doc_doi": null,
        "doc_eid": "2-s2.0-84857499445",
        "doc_date": "2011-12-01",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Management of Technology and Innovation",
                "area_abbreviation": "BUSI",
                "area_code": "1405"
            },
            {
                "area_name": "Economics and Econometrics",
                "area_abbreviation": "ECON",
                "area_code": "2002"
            }
        ],
        "doc_keywords": [
            "Frequency components",
            "Frequency spectra",
            "Inherent complexity",
            "Inter-arrival time",
            "Internet application",
            "Internet applications",
            "Internet traffic",
            "Legal restriction",
            "Malicious traffic",
            "Management decisions",
            "Multi scale analysis",
            "Multi-scale Decomposition",
            "Network links",
            "Network managers",
            "Network resource",
            "Packet length",
            "Probabilistic approaches",
            "Real time traffics",
            "real-time",
            "Real-time identification",
            "Timely identification",
            "traffic classification"
        ],
        "doc_abstract": "Real-Time traffic classification is a fundamental task for many network management decisions: by timely identifying the applications that generate traffic on a specific network link, network managers can optimize the utilization of their networks; better Quality-of-Service (QoS) can be offered to connected clients while preventing the saturation of many network resources. In addition, the timely identification of malicious traffic, or of traffic presenting anomalous patterns, can be also achieved for assuring the protection of the connected hosts and network resources. However, achieving such ability is not an easy task. The inherent complexity of current Internet applications and services together with the existence of several privacy and legal restrictions prevent the analysis of the contents of the packets, thus preventing an accurate and timely traffic classification. In this paper, we address this issue by analyzing captured Internet traffic over several classification windows, until an accurate identification decision is achieved. The use of metrics such as the packet Inter-Arrival Time and the packet length will allow us to reduce the width of the classification windows, therefore achieving real-time identification. A multi-scale decomposition is then performed for evaluating the existing frequency components and a frequency spectrum profile is obtained. This profile allows an association, using several probabilistic approaches, of the traffic with the corresponding application. The obtained results show that the proposed approach can accurately and timely identify the traffic generated by the most important Internet applications, as well as identify traffic presenting illicit patterns. © 2011 ICITST.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Identification of anomalies on encrypted communications based on multi-scale behavior modeling",
        "doc_scopus_id": "84856187234",
        "doc_doi": null,
        "doc_eid": "2-s2.0-84856187234",
        "doc_date": "2011-12-01",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            },
            {
                "area_name": "Control and Systems Engineering",
                "area_abbreviation": "ENGI",
                "area_code": "2207"
            }
        ],
        "doc_keywords": [
            "Accurate mapping",
            "Behavior modeling",
            "Classification procedure",
            "E-banking",
            "Empirical distributions",
            "Encrypted communication",
            "Generic approach",
            "Identity theft",
            "Illegal activities",
            "Internet application",
            "Internet traffic",
            "Internet usage",
            "Internet users",
            "Multi scale analysis",
            "Multi-scale Modeling",
            "Multiscales",
            "Network optimization",
            "New services",
            "Packet payloads",
            "Simple approach",
            "Time-scales",
            "Traffic Engineering",
            "Traffic flow"
        ],
        "doc_abstract": "Internet usage has increased drastically in the past years due to the emergence of new services and applications such as voice, video streaming, video-conference, e-banking, etc. As the number of Internet users increased, the number of illegal activities, like spam, data and identity theft, among others, also increased in an exponential way. Identifying Internet applications became a very important task for several purposes, such as traffic engineering, quality of service, network optimization and, obviously, security. Several identification methodologies have been proposed, ranging from simple approaches like port-based methodologies to more generic approaches, like protocol statistical analysis. However, the frequent use of traffic encryption does not allow to perform inspection based on the packet payload, triggering the need for new methodologies that can provide an accurate mapping of traffic to their generating protocols based only on traffic flow statistics. This paper presents an identification methodology that relies on a multi-scale analysis of sampled traffic flows, enabling the identification of illicit activities on encrypted communications scenarios. Several multi-scale quantifiers are obtained from the multi-scale analysis of captured flows and the classification of these flows is then based on identifying the time-scales where the different multi-scale quantifiers are better discriminated. Two different approaches are used in the classification procedure: one that is based on the distances between the quantiles of the empirical distributions, assuming that the multi-scale quantifiers follow a generic probability distribution, and another methodology that assumes that the multi-scale quantifiers follow Gaussian Distributions. The methodology was applied to some of the mostly used licit Internet applications and two popular illicit applications, and the results obtained show that the proposed approach is able to accurately classify Internet traffic and identify illicit activities. © 2011 HTE.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "A multi-variate classification approach for the detection of illicit traffic",
        "doc_scopus_id": "81455142282",
        "doc_doi": null,
        "doc_eid": "2-s2.0-81455142282",
        "doc_date": "2011-11-23",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            },
            {
                "area_name": "Software",
                "area_abbreviation": "COMP",
                "area_code": "1712"
            }
        ],
        "doc_keywords": [
            "Botnets",
            "Classification approach",
            "Criminal activities",
            "Current detection",
            "Detection tools",
            "Digital information",
            "Financial loss",
            "Internet applications",
            "Multi scale analysis",
            "Multiscaling",
            "Network defense",
            "Security attacks",
            "Time windows",
            "traffic classification",
            "Traffic profile"
        ],
        "doc_abstract": "Nowadays, all commercial and personal activities rely almost exclusively on digital information that is constantly accessed, exchanged and archived over the Internet. These facts attracted the interest of the hacker community, driven by the will to obtain profits by exploiting many existing vulnerabilities. Consequently, the number of reported attacks increased dramatically, together with the financial losses associated to them. Botnets have become the cornerstone of on-line criminal activities and can be considered the most serious threat to the Internet. Current detection and prevention methodologies are not able to assure a complete protection as the complexity and subtlety of security attacks and generated illicit traffic grow: these include the encapsulation of illicit traffic in legitimate communications or the replication of normal communications profiles in order to bypass the various network defense mechanisms. Consequently, novel identification and prevention approaches must be proposed and studied in order to address all these issues. In this paper, we present a novel detection methodology that, by building high-level traffic profiles and modeling their embedded multi-scaling dynamics, can accurately identify the components created by illicit applications. The analysis of captured traffic samples over sliding time-windows allows the identification of illicit traffic components that are hidden in legitimate communications. The proposed methodology is also able to cope with the most stringent confidentially restrictions that typically prevent the use of other detection tools. © 2011 University of Split.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Joint modeling of network related events with multi-dimensional Markov Modulated Deterministic Processes",
        "doc_scopus_id": "81455142245",
        "doc_doi": null,
        "doc_eid": "2-s2.0-81455142245",
        "doc_date": "2011-11-23",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            },
            {
                "area_name": "Software",
                "area_abbreviation": "COMP",
                "area_code": "1712"
            }
        ],
        "doc_keywords": [
            "Application level",
            "Autocovariance functions",
            "Autocovariances",
            "BitTorrent",
            "Data flow",
            "Data sets",
            "Density distribution functions",
            "Deterministic process",
            "Flow statistics",
            "Integrated networks",
            "Joint estimation",
            "Joint modeling",
            "Long range dependence",
            "Matchings",
            "Mobility profiles",
            "Multiple networks",
            "Multisources",
            "Network characteristics",
            "Number of active flows",
            "Number of state",
            "Parameter fitting",
            "Proof of concept",
            "Radio base station",
            "Received signals",
            "Second order statistics",
            "Signal to noise",
            "Traffic characteristics",
            "Traffic statistics",
            "Traffic traces",
            "Univariate",
            "User location"
        ],
        "doc_abstract": "Multiple proposals for modeling networking characteristics have been proposed in the past. However, these proposals have focused in a particular networking characteristic and do not cope with modern requirements for integrated characterization and prediction of network related events. This integrated network characterization should include not only data flow statistics but also higher-level application and protocol statistics and users behaviors (including network actions and mobility profiles). Possible examples of utilizations are the joint modeling of: (i) traffic statistics with lower (wireless) network characteristics (e.g. upload and download packet and byte counts with transmitted and received signal power), (ii) flow statistics with application level statistics (e.g. number of active flows with number of active BitTorrent's multi-source downloads) and (iii) traffic characteristics with network radio statistics and with user location (e.g. amount of generated traffic, receiving signal-to-noise ratio and user distance and angle to a radio base station). Towards this objective, this paper proposes a novel multidimensional discrete Markov Modulated Deterministic Processes (dMMDPs) model, and an associate parameter fitting procedure, that leads to accurate joint estimation of the first and second order statistics of multiple network related events. The procedure matches simultaneously both the multidimensional density distribution function and the autocovariance functions of the univariate marginal statistics. One of the main features of this model is that the number of states is not fixed a priori and can be adapted to the particular dataset and to the network events that are being modeled. The individual autocovariance tail of each univariate marginal statistic can be adjusted to capture the long-range dependence characteristics of the network related events. The procedure then fits the dMMDP parameters in order to match the multi-dimensional distribution, within the constraints imposed by multiple autocovariance matchings. The number of states is also determined as part of this step. As a proof of concept, we applied the inference procedure to a BitTorrent traffic trace, modeling simultaneously the packet count both in the upload and download directions. These two traffic statistics exhibit long-range dependence. Very good results were obtained in terms of approximating the first and second order statistics of the traffic characteristics. © 2011 University of Split.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Can multiscale traffic analysis be used to differentiate Internet applications?",
        "doc_scopus_id": "80054899094",
        "doc_doi": "10.1007/s11235-010-9331-1",
        "doc_eid": "2-s2.0-80054899094",
        "doc_date": "2011-10-01",
        "doc_type": "Article",
        "doc_areas": [
            {
                "area_name": "Electrical and Electronic Engineering",
                "area_abbreviation": "ENGI",
                "area_code": "2208"
            }
        ],
        "doc_keywords": [
            "Application identification",
            "Download",
            "Multi scale analysis",
            "Multifractal behavior",
            "Upload",
            "Wavelets"
        ],
        "doc_abstract": "An accurate mapping of Internet traffic to applications can be important for a broad range of network management and measurement tasks, including traffic engineering, service differentiation, performance/failure monitoring and security. Traditional mapping approaches have become increasingly inaccurate because many applications use nondefault or ephemeral port numbers, use well-known port numbers associated with other applications, change application signatures or use traffic encryption. In this paper we will demonstrate that multiscale traffic analysis based on multi-order wavelet spectrum can be used as a discriminator of Internet applications traffic profiles. By performing clustering analysis over the multiscale wavelet spectrum coefficients that are inferred from the measured traffic, the proposed methodology is able to efficiently differentiate different IP applications without using any payload information. This characteristic will allow the differentiation of traffic flows in unencrypted and encrypted scenarios. In order to compare the differentiating potential of different traffic application data, upload, download and joint upload and download flow statistics are considered to evaluate the identification approach for each selected protocol. Moreover, we also evaluate which timescales and spectrum orders are more relevant for the traffic differentiation. From the analysis of the obtained results we can conclude that the proposed methodology is able to achieve good identification results using asmall set of timescales of a single order wavelet spectrum of a general raw traffic statistic. © 2010 Springer Science+Business Media, LLC.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Detection of illicit network activities based on multivariate Gaussian fitting of multi-scale traffic characteristics",
        "doc_scopus_id": "80052160100",
        "doc_doi": "10.1109/icc.2011.5962651",
        "doc_eid": "2-s2.0-80052160100",
        "doc_date": "2011-09-02",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            },
            {
                "area_name": "Electrical and Electronic Engineering",
                "area_abbreviation": "ENGI",
                "area_code": "2208"
            }
        ],
        "doc_keywords": [
            "flows classification",
            "Gaussian fitting",
            "Internet attacks",
            "Internet traffic",
            "IP traffic",
            "Multi scale analysis",
            "Multiscales",
            "Multivariate Gaussian Distributions",
            "Network activities",
            "On-line communication",
            "Packet payloads",
            "Real-time identification",
            "Security attacks",
            "Statistical properties",
            "Traffic characteristics",
            "Traffic flow",
            "Traffic profile"
        ],
        "doc_abstract": "Methodologies that are able to accurately identify Internet attacks and intrusions are becoming vital to assure secure on-line communications. Such methodologies must be able to act under strict confidentiality restrictions, such as traffic encryption, which are increasingly used in current communication environments. Proposed approaches must be able to analyze the traffic profiles in order to determine if the network is under a security attack or not. In this paper, we propose an approach that was designed to cope with the previously mentioned restrictions and is able to perform a pseudo real-time identification of illicit traffic: by passively analyzing some statistical properties of captured IP traffic, the methodology calculates and analyses the multi-scale properties of each traffic flow in order to infer multi-dimensional probability distributions for each one of studied protocols, allowing the analysis of the correlation between the values of several dimensions. By doing this, more exact approximations are inferred, enabling the assignment of unknown traffic to the corresponding protocol and the identification of illicit flows. The results obtained prove that the proposed technique can accurately classify Internet traffic and identify illicit flows on a quasi real-time basis. Besides, the fact that the analysis is performed over statistics that were collected for each traffic flow makes it suitable for scenarios where the packet payload is not accessible. © 2011 IEEE.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Multimedia content aggregator applied to an IPTV content-zapping service",
        "doc_scopus_id": "79960652987",
        "doc_doi": "10.1109/EUROCON.2011.5929239",
        "doc_eid": "2-s2.0-79960652987",
        "doc_date": "2011-07-27",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            },
            {
                "area_name": "Hardware and Architecture",
                "area_abbreviation": "COMP",
                "area_code": "1708"
            }
        ],
        "doc_keywords": [
            "Classification methodologies",
            "Client devices",
            "Content aggregations",
            "Content-zapping",
            "Context-awareness",
            "End-users",
            "IP networks",
            "IPTV services",
            "Multimedia contents",
            "Multimedia streaming",
            "ON dynamics",
            "Personalized multimedia",
            "Personalized recommendation",
            "Recommendation techniques",
            "User location"
        ],
        "doc_abstract": "This paper proposes a new layer for a novel IPTV service that is focused on the distribution of personalized multimedia contents over IP networks based on the concept of content-zapping, in contrast to traditional channel-zapping. Our system aims to aggregate continuously the available multimedia contents in its providers and suggest them efficiently to its endusers. Thus, the system will allow users to receive a multimedia streaming that is automatically and specifically composed for them. At the Same time, the service will dynamically classify its users, multimedia contents, multimedia providers and other crucial entities. This classification is dynamically built and gradually refined based on the interactions between all the system entities. A specific content must be suggested to one or more users not only based on the content's and user's profiles but also based on dynamic context Parameters, such as the user location, the current date/time, the user client device, the user environment, etc. In order to synthesize and Save all the knowledge, a classification methodology, learning algorithms and recommendation techniques were defined. All the proposed mechanisms were articulated in a flexible and robust architecture. A client prototype was also developed and tested together with the proposed system. © 2011 IEEE.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "FTP@VDTN A file transfer application for Vehicular Delay-Tolerant Networks",
        "doc_scopus_id": "79960635539",
        "doc_doi": "10.1109/EUROCON.2011.5929349",
        "doc_eid": "2-s2.0-79960635539",
        "doc_date": "2011-07-27",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            },
            {
                "area_name": "Hardware and Architecture",
                "area_abbreviation": "COMP",
                "area_code": "1708"
            }
        ],
        "doc_keywords": [
            "Cooperative networks",
            "Delay Tolerant Networks",
            "Dropping policy",
            "End-to-end connections",
            "File Tranfer Application",
            "File transfers",
            "FTP@VDTN",
            "Intermittent connectivity",
            "Network connectivity",
            "Network node",
            "Performance Assessment",
            "Performance evaluation",
            "Routing mechanism",
            "Routing scheme",
            "Services and applications",
            "Variable delays",
            "Vehicular networks"
        ],
        "doc_abstract": "Vehicular Delay-Tolerant Networks (VDTNs) aim to provide non-real time services and applications, such as electronic mail or file transfer, in environments with sparse and intermittent connectivity, variable delays, or where an end-to-end connection may not exist. Gathering contributions from opportunistic and cooperative networks, VDTN tries to generalize the delay-tolerant networks concept and apply it to vehicular networks. In VDTNs, data is carried between network nodes using vehicles that allow network connectivity. This paper presents a file transfer application for VDTNs, called FTP@VDTN, and studies its performance through a laboratory VDTN testbed using two routing mechanisms (Epidemic, and Spray and Wait) combined with different scheduling and dropping policies. It was demonstrated that FTP@VDTN works properly in a VDTN testbed. In terms of performance evaluation of VDTNs using FTP@VDTN, it was shown that remaining lifetime combination of scheduling and dropping policies perform better for both routing schemes. © 2011 IEEE.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "IPTV service based on a content-zapping paradigm",
        "doc_scopus_id": "79960060986",
        "doc_doi": "10.1007/s00530-010-0215-8",
        "doc_eid": "2-s2.0-79960060986",
        "doc_date": "2011-07-01",
        "doc_type": "Article",
        "doc_areas": [
            {
                "area_name": "Software",
                "area_abbreviation": "COMP",
                "area_code": "1712"
            },
            {
                "area_name": "Information Systems",
                "area_abbreviation": "COMP",
                "area_code": "1710"
            },
            {
                "area_name": "Media Technology",
                "area_abbreviation": "ENGI",
                "area_code": "2214"
            },
            {
                "area_name": "Hardware and Architecture",
                "area_abbreviation": "COMP",
                "area_code": "1708"
            },
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            }
        ],
        "doc_keywords": [
            "Broadcast TV",
            "Classification models",
            "Client devices",
            "Content-zapping",
            "Context environment",
            "Context-awareness",
            "Customization",
            "Deep knowledge",
            "Distribution services",
            "Dynamic classification",
            "Dynamic information",
            "Home networks",
            "IP networks",
            "IPTV deployments",
            "IPTV services",
            "Key component",
            "Light sensor",
            "Local temperature",
            "Media content",
            "Multimedia contents",
            "Multimedia streaming",
            "Noise sensors",
            "Over current",
            "Performance tests",
            "Personalized multimedia",
            "Service infrastructure",
            "System-based",
            "User devices",
            "User experience",
            "User preferences",
            "User profile",
            "Video on demand services"
        ],
        "doc_abstract": "Internet protocol television (IPTV) generically designates a real-time distribution service for multimedia contents over an IP network, such as the Internet. There are many advantages of IPTV deployment over current digital or air broadcast TV signals: integration, the use of the switched internet protocol (IP), the possibility to build home networks that can be used to share multimedia contents over different devices, the easy implementation of video on demand services and the usage of better compression and encryption standards. In order to implement this kind of service, it is extremely useful to have a system that can efficiently classify multimedia contents and users and distribute them in a customized way. This paper proposes a novel IPTV service for the distribution of personalized multimedia contents over IP networks based on the concept of content-zapping, in contrast to traditional channel-zapping: each client system receives a multimedia streaming that is automatically composed by the system based on the user preferences and the user will only interact with the system by requesting a content change or marking a content as favorite. The paper will describe the general functionality of the service and will present the detailed architecture of the IPTV server, the key component of the service infrastructure. The server must maintain a list of media contents residing in other systems and must keep a dynamic classification of the multimedia contents that are stored in its database. This classification is built and gradually refined based on the interactions between clients and multimedia contents. Special attention is given in the paper to the classification model, describing the general ideas that are used to automatically suggest multimedia contents to a specific user (that is characterized by his complete profile). A specific content may be suggested to the user based on the knowledge of the user profile and/or based on specific and dynamic information, such as the user position, the local temperature, date and time. The availability of this information obviously depends on the specific user device that is being used. The proposed system allows any client device to connect, allowing a high level of interoperability. It is also possible to use all the device capabilities and sensors, like Global Positioning System (GPS), accelerometers, light sensors, noise sensors, etc.; thus creating a context environment that helps classify each user profile. These context-awareness mechanisms applied to mobile devices with wireless network (802.11b/g/n, WiMAX, GSM, UMTS, etc.) capabilities allow a better user experience and more accurate multimedia suggestions, due to the deep knowledge about the user device, network and environment. The system also allows the users to suggest contents to other users in the same \"group of friends\". Several performance tests were already conducted and the results obtained show that the proposed system is very stable and fast, even for high increases on the number of users. © 2010 Springer-Verlag.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Markov modulated Bi-variate gaussian processes for mobility modeling and location prediction",
        "doc_scopus_id": "79955999368",
        "doc_doi": "10.1007/978-3-642-20757-0_18",
        "doc_eid": "2-s2.0-79955999368",
        "doc_date": "2011-05-20",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Theoretical Computer Science",
                "area_abbreviation": "MATH",
                "area_code": "2614"
            },
            {
                "area_name": "Computer Science (all)",
                "area_abbreviation": "COMP",
                "area_code": "1700"
            }
        ],
        "doc_keywords": [
            "Application scenario",
            "Complex dynamics",
            "Complex environments",
            "Discrete time",
            "Empirical data",
            "Future position",
            "Gaussian Processes",
            "Geographic regions",
            "Location prediction",
            "Management tasks",
            "Markov Chain",
            "Markov model",
            "Markovian",
            "Mobile nodes",
            "Mobility model",
            "mobility modeling",
            "Modeling approach",
            "modulated bi-variate Gaussian process",
            "Movement pattern",
            "Node-based",
            "Sub-regions",
            "Application scenario",
            "Complex dynamics",
            "Complex environments",
            "Gaussian Processes",
            "Location prediction",
            "Management tasks",
            "Markov model",
            "Mobility model"
        ],
        "doc_abstract": "A general-purpose and useful mobility model must be able to describe complex movement dynamics, correlate movement dynamics with the nodes geographic position and be sufficiently generic to map the characteristics of the movement dynamics to general geographic regions. Moreover, it should also be possible to infer the mobility model parameters from empirical data and predict the location of any node based on known positions. Having the ability to model movement and predict future positioning of mobile nodes in complex environments can be very important to several operational and management tasks. Existing mobility modeling approaches are based on simple and limited models, specifically designed for particular application scenarios or requiring the complete knowledge of the mobility environment. These features make them unusable in complex scenarios with no (or partial) knowledge of the environment. This paper presents a discrete time Markov Modulated Bi-variate Gaussian Process that is able to characterize the position and mobility of any mobile node, assuming that the position within a generic sub-region can be described by a bi-variate Gaussian distribution and the transition between sub-regions can be described by an underlying (homogeneous) Markov chain. With this approach, it is possible to describe the mobile node movement within and between a set of geographic regions determined by the model itself and, due to the Markovian nature of the model, it is also possible to capture complex dynamics and calculate the future probabilistic position of a mobile node. The proposed approach can be applied to scenarios where the possible pathways are unknown or too complex to consider in a real model that must make a prediction in a very short time. The results obtained by applying the proposed model to real and publicly available data demonstrate the accuracy and utility of this approach: the model was able to efficiently describe the movement patterns of mobile nodes and predict their future position. Besides, the model has also revealed higher performances when compared to other modeling approaches. © 2011 IFIP International Federation for Information Processing.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Analysis of the internet domain names re-registration market",
        "doc_scopus_id": "79952524163",
        "doc_doi": "10.1016/j.procs.2010.12.056",
        "doc_eid": "2-s2.0-79952524163",
        "doc_date": "2011-03-16",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Science (all)",
                "area_abbreviation": "COMP",
                "area_code": "1700"
            }
        ],
        "doc_keywords": [
            "Domain names",
            "End-users",
            "Gaining momentum",
            "General trends",
            "Internet domains",
            "Internet resources",
            "Knowledge base",
            "Name servers",
            "Rank",
            "Re-registration",
            "Secondary market"
        ],
        "doc_abstract": "Domain names registries play a central role on the Internet by enabling users to interact with services and people, as the world becomes more connected and more complex. Registries list, identify and localize Internet resources and cross-reference them with their owners. They help individuals, companies and organizations to keep track of more information and people, not just from within an organization but, increasingly, among organizations over the Internet. Since the most relevant and profitable domain names are becoming rare and investors are starting to see the value in the accumulation of a Domain Name Portfolio, several markets have started gaining momentum as a means for investors to make a profit from their Domains. The secondary market is the place to shop in today's domain world, the place where many large corporations and end-users are finding the domains they need to supplement their current on-line business presence. Due to this increasing relevance, this paper will analyze one of the two types of domain names transactions on the secondary market - re-acquisition of dropped domain names. The analysis will be based on data that was collected over a period of 2 years from the registrant name servers databases, namely, the number of dropped domains, the number of re-registered dropped domains and the total number of re-registrations during a certain period of time. Besides the analysis of general trends, re-registered domains are also analyzed in terms of the characters they contain and their Google and Alexa ranks, creating a knowledge base that can help us understand which are the main factors that influence the re-registration of a certain domain name. © 2010 Published by Elsevier Ltd.",
        "available": true,
        "clean_text": "serial JL 280203 291210 291871 31 90 Procedia Computer Science PROCEDIACOMPUTERSCIENCE 2011-02-22 2011-02-22 2014-11-19T05:11:26 S1877-0509(10)00431-X S187705091000431X 10.1016/j.procs.2010.12.056 S300 S300.5 HEAD-AND-TAIL 2021-10-14T13:27:09.37187Z 0 0 20110101 20111231 2011 2011-02-22T00:00:00Z rawtext articleinfo articletitlenorm authfirstinitialnorm authfirstsurnamenorm cid cids confabbr confdate confeditor confloc contenttype copyright crossmark dateloaded dateloadedtxt datesearch datesort dateupdated dco docsubtype doctype doi eid ewtransactionid hubeid indexeddate issn issnnorm itemstage itemtransactionid itemweight oauserlicense openaccess openarchive pg pgfirst pglast pii piinorm pubdateend pubdatestart pubdatetxt pubyr sortorder srctitle srctitlenorm srctype ssids alllist content oa subj suppl tomb vol volfirst volissue volumelist yearnav affil articletitle auth authfirstini authfull authkeywords authlast primabst pubtype ref 1877-0509 18770509 false 3 3 C Volume 3 57 325 335 325 335 2011 2011 2011-01-01 2011-12-31 2011 World Conference on Information Technology WCIT 2010 Istanbul, Turkey 6–10 October 2010 20101006 20101010 Adem Karahoca Sezer Kanbul article fla Copyright © 2011 Published by Elsevier B.V. ANALYSISINTERNETDOMAINNAMESREREGISTRATIONMARKET SALVADOR P DETTMER 2003 38 40 R KLEINWACHTER 2000 553 563 W LEIBA 2009 66 69 B MALAGA 2007 68 82 R MALAGA 2010 1 39 R ADVANCESINCOMPUTERSIMPROVINGWEBADVANCESINCOMPUTERSVOL78 SEARCHENGINEOPTIMIZATIONBLACKWHITEHATAPPROACHES MARSHALL 2000 143 145 J SALVADORX2011X325 SALVADORX2011X325X335 SALVADORX2011X325XP SALVADORX2011X325X335XP Full 2013-07-16T12:28:30Z OA-Window ElsevierWaived 0 item S1877-0509(10)00431-X S187705091000431X 10.1016/j.procs.2010.12.056 280203 2014-11-19T22:26:28.235952-05:00 2011-01-01 2011-12-31 true 1066651 MAIN 11 55193 849 656 IMAGE-WEB-PDF 1 Procedia Computer Science 00 (2010) 000â€“000 Procedia Computer Science www.elsevier.com/locate/procedia WCIT 2010 Analysis of the Internet Domain Names Re-registration Market Paulo Salvador, AntÃ³nio Nogueira* Instituto de TelecomunicaÃ§Ãµes, University of Aveiro, 3810-193 Aveiro, Portugal Abstract Domain names registries play a central role on the Internet by enabling users to interact with services and people, as the world becomes more connected and more complex. Registries list, identify and localize Internet resources and cross-reference them with their owners. They help individuals, companies and organizations to keep track of more information and people, not just from within an organization but, increasingly, among organizations over the Internet. Since the most relevant and profitable domain names are becoming rare and investors are starting to see the value in the accumulation of a Domain Name Portfolio, several markets have started gaining momentum as a means for investors to make a profit from their Domains. The secondary market is the place to shop in today's domain world, the place where many large corporations and end-users are finding the domains they need to supplement their current on-line business presence. Due to this increasing relevance, this paper will analyze one of the two types of domain names transactions on the secondary market - re-acquisition of dropped domain names. The analysis will be based on data that was collected over a period of 2 years from the registrant name servers databases, namely, the number of dropped domains, the number of re-registered dropped domains and the total number of re-registrations during a certain period of time. Besides the analysis of general trends, re-registered domains are also analyzed in terms of the characters they contain and their Google and Alexa ranks, creating a knowledge base that can help us understand which are the main factors that influence the re-registration of a certain domain name. Keywords: Domain name, secondary market, re-registration, rank. 1. Introduction In the context of a rapidly growing World Wide Web, domain names play an important role. The major reasons for registering domain names are often inter-linked and include promoting a brand name or product, generating traffic and/or advertising revenue, and brokering names on the secondary market. The usage of names not based on keywords will reflect in a larger investment creating a recognizable brand. Brands like Google or Twitter, which are based on non-English words (at the time), had to be built from zero with huge marketing budget overheads. Most newcomers to the Internet business try to cut some initial expenses by building their new service over some names/brands based on English (key)words strictly related with their business or based on already existing brands that were released by others and are TradeMark free. They target brands/names that possess an existing client base (i.e. daily visits to a particular Internet domain) and/or previous relevant marketing results (i.e. existing links in *Corresponding author. Tel.: +351 234 377 900; fax: +351 234 377 901. E-mail address: nogueira@ua.pt. câƒ� 2010 Published by Elsevier Ltd. Selection and/or peer-review under responsibility of the Guest Editor. Procedia Computer Science 3 (2011) 325â€“335 www.elsevier.com/locate/procedia 1877-0509 câƒ� 2010 Published by Elsevier Ltd. doi:10.1016/j.procs.2010.12.056 Open access under CC BY-NC-ND license. Open access under CC BY-NC-ND license. Paulo Salvador and AntÃ³nio Nogueira / Procedia Computer Science 00 (2010) 000â€“000 Internet webpages/blogs/tweets, search engines knowledge and ranking of the domain name). In the Domain Name Service (DNS) context, there are three main actors: Internet registries, commonly understood as wholesalers of domain names that maintain a centralized database for each Top-Level Domain (TLD), Internet Corporation for Assigned Names and Numbers (ICANN) [2] accredited registrars or domain name retailers, which purchase domain name from Internet registries and provide services to registrants and, finally, registrants that are individual or reseller customers of registrars [1,7,8]. The (primary) domain names market handles only with the registration of new domain names. The primary domain name market appears relatively mature. It has received considerable attention and benefited from progressively established rules, largely those introduced by the ICANN. However, the more relevant and profitable domain names are becoming rare. Internet domain names can be registered for a period of 1 to 10 years and after that period the registration must be renewed. If a domain name registration is not renewed after a certain period of time the domain will expire and will become available for registration by anyone (it is called a dropped domain). The search and acquisition of valuable domain names that are already registered or become available is known as the Internet domain names secondary market (or after-market), and can be divided in two types of transactions: (i) domains names sold by their owners and (ii) domains acquired upon their release by their previous owners. Our study will focus on the later type of transactions. Currently, the importance of this secondary market is increasing exponentially and already overcame the domain names primary market both in the number of registrations but mainly in terms of sales turnover. The importance of the domain names secondary market forced the domain name retailers to rethink or evolve their business model. Most retailers do not let (all or the more valuable) names that were not renewed by their clients to enter the deletion phase from the TLD files; instead, they temporarily register the domain as their own and try to sell the domain with an higher profit in public or private auctions. Besides, multiple commercial ventures have appeared to provide multiple services related with the domain names secondary market. The more relevant new service related with the domain names secondary market is Drop Catching. Companies providing this service give their customers the possibility to request the acquisition of a domain name that will drop soon (this is also known as backorder). Upon this request, the Drop Catching company will use their computational resources and procedures to automatically try to register the dropped domain name in the exact instant it becomes available. Domain name auction is another service that facilitates the buying and selling of currently registered domain names, enabling individuals to purchase a previously registered domain that suits their needs from an owner wishing to sell. With a domain auction there is no need to wait until (and if) a current owner allows the registration to lapse before purchasing a domain that someone wants to own. Domain brokerage, where domain name brokers can help finding buyers for domain names, is another service associated to the domain names secondary market. Another related service is domain name appraisal, which is an estimate about the potential sales price of a particular Internet domain name. Domain name appraisals are highly subjective, since they are estimates and opinions and can considerably vary depending upon the considered elements of the name and its extension. This paper will present a study on the acquisition of dropped domain names, firstly explaining how the domain names service works and then making a deeper quantitative analysis on the dropped and re-registered domains: the number of dropped domains, the number of dropped domains that are re-registered and the total number of re- registrations during a certain period of time are calculated and analyzed. Then, re-registered domains are analyzed in several different strands, as the time they take to be re-registered, the characters they contain and their Google and Alexa ranks and presence on Internet directories, trying to understand which are the main factors that influence the re-registration probability of a certain domain name. The rest of the paper is organized as follows: Section 2 presents on overview of the main aspects of the Internet domain names secondary market; Section 3 describes how the market data was acquired and presents and discusses the results and, finally, Section 4 presents the main conclusions. 2. Domain names market value The number of existing or potential visits to a particular domain name is what defines the domain intrinsic value. Visitants of a domain originate from three potential sources: (i) Internet search engines, which provide users with a list of potential interesting web pages based on the users' search keywords and previous knowledge and crawling 326 P. Salvador, A. Nogueira / Procedia Computer Science 3 (2011) 325â€“335 Paulo Salvador and AntÃ³nio Nogueira / Procedia Computer Science 00 (2010) 000â€“000 results of a particular domain; (ii) back-links (hyper-links in other webpages linking back to a domain), which may exist in all Internet content formats (standard webpages, blogs, directories of links, social networks' posts, etc, â€¦) and (iii) directly typed URLs, since some users type directly in their browsers URL director textbox some generic terms followed by most common TLD suffixes (mainly .COM) and known URLs (advertised by means of direct or indirect brand advertising). The number of registered domains had been growing at an almost constant rate until June 2008 (see Fig. 1), when we can observe a slight drop on the number of registered domains. Moreover, after July 2008 the growing rate is lower than the previous ones. These facts are explained by the 2008 economic recession. Nevertheless, the number of registered domains are still growing and at rates that are higher than the global economy itself. This also reflects the expansion, based on the natural growth and acquisition of several depleted businesses, of players with more available monetary resources. Fig. 1. Number of .COM and .NET domains registered since October 2007 until January 2010. A domain name value is relative and can be evaluated through different perspectives: (i) the domain's suffix or top level domain, (ii) the name size and the inclusion of numbers or hyphens, (iii) if it is a word or composition of dictionary relevant and trendy words, (iv) the variations from known domains, (v) the search engine optimization (SEO) [4,5] performed for a domain name, measured in terms of search engines ranking and number of back-links. First, the domain suffix, also called top level domain (TLD), determines the domain purpose and geographical context [3]. These domains with three (or more) letters are called generic TLD (gTLD) and are used for multiple proposes: commercial (.COM, .NET), organizations (.ORG), informational (.INFO), business (.BIZ) and mobile (.MOBI). Some gTLD, such as .EDU, .GOV, and .MIL, are sponsored by designated agencies or organizations and restrictions are imposed on which registrants may own such domains. These characteristics and rules exclude these domains from the secondary market. TLDs with two letters have been established for more than 240 countries or territories and are called \"country- code\" TLDs (ccTLDs). When a domain name is created its record is added to the respective TLD zone file. Each TLD zone file has an organization that is responsible for its management and maintenance. Another player is the domain name registrar, which is a company accredited by ICANN or by a national ccTLD authority to register Internet domain names. The registrar role, upon a register request, is to communicate that register to the respective TLD organization and keep a detailed domain registering information in their servers. The .com gTLD is the most popular and valued top level domain, while others such as .net and .org are less popular and ccTLDs like .US, .EU, .UK, .CN, .IN, .FR, etc... are most suitable for regional purposes. Table 1 shows that the gTLD domains together with the German, Chinese and UK domains represent the large majority of registered domains. Consequently, these TLD domains are also the most traded in the secondary market and, due to their natural purposes, .COM domains are much more valued than all the others. However, Fig. 2 depicts the geographical distribution of the domain owners, revealing that the domain names business is centered mainly in the United States, with Germany, UK, Canada and China in a far second position and with all other countries having just a small share of the business. P. Salvador, A. Nogueira / Procedia Computer Science 3 (2011) 325â€“335 327 Paulo Salvador and AntÃ³nio Nogueira / Procedia Computer Science 00 (2010) 000â€“000 Table 1. Main TLD registries general statistics, July 2009. (source: HosterStats.com) Country Registered Domains Overall Percentage .COM 81,030,022 & 47.84% .DE (Germany) 12,935,080 7.64% .CN (China) 12,545,589 7.41% .NET 12,293,418 7.26% .UK (United Kingdom) 7,768,754 4.59% .ORG 7,616,431 4.50% .INFO 5,164,116 3.05% .NL (Netherlands) 3,466,675 2.05% .EU (Europe) 2,913,452 1.72% .RU (Russia) 2,224,537 1.31% .BIZ 2,024,217 1.19% .BR (Brazil) 1,767,167 1.04% .IT (Italy) 1,713,469 1.01% .PL (Poland) 1,501,355 0.89% .AU (Australia) 1,443,296 0.85% .FR (France) 1,436,611 0.85% .CA (Canada) 1,242,386 0.73% .ES (Spain) 1,152,615 0.68% .JP (Japan) 1,098,360 0.65% .KR (South Korea) 1,019,115 0.60% .DK (Denmark) 1,009,995 0.60% .SE (Sweden) 881,337 0.52% .AT (Austria) 865,757 0.51% .MOBI 841,571 0.50% Country Registered Domains United States 65.3% Germany 5.8% United Kingdom 3.7% Canada 3.4% China 3.3.% France 2.6% Australia 2.2% Japan 1.5% Spain 1.2% Italy 1.1% â€¦ Others 9.9% Fig. 2. Geographical distribution of registers, October 2009. (source: webhosting.info) 328 P. Salvador, A. Nogueira / Procedia Computer Science 3 (2011) 325â€“335 Paulo Salvador and AntÃ³nio Nogueira / Procedia Computer Science 00 (2010) 000â€“000 The use of non-English words for domain names may have regional value but the language of the chosen words should be strictly related with the domain suffix (e.g. German Words with .DE or .AT, French words with .FR, .BE, or .CA; or Spanish words with .ES, .MX or .CL). Different countries have different constraints regarding to the entity that can register a ccTLD. These aspects, together with the different countries' potential markets, make some ccTLD domains virtually absent from the secondary market or with reduced value. Short domain names without numbers and hyphens are easier to remember, and therefore more valuable. Short domain names, based on existing words or in pronounceable terms, are ideal to create new brands by means of marketing campaigns. Larger domain names may have value if they are composed by existing words strictly related with the desired area of business or if the domain already profits from previous marketing campaigns endured by others. A domain name valuation model based on non-SEO characteristics have been presented in [9]. The secondary market clients decide to buy a domain based on trend watching. Domain names that include trend keywords generate more traffic and greater interest from potential customers. Trends can be identified by (i) analyzing the records of keywords utilized to perform searches by users and (ii) analyzing news and technological/sociological reports that may indicate future interests and related words. Domain names based on words with current (or future) high search numbers have an higher value due to its larger number of potential interested persons. A domain made available in the secondary market may be based on words that will be trendy in a near future and therefore have a potential commercial value. Another important aspect is the relationship between domain names and trademarks. A trademark is a name or logo used by a company to identify its goods or services. Many trademarks are registered, but a trademark need not be registered for an owner to protect it. Trademark laws are primarily designed to protect consumers from confusing one company's goods or services with those of another one [6]. Many companies register domain names that contain their trade marks (for example, eBay owns www.ebay.com and The Coca Cola Company owns www.cocacola.com and www.coke.com. Trademark infringement usually involves using someone's trademark on a good or service in a way that may lead to confusion about the source or affiliation of the goods or services. The same applies to domain names. If someone operates a website using a domain name that contains someone else's trademark, people seeing that domain name and/or going to that site are likely to be confused that the site is affiliated with someone else when it is not. Domain names that may be considered infringing also include intentional misspellings or confusingly similar names (for example, www.wwwebay.com, www.amizon.com). Just because a company has not registered all variations of its name or trade mark as domain names, it does not mean that others can use those domain names. Finally, and perhaps more important, are the SEO performed on a domain name. Domain names already known and indexed by search engines and/or with a high number of back-links (i.e. hyper-links in other webpages linking back to that domain) have a much higher market value. When buying a domain name the SEO value is implicitly included and may significantly reduce additional SEO and marketing costs. Search engines are index software agents that are programmed to seek for Web sites and categorize them into a cohesive manner, in order to easily search for specific information. When visiting a Web site the agent records all the text on every page and categorizes the site based on different criteria. The added value of these indexed domains results from the fact that they become more visible and accessible by potential customers. Domains names are not immediately erased from the TLS zone files after their expiration date: they follow the so-called domain life cycle. Fig. 3 presents the domain name cycle, illustrating the different domain name status and the transitions that are allowed. If the registrar of a specific domain does not renew the domain registration by the expiration date, the domain register information remains unchangeable for a period of 0 to 40 days (depending on the registrar policy). For this period, the standards and ICANN policies do not define a specific domain status, but it is usually called \"expiration\" period. When in this status, the domain registration can be renewed by the owner with a standard registration fee. After the redemption period ends the domain status changes to \"redemption period\" during 35 days, the register information is deleted but the remaining domain information is kept on the TLD zone files. The owner can still re-activate and re-register the domain but for a much higher fee (usually a value around 100 euros, although this depends on the registrar). If the owner decides to recover the domain, he must do a restoration request and the domain will change to a \"pending restore\" state for 7 days before becoming active again. Otherwise, the domain name status will change to the \"pending delete\" status for 5 days, after which the domain becomes available again for anyone who wants to register it (this event is usually called \"domain drop\"). P. Salvador, A. Nogueira / Procedia Computer Science 3 (2011) 325â€“335 329 Paulo Salvador and AntÃ³nio Nogueira / Procedia Computer Science 00 (2010) 000â€“000 Fig. 3. Domain name cycle. The Waiting List Service proposed by Verisign, the largest U.S. Internet Registrar, intends to create a waiting list for expiring domain names, in an effort to add order to the system for doling out deleted names and to make money at a time when new website purchases are dwindling. The service allows people who want a domain name that someone else owns to pay for the privilege of being first in line to snap it up once it expires. It is easy to understand that this service would basically put today's drop catchers out of business by giving Verisign a new monopoly on the distribution of expiring .COM and .NET domains. In fact, this service would require that all registrars apply for expiring domain names through VeriSign and domain name registrars and resellers argue that this new scheme would increase costs and kill their secondary domain name business models. 3. Data Retrieval and Results Analysis The retrieval of detailed information about all dropped (or soon to be dropped) domain names is extremely complex and requires massive computational and network resources due to the large information that is available and to its distributed nature between the root TLD organizations and the different registrars. The natural approach to obtain this information must be a two-step procedure: (i) obtain the root TLD file, which only contains the registered domains and the respective registrar and name servers and (ii) query the different registrars in order to obtain the registration details that include owner contacts and creation, last update and expiration dates of the domain. Due to the complexity of this process, associated with the legal and technical issues created by the massive queering of name servers, in this study we used the freely available data provided by the NameJet.com, which publishes a daily list with all (.COM and .NET) domains in \"pending delete\" status and an indication of the deletion date. After identifying the deleted domains in a particular day, we identify (30 days after the drop date) the eventual re- registration and respective (re-)creation date of those domains by consulting the registrars name servers database using the whois service. Our study analyzed the .COM and .NET domains dropped between October 2007 and January 2010. However, our detailed analysis focuses on the year 2009. Hereafter, all the analysis and statistical results will be related only to .COM and .NET domains. Fig. 4 depicts the evolution of the number of dropped domains since October 2007, together with the percentage of dropped domains in relation to the overall number of domains. It is possible to observe that the absolute number and relative percentage of dropped domains have increased until mid-2009; after this date, we can see a slight drop or a stabilization of the numbers. This increment on the average number of dropped domains can be explained, first, by the economic recession that forced many businesses to cease operations, and second, by the lower cash-flow and revenue from the specialized market players interested in the commercialization and exploration of this assets. Fig. 5 depicts an analysis of the absolute number of dropped domains and consequent re-registration within the following 30 days, for chosen weeks between November 2008 and December 2009. The weekly behavior of dropped domains registrations reveals a low percentage of dropped domain recovery in the last quarter of 2008 and first quarter of 330 P. Salvador, A. Nogueira / Procedia Computer Science 3 (2011) 325â€“335 Paulo Salvador and AntÃ³nio Nogueira / Procedia Computer Science 00 (2010) 000â€“000 2009, followed by an increment on the number of re-registrations which have stabilized around 8%-10% until the end of the year. During the entire first week of October 2009 we witnessed a constant peak in the percentage of dropped domains recovery. These facts can again be explained by the economic recession and consequent recovery, the extraordinary numbers observed in October 2009 are explained by the conjugation of three factors: (i) an increased confidence in the economy and cash-flow availability and (ii) an abnormal number of valuable domain names dropped as a result of the economic recession. Fig. 4. Evolution of the absolute number and relative percentage of dropped domains since October 2007. Fig. 5. Number of dropped domains and consequent re-registration percentage, for chosen weeks between November 2008 and December 2009. In order to study the time interval between the day a domain becomes available and its re-registration, we identified all domains dropped in four different weeks (first week of November 2008, January, July and October of 2009) and recorded if and when that domains were re-registered within the following 15 days. The results of this study are depicted in Fig. 6 to Fig. 9, and reveal that the large majority of recaptured domains are registered in the same day they become available. However, it is possible to observe that, in some cases, even 3 to 7 days after the domains have been dropped there is a high number of domains being registered. One possible explanation for these events is the existence of some on-line tools/services that identify and classify valuable available domains but, due to different payment plans, this information is provided not immediately in day 0 but only some time after. Moreover, domains dropped in a particular day are still being registered almost a year after and a small fraction were consistently re-registered every day over that period. As can be observed in Fig. 10, the domains that became available in November 1st 2008 were being registered 300 days after this date, and during that period 10 to 100 different names were registered every day. P. Salvador, A. Nogueira / Procedia Computer Science 3 (2011) 325â€“335 331 Paulo Salvador and AntÃ³nio Nogueira / Procedia Computer Science 00 (2010) 000â€“000 Fig. 6. Domain names re-registration statistics, first week of November 2008. A deeper analysis of the re-registered domains in term of the number of characters is depicted in Fig. 11. The overall distribution of the percentage of domain names re-registered in terms of domain length follows an heavy- tailed log-normal like distribution with average equal to ~11 characters and is similar to the one observed for all registered domain names. Moreover, this analysis reveals that the distribution of the domains length in terms of the number of days between drop and re-registration is similar, with the exception of small domain names (5-6 characters) that are re-registered more frequently in days 0 and 1 after the drop date. Fig. 7. Domain names re-registration statistics, first week of January 2009. . Fig. 8. Domain names re-registration statistics, first week of July 2009. 332 P. Salvador, A. Nogueira / Procedia Computer Science 3 (2011) 325â€“335 Paulo Salvador and AntÃ³nio Nogueira / Procedia Computer Science 00 (2010) 000â€“000 Fig. 9. Domain names re-registration statistics, first week of October 2009. Note that for the smaller domain names (less than 5 characters) the number of available domain names is very small and therefore no relevant conclusion can be taken. Fig. 12 depicts the percentage of re-registered domains as a function of the number of days between drop and re-registration, taking into account the distinction between domain names including only letters, only numbers, hyphens and no hyphens. This analysis reveals that names that only include letters and do not include hyphens are clearly preferred and mainly re-registered in the same day they become available. Fig. 10. Domain names re-registered for names dropped in November 1st 2008. Fig. 11. Re-registered domain names length distribution, for names dropped between October 1st and 7th, 2009. P. Salvador, A. Nogueira / Procedia Computer Science 3 (2011) 325â€“335 333 Paulo Salvador and AntÃ³nio Nogueira / Procedia Computer Science 00 (2010) 000â€“000 Fig. 12. Re Re-registered domain names analysis in terms of char types, for names dropped between October 1st and 7th, 2009. Fig. 13, Fig. 14 and Fig. 15 depict the relationship between the rankings of the domain names and the time it takes for domain names to be re-registered. From the analysis of this data, it is possible to conclude that domain names with Alexa and Google ranking values are preferred and mostly re-registered in the same day they become available. Moreover, the best ranking domain names are almost all re-acquired within the first 3 days after they become available. However, a relevant number of domains without any ranking is also re-registered in the same day they become available, meaning that the domain ranking is just one more factor that is used to valuate domains and not a fundamental factor. Fig. 13. Re-registered domain names analysis in terms of Alexa and Google ranks existence, for names dropped between October 1st and 7th, 2009. Fig. 14. Re-registered domain names detailed analysis in terms of Alexa rank, for names dropped between October 1st and 7th, 2009. 334 P. Salvador, A. Nogueira / Procedia Computer Science 3 (2011) 325â€“335 Paulo Salvador and AntÃ³nio Nogueira / Procedia Computer Science 00 (2010) 000â€“000 Fig. 15. Re-registered domain names detailed analysis in terms Google page rank, for names dropped between October 1st and 7th, 2009. 4. Conclusions The importance of the domain names secondary market is rapidly increasing and has already overcome the domain names primary market both in the number of registrations and in terms of the sales turnover. Due to this increasing relevance, this paper analyze one of the two types of domain names transactions on the secondary market: the re-acquisition of dropped domain names. The conducted analysis was based on several data collected over a period of 2 years from the registrant name servers databases: number of dropped domains, number of re-registered dropped domains and total number of re-registrations during a certain period of time. Besides the analysis of general trends, re-registered domains were also analyzed in terms of the characters they contain and their Google and Alexa ranks, creating a knowledge base that can help us understand which are the main factors that influence the re- registration of a certain domain name. References 1. R. Dettmer, Whatâ€™s in a name [internet domain name system], IEE Review 49 (11): 38â€“40 (2003). 2. W. Kleinwachter, ICANN between technical mandate and political challenges, Telecommunications Policy 24 (6-7): 553 â€“ 563 (2000). 3. B. Leiba, The good and the bad of top-level domains, IEEE Internet Computing, 13 (1): 66 â€“69 (2009). 4. R. A. Malaga, The value of search engine optimization - an action research project at a new e-commerce site, Electronic Commerce in Organizations 5 (3): 68 â€“ 82 (2007). 5. R. A. Malaga, Search engine optimizationâ€“black and white hat approaches, in M. V. Zelkowitz (editor), Advances in Computers: Improving the Web, Advances in Computers, volume 78, 1 â€“ 39, Elsevier (2010). 6. J. Marshall, Trademarks and e-business - vital partners in the 21st century, World Patent Information 22 (3): 143 â€“ 145 (2000). 7. P. Mockapetris, Domain names - concepts and facilities, RFC 1034 (Standard) (1987), updated by RFCs 1101, 1183, 1348, 1876, 1982, 2065, 2181, 2308, 2535, 4033, 4034, 4035, 4343, 4035, 4592. 8. P. Mockapetris, Domain names - implementation and specification, RFC 1035 (Standard) (1987), updated by RFCs 1101, 1183, 1348, 1876, 1982, 1995, 1996, 2065, 2136, 2181, 2137, 2308, 2535, 2845, 3425, 3658, 4033, 4034, 4035, 4343. 9. W. Zu-guang and H. Hai-yi, Domain name valuation model constructing and emperical evidence, in Multimedia Information Networking and Security, 2009. MINES â€™09. International Conference on, volume 2, 201â€“204 (2009). P. Salvador, A. Nogueira / Procedia Computer Science 3 (2011) 325â€“335 335 25â€“335 333 Paulo Salvador and AntÃ³nio Nogueira / Procedia Computer Science 00 (2010) 000â€“000 Fig. 12. Re Re-registered domain names analysis in terms of char types, for names dropped between October 1st and 7th, 2009. Fig. 13, Fig. 14 and Fig. 15 depict the relationship between the rankings of the domain names and the time it takes for domain names to be re-registered. From the analysis of this data, it is possible to conclude that domain names with Alexa and Google ranking values are preferred and mostly re-registered in the same day they become available. Moreover, the best ranking domain names are almost all re-acquired within the first 3 days after they become available. However, a relevant number of domains without any ranking is also re-registered in the same day they become PROCS 103 S1877-0509(10)00431-X 10.1016/j.procs.2010.12.056 WCIT 2010 Analysis of the internet domain names re-registration market Paulo Salvador António Nogueira ⁎ Instituto de Telecomunicações, University of Aveiro, 3810-193 Aveiro, Portugal ⁎ Corresponding author. Tel.: +351 234 377 900; fax: +351 234 377 901. Domain names registries play a central role on the Internet by enabling users to interact with services and people, as the world becomes more connected and more complex. Registries list, identify and localize Internet resources and cross-reference them with their owners. They help individuals, companies and organizations to keep track of more information and people, not just from within an organization but, increasingly, among organizations over the Internet. Since the most relevant and profitable domain names are becoming rare and investors are starting to see the value in the accumulation of a Domain Name Portfolio, several markets have started gaining momentum as a means for investors to make a profit from their Domains. The secondary market is the place to shop in today’s domain world, the place where many large corporations and end-users are finding the domains they need to supplement their current on-line business presence. Due to this increasing relevance, this paper will analyze one of the two types of domain names transactions on the secondary market—re-acquisition of dropped domain names. The analysis will be based on data that was collected over a period of 2 years from the registrant name servers databases, namely, the number of dropped domains, the number of re-registered dropped domains and the total number of re-registrations during a certain period of time. Besides the analysis of general trends, re-registered domains are also analyzed in terms of the characters they contain and their Google and Alexa ranks, creating a knowledge base that can help us understand which are the main factors that influence the re-registration of a certain domain name. Keywords Domain name market Re-registration Rank References [1] R. Dettmer What’s in a name [internet domain name system] IEE Review 49 11 2003 38 40 [2] W. Kleinwachter ICANN between technical mandate and political challenges Telecommunications Policy 24 6–7 2000 553 563 [3] B. Leiba The good and the bad of top-level domains IEEE Internet Computing 13 1 2009 66 69 [4] R.A. Malaga The value of search engine optimization—an action research project at a new e-commerce site Electronic Commerce in Organizations 5 3 2007 68 82 [5] R.A. Malaga Search engine optimization-black and white hat approaches M.V. Zelkowitz Advances in Computers: Improving the Web, Advances in Computers, Vol.~78 2010 Elsevier 1 39 [6] J. Marshall Trademarks and e-business—vital partners in the 21st century World Patent Information 22 3 2000 143 145 [7] P. Mockapetris, Domain names—concepts and facilities, RFC 1034 (Standard) (1987), updated by RFCs 1101, 1183, 1348, 1876, 1982, 2065, 2181, 2308, 2535, 4033, 4034, 4035, 4343, 4035, 4592. [8] P. Mockapetris, Domain names—implementation and specification, RFC 1035 (Standard) (1987), updated by RFCs 1101, 1183, 1348, 1876, 1982, 1995, 1996, 2065, 2136, 2181, 2137, 2308, 2535, 2845, 3425, 3658, 4033, 4034, 4035, 4343. [9] W. Zu-guang, H. Hai-yi, Domain name valuation model constructing and emperical evidence, in Multimedia Information Networking and Security, 2009. MINES ’09. International Conference on, Vol. 2, 2009, pp. 201–204. "
    },
    {
        "doc_title": "Markovian modelling of internet traffic",
        "doc_scopus_id": "79955801071",
        "doc_doi": "10.1007/978-3-642-02742-0_5",
        "doc_eid": "2-s2.0-79955801071",
        "doc_date": "2011-01-01",
        "doc_type": "Article",
        "doc_areas": [
            {
                "area_name": "Theoretical Computer Science",
                "area_abbreviation": "MATH",
                "area_code": "2614"
            },
            {
                "area_name": "Computer Science (all)",
                "area_abbreviation": "COMP",
                "area_code": "1700"
            }
        ],
        "doc_keywords": [
            "Long range dependence",
            "Markov modulated Poisson process",
            "Packet arrivals",
            "Self-similarities",
            "Time-scales"
        ],
        "doc_abstract": "This tutorial discusses the suitability of Markovian models to describe IP network traffic that exhibits peculiar scale invariance properties, such as self-similarity and long range dependence. Three Markov Modulated Poisson Processes (MMPP), and their associated parameter fitting procedures, are proposed to describe the packet arrival process by incorporating these peculiar behaviors in their mathematical structure and parameter inference procedures. Since an accurate modeling of certain types of IP traffic requires matching closely not only the packet arrival process but also the packet size distribution, we also discuss a discrete-time batch Markovian arrival process that jointly characterizes the packet arrival process and the packet size distribution. The accuracy of the fitting procedures is evaluated by comparing the long range dependence properties, the probability mass function at each time scale and the queuing behavior corresponding to measured and synthetic traces generated from the inferred models. © 2011 Springer-Verlag Berlin Heidelberg.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Improving the traffic prediction capability of neural networks using sliding window and multi-task learning mechanisms",
        "doc_scopus_id": "78649824378",
        "doc_doi": "10.1109/INTERNET.2010.11",
        "doc_eid": "2-s2.0-78649824378",
        "doc_date": "2010-12-13",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            }
        ],
        "doc_keywords": [
            "Excellent performance",
            "Functional operation",
            "Global management",
            "Global networks",
            "IP networks",
            "Multitask learning",
            "Network data",
            "Network data prediction",
            "Network emulation",
            "Network links",
            "Network scenario",
            "Network services",
            "Network traffic",
            "Neural network model",
            "Prediction capability",
            "Sliding Window",
            "Traffic prediction"
        ],
        "doc_abstract": "Due to the diversity of network services and the unpredictability of their behaviors, there is an increasing need for tools that can aid in the global management of IP networks. Being able to predict network data can be very useful to anticipate network upgrading decisions or changes on the network functional operation. This paper proposes a practical approach, based on neural networks, that is able to predict network traffic in a specific network link. In order to improve the prediction capabilities of the different neural network models, sliding window and multitask learning mechanisms are introduced and tested. By applying this prediction framework to different network links, it will be possible to predict the evolution of the global network traffic and use this information for network security, management and planning purposes. The results obtained by applying the proposed model to realistic network scenarios show that this concept can achieve excellent performance in the prediction of the network traffic on the selected links. The prediction is accurate even when there are significant changes in the number of users and their respective profiles. Moreover, the proposed prediction approach is generic and can be used to predict different network data with a very satisfactory accuracy, even with simple and small NN models. © 2010 IEEE.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "P2P-TV service and user characterization",
        "doc_scopus_id": "78249241826",
        "doc_doi": "10.1109/CIT.2010.441",
        "doc_eid": "2-s2.0-78249241826",
        "doc_date": "2010-11-19",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computational Theory and Mathematics",
                "area_abbreviation": "COMP",
                "area_code": "1703"
            },
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            },
            {
                "area_name": "Software",
                "area_abbreviation": "COMP",
                "area_code": "1712"
            }
        ],
        "doc_keywords": [
            "P2P-TV",
            "Peer",
            "SOPCast",
            "Traffic measurements",
            "TVants",
            "TVU Player",
            "User"
        ],
        "doc_abstract": "P2P-TV systems will certainly contribute to revolution the broadcast TV paradigm allowing ubiquitous access to a practically unlimited number of channels, representing an important step forward in the direction of the Anything/Anyone/Anywhere/Anytime communication paradigm of future Internet applications. Since its deployment, P2P-TV has already attracted millions of users and it is expected that P2PTV applications will grow exponentially in the near future, both in terms of the number and diversity of their clients. Analyzing the behavior of P2P-TV systems and users and characterizing the generated traffic are fundamental steps to understand and evaluate the potential impacts of these applications on the underlying transport network. By performing a set of intensive measurements, we were able to obtain a good insight on the mechanisms that govern data transfer on some of the most important P2P-TV applications (TVants, SOPCast and TVU Player) and understand the most important advances they have suffered in the latest years. Among other relevant findings, the analysis that was conducted showed that peer location does not seem to be exploited by anyone of the studied applications and P2P-TV is already a worldwide phenomenon: in only 12 days of experiments, using the three selected applications, it was possible to contact peers from 177 different countries all over the world, even including countries where the interest for English-spoken channels was not so likely. © 2010 IEEE.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Modeling self-similar traffic over multiple time scales based on hierarchical Markovian and L-System models",
        "doc_scopus_id": "77958599689",
        "doc_doi": "10.1016/j.comcom.2010.04.016",
        "doc_eid": "2-s2.0-77958599689",
        "doc_date": "2010-11-15",
        "doc_type": "Article",
        "doc_areas": [
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            }
        ],
        "doc_keywords": [
            "L-systems",
            "Markov modulated Poisson process",
            "Multiscales",
            "Self-similarities",
            "Traffic modeling"
        ],
        "doc_abstract": "Traffic engineering of IP networks requires the characterization and modeling of network traffic on multiple time scales due to the existence of several statistical properties that are invariant across a range of time scales, such as self-similarity, LRD and multifractality. These properties have a significant impact on network performance and, therefore, traffic models must be able to incorporate them in their mathematical structure and parameter inference procedures. In this work, we address the modeling of network traffic using a multi-time-scale framework. We describe and evaluate the performance of two classes of hierarchical traffic models (Markovian and Lindenmayer-Systems based traffic models) that incorporate the notion of time scale using different approaches: indirectly in the model structure through a fitting of the second-order statistics, in the case of the Markovian models, or directly, in the case of the Lindenmayer-Systems based models. Two Markovian models are proposed to describe the traffic multiscale behavior: the fitting procedure of the first model matches the complete distribution of the arrival process at each time scale of interest, while the second proposed model is constructed using a hierarchical procedure that, starting from a MMPP that matches the distribution of packet counts at the coarsest time scale, successively decomposes each MMPP state into new MMPPs that incorporate a more detailed description of the distribution at finner time scales. The traffic process is then represented by a MMPP equivalent to the constructed hierarchical structure. The proposed L-System model starts from an initial symbol and iteratively generates sequences of symbols, belonging to an alphabet, through successive application of production rules. In a traffic modeling context, the symbols are interpreted as packet arrival rates and each iteration is associated to a finer time scale of the traffic. The accuracy of the different proposed models is evaluated by comparing the probability mass function at each time scale and the queuing behavior (as assessed by the loss probability) corresponding to measured and synthetic traces generated from the inferred models. The well-known pOct Bellcore trace is used to evaluate the accuracy of the proposed models and fitting procedures. The results obtained show that these models are very effective in matching the main characteristics of the trace over the different time scales and their performances are similar. © 2010 Elsevier B.V. All rights reserved.",
        "available": true,
        "clean_text": "serial JL 271515 291210 291718 291869 31 Computer Communications COMPUTERCOMMUNICATIONS 2010-04-18 2010-04-18 2010-10-31T18:49:55 S0140-3664(10)00184-2 S0140366410001842 10.1016/j.comcom.2010.04.016 S300 S300.1 FULL-TEXT 2015-05-14T03:49:01.350499-04:00 0 0 20101115 2010 2010-04-18T00:00:00Z articleinfo crossmark dco dateupdated tomb dateloaded datesearch indexeddate volumelist yearnav articletitlenorm authfirstinitialnorm authfirstsurnamenorm cid cids confeditor contenttype copyright dateloadedtxt docsubtype doctype doi eid ewtransactionid hubeid issn issnnorm itemstage itemtransactionid itemweight openaccess openarchive pg pgfirst pglast pii piinorm pubdatestart pubdatetxt pubyr sectiontitle sortorder srctitle srctitlenorm srctype subheadings suppl vol volfirst volissue figure body mmlmath affil articletitle auth authfirstini authfull authkeywords authlast primabst ref alllist content subj ssids 0140-3664 01403664 33 33 S1 Volume 33, Supplement 1 3 S3 S10 S3 S10 20101115 15 November 2010 2010-11-15 2010 Special Issue: Heterogeneous Networks: Traffic Engineering and Performance Evaluation Demetres Kouvatsos a Madjid Merabti b a University of Bradford, UK b Liverpool John-Moores University, UK Part one: Traffic Modelling and Characterisation article fla Copyright © 2010 Elsevier B.V. All rights reserved. MODELINGSELFSIMILARTRAFFICOVERMULTIPLETIMESCALESBASEDHIERARCHICALMARKOVIANLSYSTEMMODELS NOGUEIRA A 1 Introduction 2 Hierarchical Markovian models 2.1 Superposition model 2.2 Decomposition model 2.3 Parameter inference procedures 2.3.1 Aggregation process 2.3.2 Inference of the partial dMMPPs 2.3.3 Calculation of the empirical PMFs 2.3.4 Inference of the dMMPPs parameters 2.3.5 Construction of the equivalent dMMPP model 3 L-System model 3.1 Parameter inference procedure 4 Results 5 Conclusions References LELAND 1994 1 15 W PAXSON 1995 226 244 V CROVELLA 1997 835 846 M WILLINGER 1997 71 86 W LINDENMAYER 1968 300 315 A MEIERHELLSTERN 1987 370 377 K KANG 1995 1422 1426 S LI 1997 95 110 S ANDERSEN 1998 719 732 A YOSHIHARA 2001 185 211 T SALVADOR 2003 123 148 P KEMPKEN 2008 77 90 S NOGUEIRAX2010XS3 NOGUEIRAX2010XS3XS10 NOGUEIRAX2010XS3XA NOGUEIRAX2010XS3XS10XA item S0140-3664(10)00184-2 S0140366410001842 10.1016/j.comcom.2010.04.016 271515 2010-12-12T18:37:51.84118-05:00 2010-11-15 true 637684 MAIN 8 54136 849 656 IMAGE-WEB-PDF 1 si133 4698 52 373 si129 5451 62 275 si117 4830 53 256 si109 2892 28 207 si107 2595 51 130 si104 1437 28 76 si101 5241 54 258 si80 4863 52 253 si65 3858 46 224 si62 3654 46 185 si48 2085 24 136 si35 7515 73 376 si99 465 13 9 si98 672 15 24 si97 459 15 9 si96 465 13 9 si95 732 15 36 si94 1686 18 143 si93 1653 27 99 si92 1362 17 71 si91 1662 19 154 si90 465 13 9 si9 585 18 14 si89 1404 17 121 si88 1713 21 140 si87 3051 24 221 si86 1296 22 73 si85 3288 23 258 si84 744 21 21 si83 768 21 23 si82 987 20 41 si81 657 23 17 si8 2550 19 271 si79 926 25 178 si78 357 17 55 si77 307 17 41 si76 743 19 189 si75 554 20 135 si74 230 16 18 si73 230 16 18 si72 478 18 67 si71 361 21 39 si70 410 22 59 si7 655 17 171 si69 466 24 70 si68 496 23 62 si67 361 21 39 si66 420 21 49 si64 292 18 22 si63 361 21 39 si61 741 21 160 si60 838 27 134 si6 290 15 37 si59 369 19 36 si58 575 21 94 si57 361 21 39 si56 369 19 36 si55 401 21 45 si54 285 18 21 si53 361 21 39 si52 361 21 39 si51 190 13 9 si50 452 20 70 si5 236 13 20 si49 1204 30 236 si47 1301 19 314 si46 478 18 67 si45 583 20 104 si44 376 19 43 si43 944 24 183 si42 333 17 69 si41 347 17 69 si40 230 16 18 si4 448 17 92 si39 190 13 9 si38 1253 19 304 si37 929 22 180 si36 387 19 44 si34 631 23 129 si33 349 20 51 si32 383 18 58 si31 188 15 9 si30 190 13 9 si3 190 13 9 si29 534 23 97 si28 445 18 80 si27 279 15 36 si26 373 18 77 si25 188 15 9 si24 190 13 9 si23 230 16 18 si22 478 18 67 si21 190 13 9 si20 230 16 18 si2 478 18 67 si19 282 17 40 si18 478 18 67 si17 190 13 9 si16 190 13 9 si15 190 13 9 si14 190 13 9 si132 610 31 94 si131 456 26 74 si130 311 25 27 si13 212 17 13 si128 366 26 40 si127 301 17 37 si126 541 20 137 si125 1144 26 219 si124 861 26 208 si123 427 26 60 si122 731 21 219 si121 1067 25 305 si120 209 17 14 si12 340 19 47 si119 337 25 30 si118 643 25 116 si116 440 26 59 si115 1116 31 209 si114 219 16 17 si113 481 26 72 si112 553 18 145 si111 404 19 68 si110 259 15 36 si11 310 17 44 si108 279 15 36 si106 190 13 9 si105 188 15 9 si103 188 15 9 si102 190 13 9 si100 188 15 9 si10 190 13 9 si1 666 17 175 gr2 81154 699 623 gr2 5688 164 146 gr3 13681 130 378 gr3 3402 75 219 gr4 27207 283 359 gr4 11606 164 208 gr5 18562 224 362 gr5 5308 136 219 gr6 17342 225 378 gr6 4438 130 219 gr1 52267 305 734 gr1 5340 91 219 COMCOM 4244 S0140-3664(10)00184-2 10.1016/j.comcom.2010.04.016 Elsevier B.V. Fig. 1 Construction methodology of the: (left) superposition dMMPP; (right) decomposition dMMPP. Fig. 2 Inference procedure of the (left) superposition model; (right) decomposition model. Fig. 3 Construction of the traffic process based on the L-System. Fig. 4 LRD evidence, trace pOct. Fig. 5 Comparison of the PMFs at the smallest time scale. Fig. 6 Packet loss ratio, ρ =0.7. Modeling self-similar traffic over multiple time scales based on hierarchical Markovian and L-System models António Nogueira a ⁎ Paulo Salvador a Rui Valadas a António Pacheco b a University of Aveiro/Instituto de Telecomunicações, Campus de Santiago, 3810-193 Aveiro, Portugal b Instituto Superior Técnico – UT Lisbon/Department of Mathematics and CEMAT, Av. Rovisco Pais, 1049-001 Lisboa, Portugal ⁎ Corresponding author. Tel.: +351 234377900. Traffic engineering of IP networks requires the characterization and modeling of network traffic on multiple time scales due to the existence of several statistical properties that are invariant across a range of time scales, such as self-similarity, LRD and multifractality. These properties have a significant impact on network performance and, therefore, traffic models must be able to incorporate them in their mathematical structure and parameter inference procedures. In this work, we address the modeling of network traffic using a multi-time-scale framework. We describe and evaluate the performance of two classes of hierarchical traffic models (Markovian and Lindenmayer-Systems based traffic models) that incorporate the notion of time scale using different approaches: indirectly in the model structure through a fitting of the second-order statistics, in the case of the Markovian models, or directly, in the case of the Lindenmayer-Systems based models. Two Markovian models are proposed to describe the traffic multiscale behavior: the fitting procedure of the first model matches the complete distribution of the arrival process at each time scale of interest, while the second proposed model is constructed using a hierarchical procedure that, starting from a MMPP that matches the distribution of packet counts at the coarsest time scale, successively decomposes each MMPP state into new MMPPs that incorporate a more detailed description of the distribution at finner time scales. The traffic process is then represented by a MMPP equivalent to the constructed hierarchical structure. The proposed L-System model starts from an initial symbol and iteratively generates sequences of symbols, belonging to an alphabet, through successive application of production rules. In a traffic modeling context, the symbols are interpreted as packet arrival rates and each iteration is associated to a finer time scale of the traffic. The accuracy of the different proposed models is evaluated by comparing the probability mass function at each time scale and the queuing behavior (as assessed by the loss probability) corresponding to measured and synthetic traces generated from the inferred models. The well-known pOct Bellcore trace is used to evaluate the accuracy of the proposed models and fitting procedures. The results obtained show that these models are very effective in matching the main characteristics of the trace over the different time scales and their performances are similar. Keywords Traffic modeling Self-similarity Multiscale Markov modulated Poisson process L-system 1 Introduction The complexity associated to mechanisms for traffic generation and control, as well as the diversity of applications and services, have introduced several peculiar behaviors in network traffic, such as self-similarity, long-range dependence and multifractality, which have a significant impact on network performance [1–4]. These behaviors have in common a property of statistical invariance across a range of time scales. Thus, suitable traffic models must be able to capture statistical behavior on multiple time scales. Multi-time-scale characteristics can be incorporated in the parameter fitting procedure or can be intrinsically embedded in the model structure. This paper extends the work published in [5] by evaluating and comparing the performance of two classes of traffic models, Markovian and Lindenmayer-Systems based models, that incorporate the notion of time scale using different approaches: indirectly via the fitting of the second-order statistics, in the case of Markovian models, or directly in the model structure, in the case of Lindenmayer-Systems based models. The first Markovian approach proposes a parameter fitting procedure for a superposition of discrete-time Markov Modulated Poisson Processes (dMMPPs) that captures self-similar behavior over a range of time scales. Each dMMPP models a specific time scale and the parameter fitting procedure matches, at each time scale, a dMMPP to a Probability Mass Function (PMF) that describes the contribution of that time scale to the overall traffic behavior. The number of states of each dMMPP is not fixed a priori; it is determined as part of the fitting procedure. This model will be designated by superposition model. In the second proposed Markovian model, the construction procedure successively decomposes dMMPP states into new dMMPPs, thus refining the traffic process by incorporating the characteristics offered by finer time scales. This refinement process is iterated until a pre-defined number of time scales are integrated. Finally, a dMMPP incorporating this hierarchical structure is derived. Similarly to the previous model, the number of states of each dMMPP is not fixed a priori; it is determined as part of the fitting procedure. This second model will be designated by decomposition model. The third proposed traffic model is based on stochastic Lindenmayer-Systems (hereafter referred to as L-Systems). L-Systems are string rewriting techniques which were introduced by biologist A. Lindenmayer in 1968 as a method to model plant growth [6] and are characterized by an alphabet, an axiom and a set of production rules: the alphabet is a set of symbols; the production rules define transformations of symbols into strings of symbols; starting from an initial string (the axiom), an L-System constructs iteratively sequences of symbols through replacement of each symbol by the corresponding string according to the production rules. If the production rules are random, the L-System is called a stochastic L-System and can be used to recursively construct random sequences with multi-time-scale behavior. The accuracy of the different models is evaluated by applying them to the well-known pOct Bellcore trace (that exhibits self-similar behavior) and comparing the PMF at each time scale and the queuing behavior (as assessed by the loss probability) corresponding to the measured and to synthetic traces generated from the inferred models. Our results show that the proposed fitting methods are very effective in matching the PMF at the various time scales and lead to an accurate prediction of the queuing behavior. Several fitting procedures have been proposed in the literature for estimating the parameters of MMPPs from empirical data [7–14]. However, most procedures only apply to 2-MMPPs, which can capture traffic burstiness but have an insufficient number of states to reproduce variability over a wide range of time scales. On the other hand, the fitting procedures for MMPPs with an arbitrary number of states mainly concentrate on matching first- and/or second-order statistics, without addressing directly the issue of modeling over multiple time scales. The application of stochastic L-Systems in the characterization of packet arrival processes was first introduced by the authors in [15], with very good fitting results. The paper is organized as follows. Section 2 describes the proposed hierarchical Markovian models, including their parameter fitting procedures; Section 3 presents the L-System model and its corresponding parameter fitting procedure; Section 4 presents and discusses the obtained comparison results; and, finally, Section 5 presents the main conclusions. 2 Hierarchical Markovian models The hierarchical Markovian models are constructed based on the PMF of the arrival process at each time scale, thus enabling them to capture the traffic self-similar behavior over a range of time scales. The number of time scales to consider, L, is fixed a priori and time scales are numbered in an ascending way, from l =1 (corresponding to the largest scale) to l = L (corresponding to the finest one). 2.1 Superposition model The first traffic model is based on the superposition of dMMPPs, each one representing a specific time scale. The left part of Fig. 1 illustrates the dMMPP construction methodology for the simple case of having only three time scales and two-state dMMPPs at each time scale. The dMMPP associated to time scale l will be designated by dMMPP(l), and its corresponding number of states by N (l). The flow diagram of the inference procedure is represented in the left part of Fig. 2 where, basically, four major steps can be identified: (i) calculation of the data vectors (corresponding to the average number of arrivals per time interval) at each time scale, by applying an iterative aggregation process that starts at the finest time scale and ends at the largest one; (ii) calculation of the empirical PMF corresponding to the largest time scale and inference of the corresponding dMMPP; (iii) for the other time scales (starting from the largest to the finest one), calculation of the empirical PMF, calculation of its deconvolution from the empirical PMF of the preceding time scale and inference of a dMMPP that adjusts the resulting empirical PMF (the shaded part of the flow diagram); (iv) calculation of matrices Λ and P of the final dMMPP through the superposition of the different dMMPPs that were inferred for each time scale. The different steps of the inference procedure will be detailed later in the section. 2.2 Decomposition model The second proposed traffic model is constructed based on a decomposition process that successively decomposes the states of a dMMPP corresponding to a certain time scale on new dMMPPs belonging to the immediately following finer time scale, refining in this way the traffic process by including the characteristics that are offered by successively finer time scales. The procedure starts at the largest time scale by inferring a dMMPP that adjusts the PMF corresponding to that scale. As part of the parameter inference procedure, each time interval of the data sequence is attributed to a state of the dMMPP; in this way, a new PMF will be associated to each state of the dMMPP. On the next finer time scale, each state of the dMMPP is decomposed into a new dMMPP that adjusts the contribution of that time scale to the PMF of the state from which the dMMPP descends. In this way, a child dMMPP gives a more detailed description of the PMF corresponding to its parent state. This refinement process is iterated until a pre-defined number of time scales has been integrated into the model. Finally, a dMMP that incorporates this hierarchical structure is derived. The construction procedure of the decomposition model can be described by a tree where, with the exception of the root node, each node of the tree corresponds to a state of a dMMPP and each level of the tree corresponds to a time scale. The right part of Fig. 1 illustrates the construction methodology of this dMMPP, again for the simple case of considering only three time scales and two-sate dMMPPs at each time scale. Each state of a dMMPP will be represented by a vector that indicates the path from the highest level predecessor (that is, the state at the largest scale, l =1, from which it descends) to itself. So, a state that is located at time scale l will be represented by a vector of the type s → = ( s 1 , s 2 , … , s l ) , s i ∈ N . Each dMMPP will be represented by the state that originated it, that is, its parent state. So, we consider that dMMPP s → represents the dMMPP that is generated by state s → and { 1 , 2 , … , N s → } is the set of its states, where N s → designates the number of states. The root node of the tree corresponds to a virtual node, designated by s → = ∅ , and is used to represent the dMMPP that is located at the largest time scale, l =1. This dMMPP will be designated by root dMMPP. In this way, the states of the dMMPPs that belong to the tree structure are characterized by vectors s → = ( s 1 , s 2 , … , s l ) , l ∈ N , with s i + 1 ∈ { 1 , 2 , … , N s → i ] } , i = 0 , 1 , … , l - 1 ; here, s → j ] designates the sub-vector of s → given by (s 1, s 2,…, s j ), with j < | s → | and s → 0 ] = ∅ , where | s → | represents the length of vector s → . Note that, with this notation, a vector s → can represent both state s → and the dMMPP generated by s → . Besides, the time scale where dMMPP s → belongs to is given by | s → | + 1 . Finally, consider that E s → represents the set of time intervals associated to state s → , that is, to dMMPP s → . Using this notation, the set of time intervals associated to dMMPP∅ will be E ∅ ={1,2,…, N}, where N corresponds to the number of time intervals existing in the finest time scale. Starting from E ∅, the sets E s → are successively fractioned at each time scale in a hierarchical way. Thus, if states s → and t → are such that | s → | = | t → | = l and s → ≠ t → , then E s → ∩ E t → = ∅ and ⋃ s → : | s → | = l E s → = E ∅ . Besides, if state s → is a parent of state t → , that is, t → = ( s → , j ) , then E t → ⊆ E s → and ⋃ j = 1 , … , N s → E ( s → , j ) = E s → . The inference procedure is represented in flow diagram of the right part of Fig. 2 where, basically, the following major steps can be identified: (i) calculation of the data vectors (corresponding to the average number of arrivals per time interval) at each time scale, by applying an iterative aggregation process that starts at the finest time scale and ends at the largest one; (ii) calculation of the empirical PMF corresponding to the largest time scale, l =1, and inference of the corresponding dMMPP; (iii) for the other time scales (starting from the largest to the finest one), l =2,…, L −1, and for every state of each parent dMMPP, the inference procedure identifies the time intervals that are associated to that state, calculates the corresponding empirical PMF and infers the dMMPP that adjusts the contribution of the time scale to the PMF of that state (the shaded part of the flow diagram); (iv) finally, calculation of the matrices Λ and P of the equivalent dMMPP that incorporates the previously described hierarchical structure. Note that both parameter inference procedures are based on aggregated processes and the number of states of the dMMPPs is calculated as part of the inference procedure. Both inference methods have some common steps. We next present the different steps of the inference procedures in detail. 2.3 Parameter inference procedures 2.3.1 Aggregation process This first step is common to the inference procedures of both the superposition and decomposition models. After defining the sample interval at the finest time scale, Δt, the number of time scales, L, and the aggregation level, a, the aggregation process starts by calculating the data sequence corresponding to the number of arrivals at the finest time scale, D (L)(k),k =1,2,…, N. Then, the data sequences corresponding to the remaining time scales, D (l)(k), l = L −1,…,1, are calculated and they correspond to the average number of arrivals on intervals of length Δta (L−l). These data sequences are obtained in the following way: D ( l ) ( k ) = Ψ 1 a ∑ i = 0 a - 1 D ( l + 1 ) ( k + ia L - l - 1 ) , k - 1 a L - l ∈ N 0 , D ( l ) ( k - 1 ) , k - 1 a L - l ∉ N 0 , where Ψ(x) represents a function that rounds x to its nearest integer. Note that all data sequences have the same length N and D (l)(k) is made of sub-sequences composed by a L−l necessarily equal values; these sub-sequences are designated as l-sequences. The empirical distribution of D (l)(k) will be designated by p ˆ ( l ) ( x ) . 2.3.2 Inference of the partial dMMPPs On both proposed traffic models, all partial dMMPPs are inferred in order to adjust an empirical PMF. For the largest time scale, this PMF corresponds to the most aggregated data sequence, D (1)(k). For all other time scales l, l =2,…, L, the associated dMMPPs will model only the traffic components related to each scale, but at this point the two traffic models diverge in the way partial dMMPPs are calculated. On the superposition model, there will be only one dMMPP per time scale, inferred according to the flow diagram on the left of Fig. 2. On the decomposition model, a dMMPP will be inferred for each state that is located on the immediately higher time scale. So, for each dMMPP and for each time scale, the PMF that is adjusted represents the contribution of that scale to the PMF corresponding to its parent state. The parameter inference procedure for each dMMPP of the tree structure includes several steps that are highlighted on the shaded part of its flow diagram and are explained in detail in the next paragraphs. 2.3.3 Calculation of the empirical PMFs The operations that are involved in this step are basically the same for both proposed traffic models, although the number of PMFs per time scale is different in both cases. For the largest time scale, the considered PMF is simply the empirical one, for both traffic models. For all other time scales, l =2,…, L, the PMFs that are calculated in each model are different. On the superposition model, each dMMPP is inferred from the PMF that represents its contribution for a given time scale. The traffic components that represent the contribution of time scale l, l =2,…, L, are obtained through the deconvolution between the empirical PMFs corresponding to scale l itself and to the previous time scale, l −1, that is, f ˆ p ( l ) ( x ) = [ p ˆ ( l ) ⊗ - 1 p ˆ ( l - 1 ) ] ( x ) . However, this operation can lead to non-zero values for the probabilities of obtaining negative arrival rates for the dMMPP(l), that will occur whenever min { x : p ˆ ( l - 1 ) ( x ) > 0 } < min { x : p ˆ ( l ) ( x ) > 0 } . On the decomposition model, the construction of a dMMPP located at time scale l and generated from state s → corresponds also to the deconvolution of empirical PMFs, but now calculated over the set of time intervals E s → , corresponding to this time scale, l = | s → | + 1 , and to the previous one, l - 1 = | s → | , that is, f ˆ p s → ( x ) = [ p ˆ s → , | s → | + 1 ⊗ - 1 p ˆ s → , | s → | ] ( x ) , where p ˆ s → , l ( x ) represents the PMF obtained from the data sequence D ( l ) ( k ) , k ∈ E s → . Note that, even though the two empirical PMFs are obtained from the same set of time intervals, they are aggregated on different levels. Once again, these operations can result on non-zero values for the probabilities of obtaining negative arrival rates for the dMMPP s → , that will occur whenever min { x : p ˆ s → , | s → | ( x ) > 0 } < min { x : p ˆ s → , | s → | + 1 ( x ) > 0 } . In order to correct these meaningless results, from a physical point of view, that can occur on both traffic models, the dMMPP χ will be adjusted to f ˆ χ ( x ) = f ˆ p χ ( x + e χ ) where e χ = min 0 , min x : f ˆ p χ ( x ) > 0 , which guarantees f ˆ χ ( x ) = 0 , x <0, where we are considering that superscript χ replaces (l) on the description of the superposition model and s → on the description of the decomposition model (this notation will be maintained from now on). The additional factors that are now being introduced will be removed in the final step of the inference procedure. 2.3.4 Inference of the dMMPPs parameters This step of both inference procedures corresponds to the estimation of the characterizing parameters of each dMMPP, that is, the matrices corresponding to the transition probabilities and the Poisson arrival rates for each state. The first step of the dMMPP χ parameter inference procedure is the approximation of f ˆ χ ( x ) by a weighted sum of Poisson probability functions. This operation is based on an algorithm, introduced in [12], that progressively subtracts a Poisson probability function from function f ˆ χ ( x ) . Let us represent the nth Poisson probability function, with mean value φ n χ , by g φ n χ ( x ) and define h n χ ( x ) as the difference between f ˆ χ ( x ) and the weighted sum of Poisson probability functions corresponding to the nth iteration. Initially, one makes h 1 χ ( x ) = f ˆ χ ( x ) and, at each step, the procedure starts by detecting the maximum value of h n χ ( x ) . The corresponding value of x, φ n χ = arg max x h n χ ( x ) , will be considered as the nth Poisson arrival rate of dMMPP χ . Then, the weights of each Poisson probability function, w → n χ = [ w 1 n χ , w 2 n χ , … , w nn χ ] , are calculated through the following set of linear equations: f ˆ χ ( φ m χ ) = ∑ j = 1 n w jn χ g φ j χ ( φ m χ ) for m =1,…, n. This assures that the adjustment between f ˆ χ ( x ) and the weighted sum of Poisson probability functions is exact at points φ m χ , for m =1,2,…, n. The final step of each iteration is the calculation of the new difference function: h n + 1 χ ( x ) = f ˆ χ ( x ) - ∑ j = 1 n w jn χ g φ j χ ( x ) The algorithm will stop when the maximum value of h n + 1 χ ( x ) is smaller or equal to a pre-defined percentage of the maximum value of f ˆ χ ( x ) . At this time, the number of states of the dMMPP χ , N χ , is made equal to n. After calculating the value of N χ , the dMMPP χ parameters, { ( π j χ , λ j χ ) , j =1,2,…, N χ }, are made equal to π j χ = w jN χ χ and λ j χ = φ j χ . Note that the number of states of each dMMPP depends on the precision level that is used for approximating f ˆ χ ( x ) by the weighted sum of Poisson probability functions. The next step of the parameter inference procedure associates, for each time scale l, one of the dMMPP χ states with each time interval of the arrival process. Remember that the data sequences aggregated on time scale l contain a L−l successive equal values, and have been designated as l-sequences. For the decomposition model, the set of time intervals associated to dMMPP s → is given by E s → and the objective of this step is to divide E s → in sub-sets E ( s → , j ) , j = 1 , … , N s → . For the superposition model, the set of time intervals associated to any dMMPP(l), l =1,2,…, L, is equal to {1,2,…, N}, where N corresponds to the number of time intervals existing in the finest time scale, that is, it is equal to set E ∅ that was defined for the decomposition model. The procedure responsible for assigning states considers only the first time interval of each l-sequence, defined by i = a L - χ ′ ( k - 1 ) + 1 , k ∈ N , with i ∈ E s → for the decomposition model and i ∈{1,2,…, N} for the superposition model, where symbol χ ′ is equal to ( | s → | + 1 ) for the decomposition model and equal to (l) for the superposition model. The state that is assigned to the ith l-sequence is randomly calculated according to the probability vector θ → χ ( i ) = { θ 1 χ ( i ) , … , θ N χ χ ( i ) } , with θ n χ ( i ) = g λ n χ ( D χ ′ ( i ) ) ∑ j = 1 N χ g λ j χ ( D χ ′ ( i ) ) for n =1,…, N χ , where λ j χ represents the Poisson arrival rate of the dMMPP χ jth state, and g λ (y) represents a Poisson probability distribution function with mean λ. The elements of this vector represent the probability that state n has originated the number of arrivals D χ ′ ( i ) at time interval i belonging to time scale χ ′. After this step, the dMMPP χ transition probabilities, p od χ , with o, d =1,…, N χ , can be inferred by simply counting the number of transitions that occur between each pair of states. If n od χ represents the number of transitions from state o to state d of the dMPPP χ , then p od χ = n od χ / ∑ m = 1 N χ n om χ , o , d = 1 , … , N χ . The transition probability and the Poisson arrival rate matrices corresponding to dMMPP χ are then given by P χ = { p ij χ } , where i, j =1,…, N χ , and Λ χ = diag ( λ 1 χ , λ 2 χ , … , λ N χ χ ) + e χ I . The diagonal matrix of the steady-state probabilities will be designated by Π χ . 2.3.5 Construction of the equivalent dMMPP model Due to the construction processes that are inherent to each one of the proposed traffic models, this step will be completely different for both approximations. Considering first the superposition model, matrices that characterize the equivalent dMMPP are obtained using equations that correspond to the Kronecker product, P = P (1) ⊗ P (2) ⊗⋯⊗ P (L), and sum, Λ = Λ (1) ⊕ Λ (2) ⊕ ⋯⊕ Λ (L), where matrices Λ (l) are P (l), l =1,…, L, have been calculated in the previous step. The additional factors that were previously introduced have to be removed, so the final Λ matrix will be given by Λ = Λ - ∑ l = 2 L e ( l ) · I , where I represents the identity matrix. For the decomposition model, it is necessary to build a dMMPP that is equivalent to the tree structure of dMMPPs that was described previously in the section. The objective is to incorporate on the model the level of detail that is given by the finest time scale, so the equivalent dMMPP will have a number of states equal to the number of states that exist in the set of dMMPPs belonging to the finest time scale, L, of the tree structure. The states that belong to the finest time scale can be identified by paths on the tree structure having the form s → = ( s 1 , s 2 , … , s L ) . Note that each state s → results from the states that are associated to it and belong to path s → i + 1 ] = ( s 1 , s 2 , … , s i + 1 ) corresponding to the dMMPP s → i ] , i =0,1,…, L −1. In this way, the states of the equivalent dMMPP will have Poisson arrival rates that are equal to the sum of the Poisson arrival rates of their predecessor states in the tree structure, that is, λ s → = ∑ j = 0 L - 1 λ s j + 1 s → . j ] . The transition between each pair of states is determined by the shortest path in the tree structure that passes through the root dMMPP and is able to connect both states. There are two distinct cases: the case where both states belong to different dMMPPs located at the finest time scale and the case where both states belong to the same dMMPP. Anyway, each pair of states can descend from a single common dMMPP (that will be necessarily the root dMMPP) or from more common dMMPPs. The common dMMPP that is located at the time scale with the highest value of l will be designated by s → ∧ t → = ( s 1 , s 2 , … , s k ) , where k =max{i : s j = t j , j =1,2,…, i}. So, starting with the case where s → ≠ t → , the transition probability from s → to t → , p s → , t → , is given by the product of three factors. The first one takes into account the time scales where s → and t → are associated to the same states and is given by ϕ s → , t → = ∏ j = 0 | s → ∧ t → | - 1 p s j + 1 , s j + 1 s → j ] , | s → ∧ t → | ≠ 0 , ϕ s → , t → = 1 , | s → ∧ t → | = 0 . The second factor takes into account the transition that occurs at the time scale where vectors s → and t → are associated to different states of a same dMMPP and corresponds to the term p s | s → ∧ t → | + 1 , t | s → ∧ t → | + 1 s → ∧ t → The third factor takes into account the steady-state probabilities of the states that are associated to t → on the time scales that are not common to vector s → , being given by ψ s → , t → = ∏ j = | s → ∧ t → | + 1 L - 1 π t j + 1 t → j ] , where one considers that an empty product is equal to one. So, for the case where s → ≠ t → we have, finally, that the transition probability is given by ψ s → , t → = p s → , t → = ϕ s → , t → p s | s → ∧ t → | + 1 , t s → ∧ t → + 1 s → ∧ t → ψ s → , t → . For the case where s → = t → , the transition probability is simply given by: p s → , t → = ϕ s → , t → . 3 L-System model The L-System model is defined by an alphabet of arrival rates, Λ ={λ 1, λ 2,…, λ L }, λ i ∈ R 0 + , i = 1 , … , L , by production rules that randomly generate two arrival rates from a previous one and by an axiom which is a predefined initial arrival rate. Without loss of generality, we assume λ 1 < λ 2 <⋯< λ L . The packet arrival process is constructed progressively, governed by an L-System machine, where each iteration produces a new time scale. Starting with the coarsest time scale, where traffic is characterized by a single arrival rate over a single time interval, each iteration generates a finer time scale by (i) division of each (parent) time interval in two new equal length (child) subintervals and (ii) association of arrival rates to each new subinterval according to the production rules of the stochastic L-System. We allow the grouping of time scales in time scale ranges and the definition of different sets of production rules for each time scale range. This is motivated by the fact that each set of production rules maps into a distinct scaling behavior. Classically, there will be scaling if the log–log plot of the q th order energies (usual energy is q =2) as a function of scale behaves linearly; if the plot is (globally) non-linear, different time scale ranges can be detected where linearity is observed [16]. The packet arrival process construction is illustrated in Fig. 3 . To characterize the packet arrival process we define X ( j , r a ) ( i ) ∈ Λ as the arrival rate at time interval i of time scale j and time scale range r a . Let the number of scales be S and the number of ranges of scales be R a . For convenience, we let j decrease from j = S −1 (at the coarsest time scale) to j =0 (at the finest time scale). Also, we let r a decrease from r a = R a (the range of coarsest time scales) to r a =1 (the range of finest time scales). Thus, the number of time intervals at time scale j, which we will denote by N j , is 2 S−j−1. Moreover, assuming a unitary width for the intervals of the finest time scale, j =0, the width at scale j will be 2 j . To relate time scales and time scale ranges we define j r a as the coarsest scale j in range r a . Thus, in the example of Fig. 3, S =4, R a =2, j 2 =3 and j 1 =1. In order to assure that the average arrival rate is the same in all time scales, so as to maintain physical meaning, we will impose the following condition to the production rules X ( j , r a ) ( i ) = 1 2 X j - 1 , r a ′ ( 2 i - 1 ) + 1 2 X j - 1 , r a ′ ( 2 i ) , i.e., the mapping of arrival rates is such that the arrival rate averaged over the left and right child subintervals will be equal to the parent arrival rate. This will be called the mass preservation property. With this condition, the traffic process generation can be described by axiom X ( S - 1 , R a ) ( 1 ) , the arrival rate at the coarsest time scale, and production rules defined by X ( j , r a ) ( i ) = λ l → p lq ( r a ) X j - 1 , r a ′ ( 2 i - 1 ) = λ q , X j - 1 , r a ′ ( 2 i ) = 2 λ l - λ q , where ∑ q = 1 L p lq ( r a ) = 1 ∀ l . Thus, an arrival rate λ l in interval i, scale j and range r a produces, with probability p lq ( r a ) , arrival rate λ q at the left subinterval 2i −1 and arrival rate 2λ l − λ q at the right subinterval 2i, of next scale j −1 and range r a ′ . The production rules can be totally described by R a L × L matrices: P ( r a ) = ( p lq ( r a ) ) , l , q = 1 , … , L , r a = 1 , … , R a . In order to guarantee that the alphabet is closed with respect to the production rules we impose the following conditions: (i) λ i - λ i - 1 = λ L - λ 1 L - 1 , i = 2 , 3 , … , L , i.e., the λ i values will be equidistant; (ii) p lq ( r a ) = 0 if q > l +min(L − l, l −1) or q < l −min(L − l, l −1). Finally, the L-System construction defines, at scale j and range r a , the time series Z ( j , r a ) = { X ( j , r a ) ( i ) , i = 1 , … , N j } . 3.1 Parameter inference procedure The fitting procedure determines the parameters of the L-System model from a data trace. It starts by fixing a sampling interval Δ and considering the time series representing the total number of packet arrivals in each non-overlapping sampling interval. Let this (empirical) time series be {A k , k =1,2,…, K}, where A k represents the number of arrivals in sampling interval k. For convenience, we take the length of the time series K to be a power of 2. The inference procedure can then be divided in four steps: (i) determination of the L-System alphabet and axiom, (ii) identification of the time scale ranges and (iii) inference of the L-System production rules. The alphabet of the L-System will consist of L equidistant arrival rate values, ranging from the minimum to the maximum values present in data. The value of L is a compromise between accuracy and complexity. Due to the mass preservation property, the axiom is inferred as the average arrival rate of {A k }, rounded to the closest alphabet element, i.e., X ( S - 1 , R a ) ( 1 ) = Φ Λ ( ( 1 / K Δ ) ∑ k = 1 K A k ) , where Φ A (x) represents a function that rounds x towards the nearest element of A. The identification of time scale ranges is based on wavelet scaling analysis, using the method proposed by Abry et al. [16], which resorts to the (second-order) logscale diagram. For the pOct trace there are 4 time scale ranges (within a total of 14 time scales) defined by j 1 =3, j 2 =6, j 3 =8, j 4 =9 and j 5 =14. The next step is the inference of the L-System production rules, which are fully characterized by the P ( r a ) , r a = 1 , … , R a , matrices. First, data are rounded in order to define sequence Z ( j , r a ) at each time scale. This comprises obtaining the arrival rates X ( j , r a ) ( i ) from {A k } through X ( j , r a ) ( i ) = Φ Λ ( N j / K Δ ) ∑ k = K ( i - 1 ) / N j + 1 Ki / N j A k with i =1,…, N j , for each j. Finally, letting c lq ( r a ) represent the number of times that, at scale j and range r a , the parent X ( j , r a ) ( i ) = λ l produced the left child X j - 1 , r a ′ ( 2 i - 1 ) = λ q , the production rule probabilities can be inferred as p lq ( r a ) = c lq ( r a ) ∑ q ′ = 1 L c lq ′ ( r a ) , l = 1 , … , L , r a = 1 , … , R a 4 Results The well known and publicly available [1] Bellcore pOct trace will be used to evaluate and compare the efficiency of the proposed traffic models and their respective inference procedures. This trace comprises 1million packets, with an average rate of 322,790bytes/s and an average packet size of 568bytes, and exhibits self-similarity characteristics since the arrival process shows similar fluctuations over a wide range of time scales (Fig. 4 ). The analysis of its autocovariance function lead us to suspect that it also exhibits LRD properties, due to its slow decay for large time lags, which was confirmed by the scaling analysis made through the second-order logscale diagram. The evaluation of the efficiency and the comparison between the proposed models and their parameter inference procedures is made by comparing: (i) the PMFs of the average packet counts at different time scales, calculated also from the original and synthesized traces and (ii) the queuing behavior, in terms of packet loss ratio (PLR), of the original and synthesized traces, through a trace-driven simulation where these traces are used as inputs. All simulations were conducted using a fixed packet length equal to the mean packet length of the original trace. In order to get statistically significant values, 10 traffic replicas were generated for each inferred model and only the respective average values are shown in the results. The 95% confidence intervals are relativelly small, so we decided not to show them in the graphs due to readability issues. The sampling interval of the counting process was chosen to be 0.1s and three different time scales were considered: 0.1s, 0.2s and 0.4s. Larger aggregation levels were also considered, with good fitting results. The estimation procedures of the different traffic models took less than 2min to complete, using a MATLAB implementation running on a 1.2GHz Athlon AMD PC, with 1.5Gbytes of RAM. Fig. 5 compares the PMFs of the original and fitted traces, for the smallest time scale and for all considered traffic models (due to lack of space, the PMFs corresponding to the other time scales are not shown here). There is a good agreement between the probability functions of the original and fitted traces, for all time scales and for all considered models. These results were obtained for equivalent dMMPPs having 344 states for the superposition model case and 81 states for the decomposition model. Regarding the L-System model, the trace was fitted to an alphabet of L =236 arrival rates. The minimum and maximum arrival rates present in data were 10 and 2360pkts/s, respectively, and a step of 10pkts/s was used (because it corresponds to one arrival in the sampling interval). The good results that were achieved on fitting the PMFs at the different time scales reveals itself enough to guarantee similar queuing behaviors for the original and fitted traffic, for all traffic models. From Fig. 6 it can be seen that PLR is very well approximated by the estimated models, for ρ =0.7. Other utilization ratio values were also tested and the comparison results showed a good agreement between the chosen traffic models. Besides, the computational complexity of the inference procedures is very small and, together with the number of states of the resulting dMMPPs, is directly related to the precision level that is used on the approximation of the empirical PMFs by weighted sums of Poisson probability functions. The performance of the different traffic models and inference procedures is very similar. So, it is not easy to recommend one of the approaches based only on their relative performances. One argument that clearly favors the decomposition approach is that the numbers of states of the resulting dMMPPs are smaller than the corresponding numbers for the superposition approach. This may be due to the fact that in the decomposition approach, as the time scale increases, dMMPPs are fitted to successively smaller sets of intervals whose arrivals’ characteristics tend to increase in homogeneity and, thus, tend to be associated to a smaller number of states. However, the contribution of each time scale for the characterization of the aggregate traffic characteristics is interpreted in an easier and more natural way through the superposition approach. Note also that, for the same number of states, a smaller number of dMMPPs (and their associated parameters) are needed to compute the final dMMPP using the superposition approach. On the other hand, when compared to Markovian models, the L-System model is able to accurately incorporate the traffic multiscale characteristics directly in the model structure, using a very simple fitting procedure. 5 Conclusions This paper describes and compares the performance of two hierarchical Markovian models and a L-System model that are able to capture multi-time-scale characteristics over a wide range of time scales: for the well-known pOct Bellcore trace, the different traffic models and their corresponding fitting procedures were able to match the probability mass function at each time scale and the packet loss probability corresponding to the original and synthetic traces generated from the inferred models. References [1] W. Leland M. Taqqu W. Willinger D. Wilson On the self-similar nature of Ethernet traffic (extended version) IEEE/ACM Transactions on Networking 2 1 1994 1 15 [2] V. Paxson S. Floyd Wide-area traffic: the failure of Poisson modeling IEEE/ACM Transactions on Networking 3 3 1995 226 244 [3] M. Crovella A. Bestavros Self-similarity in World Wide Web traffic: evidence and possible causes IEEE/ACM Transactions on Networking 5 6 1997 835 846 [4] W. Willinger M. Taqqu R. Sherman D. Wilson Self-similarity through high-variability: statistical analysis of Ethernet LAN traffic at the source level IEEE/ACM Transactions on Networking 5 1 1997 71 86 [5] A. Nogueira, P. Salvador, R. Valadas, A. Pacheco, A hierarchical approach based on MMPPs for modelling self-similar traffic over multiple time scales, in: D. Kouvatsos (Ed.), Traffic Engineering, Performance Evaluation Studies and Tools for Heterogeneous Networks, River Publishers, Gistrup, Denmark, 2009, ISBN: 978-87-92329-16-5. [6] A. Lindenmayer Mathematical models for cellular interactions in development II. Simple and branching filaments with two-sided inputs Journal of Theoretical Biology 18 1968 300 315 [7] K. Meier-Hellstern A fitting algorithm for Markov-modulated Poisson process having two arrival rates European Journal of Operational Research 29 1987 370 377 [8] S. Kang D. Sung Two-state MMPP modelling of ATM superposed traffic streams based on the characterisation of correlated interarrival times IEEE GLOBECOM’95 1995 1422 1426 [9] S. Li C. Hwang On the convergence of traffic measurement and queuing analysis: a statistical-match and queuing (SMAQ) tool IEEE/ACM Transactions on Networking 1997 95 110 [10] A. Andersen B. Nielsen A Markovian approach for modeling packet traffic with long-range dependence IEEE Journal on Selected Areas in Communications 16 5 1998 719 732 [11] T. Yoshihara S. Kasahara Y. Takahashi Practical time-scale fitting of self-similar traffic with Markov-modulated Poisson process Telecommunication Systems 17 1–2 2001 185 211 [12] P. Salvador A. Pacheco R. Valadas Multiscale fitting procedure using Markov modulated Poisson processes Telecommunications Systems 23 1–2 2003 123 148 [13] B. Ciciani, A. Santoro, P. Romano, Approximate analytical models for networked servers subject to MMPP arrival processes, in: Proceedings of the Sixth IEEE International Symposium on Network Computing and Applications, 2007, pp. 25–32. [14] S. Kempken G. Hasslinger W. Luther Parameter estimation and optimization techniques for discrete-time semi-markov models of h.264/AVC video traffic Telecommunication Systems 39 2 2008 77 90 [15] P. Salvador, A. Nogueira, R. Valadas, Modeling multifractal traffic with stochastic L-Systems, in: Proceedings of GLOBECOM’2002, 2002, pp. 2518–2522. [16] P. Abry, P. Flandrin, M. Taqqu, D. Veitch, Wavelets for the analysis, estimation and synthesis of scaling data, in: K. Park, W. Willinger (Eds.), Self-Similar Network Traffic Analysis and Performance Evaluation, 1999. "
    },
    {
        "doc_title": "A cooperative hide and seek discovery over in network management",
        "doc_scopus_id": "77957912428",
        "doc_doi": "10.1109/NOMSW.2010.5486570",
        "doc_eid": "2-s2.0-77957912428",
        "doc_date": "2010-10-20",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            },
            {
                "area_name": "Management Science and Operations Research",
                "area_abbreviation": "DECI",
                "area_code": "1803"
            }
        ],
        "doc_keywords": [
            "Centralized approaches",
            "Distributed management",
            "Exchange of information",
            "Final decision",
            "Future networks",
            "In-network management",
            "Information propagation",
            "Local decisions",
            "Network discovery",
            "Network information",
            "Network node",
            "Scalability problems"
        ],
        "doc_abstract": "Future networks are expected to become more complex and dynamic than today's networks. A centralized approach for network management is not able to deal with such complexity and dynamics, and will then introduce scalability problems. The concept of In Network Management (INM), where each INM entity (a network node) has the autonomy to self-govern its behavior, is being researched as an alternative to solve these scalability problems. In this concept, each INM entity participates in a distributed management process, which requires cooperation between INM entities to monitor, analyze, decide and act upon the network. However, to ensure the communication of INM entities in In Network Management process, several phases need to be performed, such as, discovery and bootstrapping, exchange of network information, dissemination of local decisions and final decision dissemination for enforcement. In this paper we address the discovery, bootstrapping, and exchange of information between INM entities, towards the complete INM process. We propose Hide and Seek (H&S), a new algorithm for network discovery, and information propagation and synchronization. The results show that H&S spends fewer cycles to discover all INM entities and records lower messages overhead for information synchronization compared to non-controlled and probabilistic (gossip) flooding dissemination. © 2010 IEEE.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "A botnet detection system based on neural networks",
        "doc_scopus_id": "77955880890",
        "doc_doi": "10.1109/ICDT.2010.19",
        "doc_eid": "2-s2.0-77955880890",
        "doc_date": "2010-08-27",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            },
            {
                "area_name": "Communication",
                "area_abbreviation": "SOCI",
                "area_code": "3315"
            }
        ],
        "doc_keywords": [
            "Anti virus",
            "Anti-spywares",
            "Artificial Neural Network",
            "Botnet",
            "Botnets",
            "Computational overheads",
            "Data collection",
            "Detection approach",
            "Detection framework",
            "Detection system",
            "Global Security",
            "High detection rate",
            "IP addresss",
            "Malicious software",
            "Management functions",
            "Network applications",
            "Network level",
            "Network segment",
            "Performance tests",
            "Storage modules",
            "System administrators",
            "Traffic pattern",
            "Traffic profile"
        ],
        "doc_abstract": "A concerted fight against botnets is needed in order to avoid them from becoming a serious threat to global security in the forthcoming years. Zombie detection is currently performed at the host and/or network levels, but these options have important drawbacks: antivirus, firewalls and anti-spyware are not effective against this threat because they are not able to detect hosts that are compromised via new or target specific malicious software and were not designed to protect the network from external attacks or vulnerabilities that are already present inside the local area network. To overcome these limitations, we propose a new botnet detection approach based on the identification of traffic patterns: since each network application, whether it is licit or illicit, has a characteristic traffic pattern that can uniquely identify it, the detection framework will rely on an Artificial Neural Network to identify the licit and illicit patterns. After the identification phase, the system will generate alarms to the system administrator, that can trigger the most appropriate security actions, like blocking the corresponding IP addresses, putting them under a deeper surveillance or acting over some suspicious network segment. A general detection framework was developed in order to incorporate the detection methodology itself, as well as the data collection and storage modules and all the necessary management functions. Some performance tests were already carried out on the proposed system and the results obtained show that the system is stable and fast and the detection approach is efficient, since it provides high detection rates with low computational overhead. © 2010 IEEE.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Detection of illicit traffic based on multiscale analysis",
        "doc_scopus_id": "70649113079",
        "doc_doi": null,
        "doc_eid": "2-s2.0-70649113079",
        "doc_date": "2009-12-02",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Software",
                "area_abbreviation": "COMP",
                "area_code": "1712"
            },
            {
                "area_name": "Electrical and Electronic Engineering",
                "area_abbreviation": "ENGI",
                "area_code": "2208"
            }
        ],
        "doc_keywords": [
            "Accurate mapping",
            "Application identification",
            "Clustering techniques",
            "Different time scale",
            "Internet application",
            "Multi fractals",
            "Multi scale analysis",
            "Multifractal behavior",
            "Network users",
            "Security attacks",
            "Security strategies",
            "Statistical analysis",
            "Traffic classification",
            "Traffic Engineering",
            "Traffic flow"
        ],
        "doc_abstract": "Recent years have witnessed a huge increase in the number and variety of Internet applications, as well as on the number and diversity of security attacks to network users and systems. Consequently, the need for an accurate mapping of traffic to its corresponding applications has also raised in order to allow ISPs to provide better Quality-of-Service (QoS) standards, implement traffic engineering methodologies and deploy efficient security strategies. Several approaches have been proposed to identify Internet applications, starting from port-based identification and going into the detailed analysis of the packet's payload content or to the statistical analysis of the generated traffic flows. However, even the most efficient methodologies present some constraints that limit their applicability, namely some confidentiality constraints or difficulties to classify traffic with unknown behavior. This paper presents a new methodology for traffic classification that relies on the multiscale analysis of the sampled traffic by estimating the multifractal coefficients of the different traffic flows and grouping them, using clustering techniques, according to their multifractal behavior over different time scales. Besides applying this approach to classify traffic from three of the most important Internet protocols, the methodology's efficiency was also tested by identifying two of the most frequent network security attacks.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Markovian models for medical signals on wireless sensor networks",
        "doc_scopus_id": "70449390639",
        "doc_doi": "10.1109/ICCW.2009.5208090",
        "doc_eid": "2-s2.0-70449390639",
        "doc_date": "2009-11-18",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            },
            {
                "area_name": "Electrical and Electronic Engineering",
                "area_abbreviation": "ENGI",
                "area_code": "2208"
            },
            {
                "area_name": "Communication",
                "area_abbreviation": "SOCI",
                "area_code": "3315"
            }
        ],
        "doc_keywords": [
            "Autocovariance functions",
            "Blood oxygen saturation",
            "Deterministic process",
            "EEG signals",
            "Electroencephalogram signals",
            "Empirical data",
            "Heart rates",
            "Markov modulated Poisson process",
            "Markovian model",
            "Model data",
            "Network congestions",
            "Network traffic",
            "ON time",
            "Performance requirements",
            "Public domains",
            "Source-coding",
            "Traffic model",
            "Wireless sensor"
        ],
        "doc_abstract": "Medical monitoring is a very important Wireless Sensor Network (WSN) application, because collecting vital information (such as heart rate, temperature, blood oxygen saturation level, electrocardiogram (ECG) and electroencephalogram (EEG) signals) using wireless sensors and making it available on time can improve the safety of the patient's care and save lives. Medical support networking has very stringent performance requirements and a complete WSN design must rely on accurate traffic models: being able to efficiently model data generated by each WSN node can be fundamental for correctly simulating network traffic, network congestion, interference between nodes, energy expended by each node and selecting the most appropriate routing protocols. This paper proposes two different Markovian models, the Markov Modulated Poisson Process (MMPP) and the Markov Modulated Deterministic Process (MMDP), to model the signal generated by a single WSN node monitoring electroencephalogram (EEG) data. Since some medical WSN nodes will employ source coding to reduce the amount of data that must be transmitted, thus conserving energy, the first model is found to be appropriate for modeling the EEG signal while the second one is more suitable for fitting the power that is used to transmit the encoded EEG signal. The accuracy of the models was tested using empirical data from public domain medical signal databases and the results obtained show that the proposed models are able to accurately fit the probability density function and the autocovariance function of EEG signals and the power that is used to transmit them. © 2009 IEEE.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Discriminating internet applications based on multiscale analysis",
        "doc_scopus_id": "70449356619",
        "doc_doi": "10.1109/NGI.2009.5175758",
        "doc_eid": "2-s2.0-70449356619",
        "doc_date": "2009-11-18",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            },
            {
                "area_name": "Hardware and Architecture",
                "area_abbreviation": "COMP",
                "area_code": "1708"
            }
        ],
        "doc_keywords": [
            "Accurate mapping",
            "Application signatures",
            "Clustering analysis",
            "Identification techniques",
            "Internet application",
            "Internet traffic",
            "IP Applications",
            "Multi scale analysis",
            "Multiscales",
            "Network resource",
            "New services",
            "Other applications",
            "Peer-to-Peer networks",
            "Port numbers",
            "Service differentiation",
            "Traffic Engineering"
        ],
        "doc_abstract": "In the last few years, several new IP applications and protocols emerged as the capability of the networks to provide new services increased. The rapid increase in the number of users of Peer-to-Peer (P2P) network applications, due to the fact that users are easily able to use network resources over these overlay networks, also lead to a drastic increase in the overall Internet traffic volume. An accurate mapping of Internet traffic to applications can be important for a broad range of network management and measurement tasks, including traffic engineering, service differentiation, performance/failure monitoring and security. Traditional mapping approaches have become increasingly inaccurate because many applications use non-default or ephemeral port numbers, use well-known port numbers associated with other applications, change application signatures or use traffic encryption. This paper presents a novel framework for identifying IP applications based on the multiscale behavior of the generated traffic: by performing clustering analysis over the multiscale parameters that are inferred from the measured traffic, we are able to efficiently differentiate different IP applications. Besides achieving accurate identification results, this approach also avoids some of the limitations of existing identification techniques, namely their inability do deal with stringent onfidentiality requirements.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics): Preface",
        "doc_scopus_id": "70350663161",
        "doc_doi": null,
        "doc_eid": "2-s2.0-70350663161",
        "doc_date": "2009-11-09",
        "doc_type": "Editorial",
        "doc_areas": [
            {
                "area_name": "Theoretical Computer Science",
                "area_abbreviation": "MATH",
                "area_code": "2614"
            },
            {
                "area_name": "Computer Science (all)",
                "area_abbreviation": "COMP",
                "area_code": "1700"
            }
        ],
        "doc_keywords": [],
        "doc_abstract": null,
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Framework for zombie detection using neural networks",
        "doc_scopus_id": "70349459587",
        "doc_doi": "10.1109/ICIMP.2009.10",
        "doc_eid": "2-s2.0-70349459587",
        "doc_date": "2009-10-01",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            },
            {
                "area_name": "Software",
                "area_abbreviation": "COMP",
                "area_code": "1712"
            }
        ],
        "doc_keywords": [
            "Anti virus",
            "Anti-spywares",
            "Botnet",
            "Computationally efficient",
            "Controlled environment",
            "Illicit traffic",
            "Internet security",
            "Intrusion Detection Systems",
            "Malicious software",
            "Malicious traffic",
            "Network applications",
            "Network firewalls",
            "Network level",
            "New approaches",
            "Organized networks",
            "Personal firewalls",
            "Real networks",
            "Traffic profile",
            "Traffic traces",
            "Zombie"
        ],
        "doc_abstract": "One of the most important threats to personal and corporate Internet security is the proliferation of Zombie PCs operating as an organized network. Zombie detection is currently performed at the host level and/or network level, but these options have some important drawbacks: antivirus, anti-spyware and personal firewalls are ineffective in the detection of hosts that are compromised via new or targetspecific malicious software, while network firewalls and Intrusion Detection Systems were developed to protect the network from external attacks but they were not designed to detect and protect against vulnerabilities that are already present inside the local area network. This paper presents a new approach, based on neural networks, that is able to detect Zombie PCs based on the historical traffic profiles presented by \"licit\" and \"illicit\" network applications. The evaluation of the proposed methodology relies on traffic traces obtained in a controlled environment and composed by licit traffic measured from normal activity of network applications and malicious traffic synthetically generated using the SubSeven backdoor. The results obtained show that the proposed methodology is able to achieve good identification results, being at the same time computationally efficient and easy to deploy in real network scenarios. © 2009 IEEE.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Towards the on-line identification of peer-to-peer flow patterns",
        "doc_scopus_id": "77954674919",
        "doc_doi": "10.4304/jnw.4.2.108-118",
        "doc_eid": "2-s2.0-77954674919",
        "doc_date": "2009-01-01",
        "doc_type": "Article",
        "doc_areas": [
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            }
        ],
        "doc_keywords": [
            "P2P applications",
            "Port matching",
            "Protocol analysis",
            "Syntactic analysis",
            "Traffic flow"
        ],
        "doc_abstract": "The number and variety of IP applications have hugely increased in the last few years. Among them, peer-to-peer (P2P) file-sharing applications have become very popular: more users are continuously joining such systems and more objects are being made available, seducing even more users to join. An accurate mapping of traffic to applications is important for a wide range of network management tasks. Besides, traditional mapping approaches have become increasingly inaccurate because many applications use non-default or ephemeral port numbers, use well-known port numbers associated with other applications, change application signatures or use traffic encryption. This paper proposes a framework to identify Internet applications that can be mainly used in situations where existing identification frameworks are not efficient or can not be used at all. The core block of the identification tool is based on neural networks and is able to identify different flow patterns generated by various Internet applications. Neural network based identification relies on a previous identification of the different IP applications that can be obtained offline using any reliable method. In this way, the paper also presents a module to process IP traffic flows and identify the underlying applications using payload analysis techniques. The identification results obtained from this tool are used in the training phase of the neural network identification framework. The accuracy of the identification framework was evaluated by performing a set of intensive tests and the results obtained show that, when conveniently trained, neural networks constitute a valuable tool to identify Internet applications while being, at the same time, immune to the most important disadvantages presented by other identification methods. © 2009 ACADEMY PUBLISHER.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "On the Dependencies between Internet Flow Characteristics",
        "doc_scopus_id": "71049195835",
        "doc_doi": "10.1007/978-3-642-04576-9_5",
        "doc_eid": "2-s2.0-71049195835",
        "doc_date": "2009-01-01",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Theoretical Computer Science",
                "area_abbreviation": "MATH",
                "area_code": "2614"
            },
            {
                "area_name": "Computer Science (all)",
                "area_abbreviation": "COMP",
                "area_code": "1700"
            }
        ],
        "doc_keywords": [
            "Control bandwidth",
            "Expected values",
            "Internet traffic",
            "Link capacities",
            "Log-normal distribution",
            "Regression equation",
            "Router algorithms",
            "Transmission rates"
        ],
        "doc_abstract": "The development of realistic Internet traffic models of applications and services calls for a good understanding of the nature of Internet flows, which can be affected by many factors. Especially relevant among these are the limitations imposed by link capacities and router algorithms that control bandwidth on a per-flow basis. In the paper, we perform a statistical analysis of an Internet traffic trace that specifically takes into account the upper-bounds on the duration and rate of measured flows. In particular, we propose a new model for studying the dependencies between the logarithm of the size, the logarithm of the duration, and the logarithm of the transmission rate of an Internet flow. We consider a bivariate lognormal distribution for the flow size and flow duration, and derive estimators for the mean, the variance and the correlation, based on a truncated domain that reflects the upper-bounds on the duration and rate of measured flows. Moreover, we obtain regression equations that describe the expected value of one characteristic (size, duration or rate) given other (size or duration), thus providing further insights on the dependencies between Internet flow characteristics. In particular, for flows with large sizes we are able to predict durations and rates that are coherent with the upper-bound on transmission rates imposed by the network. © 2009 Springer Berlin Heidelberg.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Peer-level analysis of distributed multimedia content sharing",
        "doc_scopus_id": "70350686919",
        "doc_doi": "10.1007/978-3-642-04576-9_6",
        "doc_eid": "2-s2.0-70350686919",
        "doc_date": "2009-01-01",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Theoretical Computer Science",
                "area_abbreviation": "MATH",
                "area_code": "2614"
            },
            {
                "area_name": "Computer Science (all)",
                "area_abbreviation": "COMP",
                "area_code": "1700"
            }
        ],
        "doc_keywords": [
            "Distributed multimedia",
            "Internet traffic",
            "Marketing designs",
            "P2P applications",
            "Peer-to-peer file sharing",
            "Realtime multimedia",
            "Round-trip-time",
            "Video on demand services"
        ],
        "doc_abstract": "In the last few years, peer-to-peer (P2P) file-sharing applications have become very popular: more users are continuously joining such systems and more objects are being made available, seducing even more users to join. Today, the traffic generated by P2P systems accounts for a major fraction of the Internet traffic and is bound to increase. P2P networks are currently evolving towards a real time multimedia content distribution able to provide reliable IPTV and Video on Demand (VoD) services. These new services create several challenges, the most important one being how to efficiently share resources in an heterogeneous, dynamic and continuously evolving group of peers. A detailed peer-level characterization is therefore fundamental for the technical and marketing design, deployment and management of these new services. This paper will be focused on the characterization of BitTorrent as one of the most important P2P applications and, from that analysis, will try to extrapolate the main characteristics and behaviours of the potential P2P real-time multimedia content distribution clients. Specifically, the paper analyses the geographical localization of the involved peers, the peers' availability and the Round Trip Time (RTT) between peers as a function of the time and for different categories of shared files. © 2009 Springer Berlin Heidelberg.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Detection of illicit traffic using neural networks",
        "doc_scopus_id": "58049152250",
        "doc_doi": null,
        "doc_eid": "2-s2.0-58049152250",
        "doc_date": "2008-12-01",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Artificial Intelligence",
                "area_abbreviation": "COMP",
                "area_code": "1702"
            },
            {
                "area_name": "Information Systems",
                "area_abbreviation": "COMP",
                "area_code": "1710"
            },
            {
                "area_name": "Software",
                "area_abbreviation": "COMP",
                "area_code": "1712"
            },
            {
                "area_name": "Control and Systems Engineering",
                "area_abbreviation": "ENGI",
                "area_code": "2207"
            }
        ],
        "doc_keywords": [
            "Firewalls",
            "Intrusion detection system",
            "Port matching",
            "Protocol analysis",
            "Syntatic and semantic analysis",
            "Traffic pattern",
            "Traffic signature"
        ],
        "doc_abstract": "The detection of compromised hosts is currently performed at the network and host levels but any one of these options presents important security flaws: at the host level, antivirus, anti-spyware and personal firewalls are ineffective in the detection of hosts that are compromised via new or target-specific malicious software while at the network level network firewalls and Intrusion Detection Systems were developed to protect the network from external attacks but they were not designed to detect and protect against vulnerabilities that are already present inside the local area network. This paper presents a new approach for the identification of illicit traffic that tries to overcome some of the limitations of existing approaches, while being computationally efficient and easy to deploy. The approach is based on neural networks and is able to detect illicit traffic based on the historical traffic profiles presented by \"licit\" and \"illicit\" network applications. The evaluation of the proposed methodology relies on traffic traces obtained in a controlled environment and composed by licit traffic measured from normal activity of network applications and malicious traffic synthetically generated using the SubSeven backdoor. The results obtained show that the proposed methodology is able to achieve good identification results, being at the same time computationally efficient and easy to implement in real network scenarios.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Identifying differentiating characteristics of Internet applications using Principal Component Analysis",
        "doc_scopus_id": "53149120359",
        "doc_doi": "10.1109/CSNDSP.2008.4610757",
        "doc_eid": "2-s2.0-53149120359",
        "doc_date": "2008-10-08",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            },
            {
                "area_name": "Software",
                "area_abbreviation": "COMP",
                "area_code": "1712"
            },
            {
                "area_name": "Electrical and Electronic Engineering",
                "area_abbreviation": "ENGI",
                "area_code": "2208"
            },
            {
                "area_name": "Communication",
                "area_abbreviation": "SOCI",
                "area_code": "3315"
            }
        ],
        "doc_keywords": [
            "Accurate mapping",
            "Digital signals",
            "International symposium",
            "Internet applications",
            "Internet traffic",
            "IP Applications",
            "P2p systems",
            "Peer-to-peer file sharing",
            "Principal components",
            "Service differentiations",
            "Traffic Engineering"
        ],
        "doc_abstract": "An accurate mapping between traffic and their corresponding applications can be very important for a wide range of network management and measurement tasks including traffic engineering, service differentiation, performance/failure monitoring, and security. Having the ability to identify the differentiating characteristics of IP applications is a crucial issue that can form the basis for the development of an efficient application identification tool. This paper presents an approach, based on Principal Component Analysis, that is able to identify differentiating characteristics of different Internet applications, including several peer-to-peer file sharing protocols. These applications have gained tremendous popularity in the past few years and, today, traffic generated by P2P systems accounts for a major fraction of the Internet traffic and is bound to increase. © 2008 IEEE.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Study on geographical distribution and availability of bittorrent peers sharing video files",
        "doc_scopus_id": "51549111613",
        "doc_doi": "10.1109/ISCE.2008.4559581",
        "doc_eid": "2-s2.0-51549111613",
        "doc_date": "2008-09-17",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Engineering (all)",
                "area_abbreviation": "ENGI",
                "area_code": "2200"
            }
        ],
        "doc_keywords": [
            "BitTorrent",
            "P2p systems",
            "Peer-to-peer systems",
            "Video sharing"
        ],
        "doc_abstract": "Peer-to-Peer (P2P) file sharing systems are becoming part of the daily life of content consumers. The traffic generated by P2P systems, and particularly BitTorrent, represents the major portion of the global Internet traffic, largely overtaking the traffic share of the World Wide Web. Nowadays, we see P2P systems evolving towards a Video on Demand (VoD) platform. One of the main challenges of these systems is to efficiently share data in the dynamic and continuously evolving Ad-Hoc networks of users. This ability heavily depends on the peers' locations and characteristics on this type of networks. In this paper, we use the current BitTorrent system to evaluate the peer-level characteristics of users sharing video contents. These characteristics include geographical location, peers availability and peers \"distance\", measured in terms of the round trip time. From the results obtained, we conclude that peers sharing video content present some unexpected locality features that, if conveniently exploited, could greatly benefit VoD P2P systems both in technological and service marketing terms.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Welcome to ISCE2008",
        "doc_scopus_id": "51549090610",
        "doc_doi": "10.1109/ISCE.2008.4559420",
        "doc_eid": "2-s2.0-51549090610",
        "doc_date": "2008-09-17",
        "doc_type": "Editorial",
        "doc_areas": [
            {
                "area_name": "Engineering (all)",
                "area_abbreviation": "ENGI",
                "area_code": "2200"
            }
        ],
        "doc_keywords": [],
        "doc_abstract": null,
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Identification of peer-to-peer applications' flow patterns",
        "doc_scopus_id": "51149092068",
        "doc_doi": "10.1109/NGI.2008.46",
        "doc_eid": "2-s2.0-51149092068",
        "doc_date": "2008-09-11",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            },
            {
                "area_name": "Communication",
                "area_abbreviation": "SOCI",
                "area_code": "3315"
            }
        ],
        "doc_keywords": [
            "P2P applications",
            "Port matching",
            "Protocol analysis",
            "Semantic and syntactic analysis",
            "Traffic flows"
        ],
        "doc_abstract": "Peer-to-peer file-sharing systems have gained tremendous popularity in the past few years. More users are continually joining such systems and more objects are being made available, seducing even more users to join. Today, the traffic generated by P2P systems accounts for a major fraction of the Internet traffic and is bound to increase. An accurate mapping of traffic to their applications can be very important for a broad range of network management and measurement tasks including traffic engineering, service differentiation, performance/failure monitoring, and security. Traditional mapping approaches have become increasingly inaccurate because many applications use non-default or ephemeral port numbers, use well-known port numbers associated with other applications, change application signatures or use traffic encryption. This paper presents a new approach, based on neural networks, that is able to identify flow patterns generated by P2P Internet applications while overcoming the limitations of existing approaches. The results obtained show that, when conveniently trained, neural networks constitute a valuable tool to identify P2P Internet applications since they are able to achieve good performance results while, at the same time, avoid the most important disadvantages presented by the other identification methods.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "A framework for detecting Internet applications",
        "doc_scopus_id": "58049130081",
        "doc_doi": "10.1007/978-3-540-89524-4_46",
        "doc_eid": "2-s2.0-58049130081",
        "doc_date": "2008-01-01",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Theoretical Computer Science",
                "area_abbreviation": "MATH",
                "area_code": "2614"
            },
            {
                "area_name": "Computer Science (all)",
                "area_abbreviation": "COMP",
                "area_code": "1700"
            }
        ],
        "doc_keywords": [
            "Aggregated traffics",
            "Application signatures",
            "Internet application",
            "Port matching",
            "Protocol analysis",
            "Service differentiation",
            "Syntactic analysis",
            "Traffic Engineering"
        ],
        "doc_abstract": "There are several network management and measurement tasks, including for example traffic engineering, service differentiation, performance or failure monitoring or security, that can greatly benefit with the ability to perform an accurate mapping of network traffic to IP applications. In the last years traditional mapping approaches have become increasingly inaccurate because many applications use non-default or ephemeral port numbers, use well-known port numbers associated with other applications, change application signatures or use traffic encryption. Thus, new solutions are needed for this problem and this paper presents a new approach, based on neural networks, that is able to solve the problem of application detection and at the same time can predict the traffic level associated with each application based on the overall aggregated traffic, while overcoming the limitations of the previous approaches. Results obtained show that the proposed framework constitutes a valuable tool to detect Internet applications and predict their traffic levels since it can achieve good performance results while, at the same time, avoid the most important disadvantages presented by the other detection methods. © 2008 Springer Berlin Heidelberg.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Modeling IP traffic behavior through markovian models",
        "doc_scopus_id": "84898357726",
        "doc_doi": "10.4018/978-1-59140-993-9.ch044",
        "doc_eid": "2-s2.0-84898357726",
        "doc_date": "2007-12-01",
        "doc_type": "Book Chapter",
        "doc_areas": [
            {
                "area_name": "Computer Science (all)",
                "area_abbreviation": "COMP",
                "area_code": "1700"
            }
        ],
        "doc_keywords": [],
        "doc_abstract": null,
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Joint modeling of MANET characteristics for QoS prediction",
        "doc_scopus_id": "48049107050",
        "doc_doi": "10.1109/ISCC.2007.4381613",
        "doc_eid": "2-s2.0-48049107050",
        "doc_date": "2007-12-01",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Software",
                "area_abbreviation": "COMP",
                "area_code": "1712"
            },
            {
                "area_name": "Signal Processing",
                "area_abbreviation": "COMP",
                "area_code": "1711"
            },
            {
                "area_name": "Mathematics (all)",
                "area_abbreviation": "MATH",
                "area_code": "2600"
            },
            {
                "area_name": "Computer Science Applications",
                "area_abbreviation": "COMP",
                "area_code": "1706"
            },
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            }
        ],
        "doc_keywords": [
            "Dynamic natures",
            "Excellent performance",
            "Functional characteristics",
            "International symposium",
            "Joint modeling",
            "Mobile ad-hoc network",
            "Mobile Ad-Hoc Networks",
            "Modeling framework",
            "Network modeling",
            "Network modelling",
            "Network QoS",
            "Network quality of service",
            "Network structures",
            "Network users",
            "QoS inference",
            "Qos metrics",
            "Traffic measurements",
            "Traffic routing",
            "Two phases",
            "Users' mobility"
        ],
        "doc_abstract": "Mobile Ad-hoc Networks (MANETs) are particularly difficult to manage due to the highly dynamic nature of its traffic, caused by variations on the number of users, their locations and the type of applications they use. This paper proposes a new modeling framework for mobile ad-hoc networks that integrates all important functional characteristics of a MANET and is able to predict network Quality of Service (QoS) based only on traffic measurements (or simulations), without requiring any information on the network structure, traffic routing or users ' mobility. The application of the proposed framework to a specific modeling problem involves two phases: first, the network model is built from a set of (past) measurements of the gateways inbound/outbound traffic and the corresponding network QoS metrics; then, the constructed model can be used to predict (future) values of the QoS metrics based only on the inbound/outbound traffic. This framework does not impose any restrictions to the type of metrics that are selected to characterize QoS. Our results show that this approach can achieve excellent performance in terms of predicting QoS at multiple gateways, even when there are significant changes in the number of network users. © 2007 IEEE.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Local area network modeling for performance prediction",
        "doc_scopus_id": "47249134636",
        "doc_doi": "10.1109/LCN.2007.94",
        "doc_eid": "2-s2.0-47249134636",
        "doc_date": "2007-12-01",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Engineering (all)",
                "area_abbreviation": "ENGI",
                "area_code": "2200"
            }
        ],
        "doc_keywords": [
            "Evolution (CO)",
            "Local computer",
            "Network behaviors",
            "Network manager (NM)",
            "Network modelling",
            "Network quality of service (QoS)",
            "Network structures",
            "Network topologies",
            "New approaches",
            "Packet Switching networks",
            "Performance predictions",
            "Traffic profiling"
        ],
        "doc_abstract": "This paper proposes a new approach to the modeling of packet switching networks that is based only on measurements (or simulations) and does not require any information on the network structure. Network managers usually need to assess network behavior for varying number of users or evolving traffic profiles, even without a complete knowledge of the network topology or resources. In these cases, it is critical to have a framework that, based on existing measurements and/or mathematical models (that describe the evolution of the number of users and their traffic profiles), infer the future network quality of service (QoS) parameters. Using these predictions, the network manager can take substantiated decisions on the need for resources reallocation or upgrading. © 2007 IEEE.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Predicting QoS characteristics on wireless networks",
        "doc_scopus_id": "47049121482",
        "doc_doi": "10.1109/ICNS.2007.97",
        "doc_eid": "2-s2.0-47049121482",
        "doc_date": "2007-12-01",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            },
            {
                "area_name": "Electrical and Electronic Engineering",
                "area_abbreviation": "ENGI",
                "area_code": "2208"
            },
            {
                "area_name": "Communication",
                "area_abbreviation": "SOCI",
                "area_code": "3315"
            }
        ],
        "doc_keywords": [
            "Background traffic",
            "Excellent performance",
            "Global management",
            "International conferences",
            "Metrics (CO)",
            "Mobility patterns",
            "Modeling approaches",
            "Network access",
            "Network modelling",
            "Network QoS",
            "Network quality of service (QoS)",
            "Network structures",
            "Network traffics",
            "Network users",
            "New applications",
            "Qos metrics",
            "QOS requirements",
            "Two step procedure",
            "User behaviors",
            "Wireless access points (WAP)",
            "wireless IP networks"
        ],
        "doc_abstract": "Nowadays, wireless network traffic exhibits peculiar and unpredictable behaviors that can be attributed to the combination of different factors: the varying number of users, the capacity of the network access points, network traffic matrices, users' mobility, background traffic, diversity of applications, services and user behaviors. This scenario creates an increasing need for tools that can cope with the continuous appearance of new applications and QoS requirements and is able to aid in the global management tasks of wireless IP networks. This paper proposes a novel modeling approach for wireless networks that is able to predict network Quality of Service (QoS) parameters, based only on measured or synthetically generated traffic, without requiring any information on the network structure or on the mobility patterns of network users. The solution to a specific modeling problem, using the proposed framework, is a two-step procedure: in the first step, the network model is constructed from a set of (past) values of the inbound/outbound traffic at the various network access points and a set of values of corresponding network QoS metrics; in the second step, the previously constructed model is used to predict (future) values of the QoS metrics based only on new inbound/outbound traffic values. This framework does not impose any restrictions to the type of metrics that are selected to characterize QoS. The results obtained show that this approach is able to achieve excellent performance for QoS prediction at multiple wireless access points, even when there are significant changes in the number of network users. © 2007 IEEE.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Module for identifying internet applications and its integration in a peer-to-peer measurement tool",
        "doc_scopus_id": "70449457788",
        "doc_doi": null,
        "doc_eid": "2-s2.0-70449457788",
        "doc_date": "2007-01-01",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Science (all)",
                "area_abbreviation": "COMP",
                "area_code": "1700"
            }
        ],
        "doc_keywords": [
            "Distributed monitoring",
            "Identification approach",
            "Internet application",
            "Measurement tools",
            "Payload analysis",
            "Service differentiation",
            "Statistical parameters",
            "Traffic Engineering"
        ],
        "doc_abstract": "© MCCSIS 2007 .All right reserved.In the last years there has been a huge increase in the number and variety of IP applications. An accurate mapping of traffic to applications is important for a broad range of network management and measurement tasks including traffic engineering, service differentiation, performance/failure monitoring, and security. Port-based identification approaches have become increasingly inaccurate because many applications use non-default or ephemeral port numbers or use well-known port numbers associated with other applications. Thus, a more accurate identification demands the examination of the user's payload. This paper presents a framework for processing IP traffic flows, enabling the calculation of a set of relevant statistical parameters and the identification of the underlying IP applications by using payload analysis techniques. The proposed framework is able to achieve good identification results and will be incorporated in a totally distributed monitoring platform as a module that can be used at each probe for traffic engineering purposes.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Cluster analysis of internet users based on hourly traffic utilization",
        "doc_scopus_id": "67650787244",
        "doc_doi": "10.1093/ietcom/e90-b.7.1594",
        "doc_eid": "2-s2.0-67650787244",
        "doc_date": "2007-01-01",
        "doc_type": "Article",
        "doc_areas": [
            {
                "area_name": "Software",
                "area_abbreviation": "COMP",
                "area_code": "1712"
            },
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            },
            {
                "area_name": "Electrical and Electronic Engineering",
                "area_abbreviation": "ENGI",
                "area_code": "2208"
            }
        ],
        "doc_keywords": [
            "Access network",
            "Internet traffic",
            "Multi variate analysis",
            "Partitioning around medoids",
            "Resource optimization",
            "Service differentiation",
            "Traffic Engineering",
            "Traffic measurements"
        ],
        "doc_abstract": "Internet access traffic follows hourly patterns that depend on various factors, such as the periods users stay on-line at the access point (e.g. at home or in the office) or their preferences for applications. The clustering of Internet users may provide important information for traffic engineering and billing. For example, it can be used to set up service differentiation according to hourly behavior, resource optimization based on multi-hour routing and definition of tariffs that promote Internet access in low busy hours. In this work, we propose a methodology for clustering Internet users with similar patterns of Internet utilization, according to their hourly traffic utilization. The methodology resorts to three statistical multi-variate analysis techniques: cluster analysis, principal component analysis and discriminant analysis. The methodology is illustrated through measured data from two distinct ISPs, one using a CATV access network and the other an ADSL one, offering distinct traffic contracts. Principal component analysis is used as an exploratory tool. Cluster analysis is used to identify the relevant Internet usage profiles, with the partitioning around medoids and Ward's method being the preferred clustering methods. For the two data sets, these methods lead to the choice of 3 clusters with different hourly traffic utilization profiles. The cluster structure is validated through discriminant analysis. It is also evaluated in terms of several characteristics of the user traffic not used in the cluster analysis, such as the type of applications, the amount of downloaded traffic, the activity duration and the transfer rate, resulting in coherent outcomes. Copyright © 2007 The Institute of Electronics, Information and Communication Engineers.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Detecting Internet applications using neural networks",
        "doc_scopus_id": "43449099154",
        "doc_doi": "10.1109/ICNS.2006.38",
        "doc_eid": "2-s2.0-43449099154",
        "doc_date": "2006-12-01",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Science Applications",
                "area_abbreviation": "COMP",
                "area_code": "1706"
            },
            {
                "area_name": "Electrical and Electronic Engineering",
                "area_abbreviation": "ENGI",
                "area_code": "2208"
            }
        ],
        "doc_keywords": [
            "Ephemeral port numbers",
            "Failure monitoring"
        ],
        "doc_abstract": "Recent years have witnessed a huge increase in the number and variety of applications running over IP networks. An accurate mapping of traffic to applications is important for a broad range of network management and measurement tasks including traffic engineering, service differentiation, performance/failure monitoring, and security. Traditional mapping approaches have become increasingly inaccurate because many applications use nondefault or ephemeral port numbers, use well-known port numbers associated with other applications, change application signatures or use traffic encryption. Other proposed identification approaches are based on the analysis and interpretation of the packet contents, but they have important drawbacks related to their high processing requirements and their inability to deal with confidentiality requirements. This paper presents a new approach, based on neural networks, that is able to solve the problem of application detection and at the same time can predict the traffic level associated with each application based on the overall aggregated traffic, while overcoming the limitations of the previous approaches. © 2006 IEEE.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Predicting the Quality of Service of wireless LANs using neural networks",
        "doc_scopus_id": "33750906923",
        "doc_doi": "10.1145/1164717.1164728",
        "doc_eid": "2-s2.0-33750906923",
        "doc_date": "2006-01-01",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Engineering (all)",
                "area_abbreviation": "ENGI",
                "area_code": "2200"
            }
        ],
        "doc_keywords": [
            "Access Point (AP)",
            "Network modeling",
            "QoS prediction",
            "Wireless local area networks (WLAN)"
        ],
        "doc_abstract": "Wireless Local Area Networks (WLANs) are particularly difficult to manage due to the highly dynamic nature of the traffic, caused by variations on the number of users, their locations and the type applications they use. In this paper, we propose a new modeling approach, based on neural networks, that is able to predict the Quality of Service (QoS) of WLANs based on the characterization of an operational scenario. From measurements of the inbound and outbound traffic at each Access Point (AP) and of the QoS perceived at each Cell, the model estimates the QoS when the number of users grows. The model does not require the knowledge of the exact network characteristics, since it; is only based on measurements carried out at the APs. This modeling approach can be of great help in the planning and management of WLANs. Several realistic network scenarios were defined in order to test the validity of the model. The results show that the model can achieve excellent performance, since the QoS prediction is accurate even when there are significant changes in the number of users. Copyright 2006 ACM.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Classification of Internet users using Discriminant Analysis and Neural Networks",
        "doc_scopus_id": "33744485834",
        "doc_doi": "10.1109/NGI.2005.1431686",
        "doc_eid": "2-s2.0-33744485834",
        "doc_date": "2005-12-01",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Engineering (all)",
                "area_abbreviation": "ENGI",
                "area_code": "2200"
            }
        ],
        "doc_keywords": [
            "Cluster Analysis",
            "Discriminant analysis",
            "Internet traffic characterization",
            "Traffic engineering",
            "Traffic measurements"
        ],
        "doc_abstract": "The (reliable) classification of Internet users, based on their hourly traffic profile, can be advantageous in several traffic engineering tasks and in the selection of suitable tariffing plans. For example, it can be used to optimize the routing by mixing users with contrasting hourly traffic profiles in the same network resources or to advise users on the tariffing plan that best suits their needs. In this paper we compare the use of Discriminant Analysis and artificial Neural Networks for the classification of Internet users. The classification is based on a partition obtained by Cluster Analysis. We classify the Internet users based on a data set measured at the access network of a Portuguese ISP. Using Cluster Analysis performed over half of the users (randomly chosen) we have identified three groups of users with similar behavior. The classification methods were applied to the second half of users and the obtained classification results compared with those of Cluster Analysis performed over the complete set of users. Our findings indicate both Discriminant Analysis and Neural Networks are valuable classification procedures, with the former slightly outperforming the latter, for the specific scenario under analysis. © 2005 IEEE.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Using neural networks to classify internet users",
        "doc_scopus_id": "33751005607",
        "doc_doi": "10.1109/AICT.2005.93",
        "doc_eid": "2-s2.0-33751005607",
        "doc_date": "2005-07-01",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Engineering (all)",
                "area_abbreviation": "ENGI",
                "area_code": "2200"
            }
        ],
        "doc_keywords": [
            "Cluster analysis",
            "Internet traffic characterization",
            "Network management",
            "Traffic engineering",
            "Traffic measurements"
        ],
        "doc_abstract": "Traffic engineering and network management can greatly benefit from a reliable classification of Internet users. This paper evaluates the potential of different artificial Neural Network models for classifying Internet users based on their hourly traffic profile. The training of the neural networks and the evaluation of their performance rely on a previous classification of the Internet users obtained through Cluster analysis. The results obtained for two data sets measured at the access network of a Portuguese ISP indicate that neural networks constitute a valuable tool for classifying Internet users. © 2005 IEEE.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Active traffic monitoring for heterogeneous environments",
        "doc_scopus_id": "24644456982",
        "doc_doi": "10.1007/978-3-540-31956-6_71",
        "doc_eid": "2-s2.0-24644456982",
        "doc_date": "2005-01-01",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Theoretical Computer Science",
                "area_abbreviation": "MATH",
                "area_code": "2614"
            },
            {
                "area_name": "Computer Science (all)",
                "area_abbreviation": "COMP",
                "area_code": "1700"
            }
        ],
        "doc_keywords": [
            "IP networks",
            "Network traffic management",
            "One-way active measurement protocol (OWAMP)",
            "Wireless LAN"
        ],
        "doc_abstract": "The traffic management of IP networks faces increasing challenges, due to the occurrence of sudden and deep traffic variations in the network, which can be mainly attributed to the large diversity of supported applications and services, to the drastic differences in user behaviors, and to the complexity of traffic generation and control mechanisms. In this context, active traffic measurements are particularly important since they allow characterizing essential aspects of network operations, namely the quality of service measured in terms of packet delays and losses. The main goal of the work presented in this paper is the performance characterization of operational networks consisting in heterogeneous environments including both wired and wireless LANs, using active measurements. We propose a measurement methodology and its corresponding measurement platform. The measurement methodology is based on the One-Way Active Measurement Protocol (OWAMP), a recent proposal from the Intemet2 and IETF IPPM groups for measuring delays and losses in a single direction. The measurement platform was implemented, tested and conveniently validated in different network scenarios. © Springer-Verlag Berlin Heidelberg 2005.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Framework based on stochastic L-Systems for modeling IP traffic with multifractal behavior",
        "doc_scopus_id": "4944234548",
        "doc_doi": "10.1016/j.comcom.2004.06.014",
        "doc_eid": "2-s2.0-4944234548",
        "doc_date": "2004-12-01",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            }
        ],
        "doc_keywords": [
            "Internet traffic",
            "L-system",
            "Multifractal",
            "Multiscaling",
            "Traffic modeling"
        ],
        "doc_abstract": "This paper presents and compares a set of traffic models, and associated parameter fitting procedures, based on so-called stochastic L-Systems, which were introduced by biologist A. Lindenmayer as a method to model plant growth. Starting from an initial symbol, an L-System generates iteratively sequences of symbols, belonging to an alphabet, through successive application of production rules. In a traffic modeling context, the symbols are interpreted as packet arrival rates or mean packet sizes, and each iteration is associated to a finest time scale of the traffic. These models are able to capture the multiscaling and multifractal behavior sometimes observed in Internet traffic. We describe and compare four traffic models, one characterizing the packet arrival process, and the other three characterizing both the packet arrival and the packet size processes. The models are tested with several measured traffic traces: the well-known pOct Bellcore, a trace of aggregate WAN traffic and two traces of specific applications (Kazaa and Operation Flashing Point). We assess the multifractality of these traces using Linear Multiscale Diagrams. The traffic models are evaluated by comparing, for the measured traffic and for traffic generated according to the inferred models, the probability mass function, the autocovariance function and the queuing behavior. Our results show that the L-System based traffic models that characterize both the packet arrival and packet size processes can achieve very good fitting performance in terms of first- and second-order statistics and queuing behavior. © 2004 Elsevier B.V. All rights reserved.",
        "available": true,
        "clean_text": "serial JL 271515 291210 291718 291869 31 Computer Communications COMPUTERCOMMUNICATIONS 2004-08-12 2004-08-12 2010-10-07T07:02:38 S0140-3664(04)00245-2 S0140366404002452 10.1016/j.comcom.2004.06.014 S300 S300.3 FULL-TEXT 2015-05-14T03:44:20.120857-04:00 0 0 20041201 2004 2004-08-12T00:00:00Z articleinfo crossmark dco dateupdated tomb dateloaded datesearch indexeddate issuelist volumelist yearnav articletitlenorm authfirstinitialnorm authfirstsurnamenorm cid cids confeditor contenttype copyright dateloadedtxt docsubtype doctype doi eid ewtransactionid hubeid issfirst issn issnnorm itemstage itemtransactionid itemweight openaccess openarchive pg pgfirst pglast pii piinorm pubdatestart pubdatetxt pubyr sortorder srctitle srctitlenorm srctype subheadings vol volfirst volissue figure table body mmlmath affil articletitle auth authfirstini authfull authkeywords authlast primabst ref alllist content subj ssids 0140-3664 01403664 27 27 18 18 Volume 27, Issue 18 6 1799 1811 1799 1811 20041201 1 December 2004 2004-12-01 2004 Performance and Control of Next Generation Communications Networks F. Huebner and R. D. van der Mei article fla Copyright © 2004 Elsevier B.V. All rights reserved. FRAMEWORKBASEDSTOCHASTICLSYSTEMSFORMODELINGIPTRAFFICMULTIFRACTALBEHAVIOR SALVADOR P 1 Introduction 2 L-Systems background 3 Traffic models 3.1 Single L-System 3.2 Double L-System 3.3 Joint L-System 3.4 L-System with PMFs 4 Fitting procedures 4.1 Single L-System 4.2 Double L-system 4.3 Joint L-System 4.4 L-System with PMFs 5 Numerical results 5.1 Single L-System 5.2 Double L-System 5.3 Joint L-System 5.3.1 L-System with PMFs 5.4 Model comparison 6 Conclusions References SALVADOR 2004 335 352 P MANDELBROT 1974 331 358 B RIEDI 1999 992 1018 R ABRY 2000 P SELFSIMILARNETWORKTRAFFICANALYSISPERFORMANCEEVALUATION GILBERT 1999 971 992 A GAO 2001 1400 1410 J LINDENMAYER 1968 300 315 A PEITGEN 1992 H CHAOSFRACTALSNEWFRONTIERSSCIENCE SALVADORX2004X1799 SALVADORX2004X1799X1811 SALVADORX2004X1799XP SALVADORX2004X1799X1811XP item S0140-3664(04)00245-2 S0140366404002452 10.1016/j.comcom.2004.06.014 271515 2010-11-07T20:00:59.99502-05:00 2004-12-01 true 726900 MAIN 13 65896 849 656 IMAGE-WEB-PDF 1 si69 545 18 156 si68 134 17 18 si67 700 20 242 si66 401 20 119 si65 890 19 346 si64 798 25 174 si63 634 22 146 si62 230 22 31 si61 1049 45 177 si60 193 17 35 si59 387 23 81 si58 315 22 67 si57 177 17 25 si56 1208 43 345 si55 1255 55 232 si54 179 17 32 si53 1000 48 193 si52 1140 44 336 si51 398 23 82 si50 307 22 63 si49 186 22 25 si48 1323 55 250 si47 237 22 34 si46 191 17 34 si45 254 15 85 si44 180 17 31 si43 1047 48 208 si42 117 15 15 si41 458 20 148 si40 829 22 230 si39 434 22 91 si38 229 22 35 si37 726 22 182 si36 2627 86 383 si35 558 22 120 si34 550 22 113 si33 125 16 17 si32 589 19 193 si31 484 23 98 si30 495 23 99 si29 3003 97 313 si28 474 22 90 si27 845 22 239 si26 250 18 53 si25 529 15 194 si24 780 19 305 si23 186 18 30 si22 473 22 117 si21 1282 56 237 si20 276 22 52 si19 897 35 191 si18 301 22 60 si17 324 22 63 si16 450 22 84 si15 117 16 16 si14 751 18 296 si13 620 22 182 si12 278 22 56 si11 521 15 183 si10 761 23 299 si9 208 22 31 si8 473 22 112 si7 1341 56 230 si6 302 22 56 si5 829 23 185 si4 118 16 17 si3 324 22 63 si2 731 18 287 gr1 13561 222 616 gr1 3009 79 219 gr2 6096 168 489 gr2 2111 75 219 gr3 7794 241 470 gr3 2707 112 219 gr4 7192 450 276 gr4 1696 163 100 gr5 19654 254 372 gr5 3640 150 219 gr6 26044 276 373 gr6 4427 162 219 gr7 21665 283 373 gr7 3523 164 216 gr8 25008 276 373 gr8 4104 162 219 gr9 29656 279 373 gr9 4620 164 219 gr10 25854 278 373 gr10 4315 163 219 gr11 25393 283 373 gr11 3916 164 216 gr12 23102 283 373 gr12 3801 164 216 gr13 23352 286 373 gr13 3562 164 214 gr14 22380 286 373 gr14 3533 164 214 gr15 21218 287 373 gr15 3404 164 213 gr16 23243 284 373 gr16 3812 164 215 gr17 22766 288 372 gr17 3707 164 211 gr18 87986 770 615 gr18 3569 164 131 COMCOM 2572 S0140-3664(04)00245-2 10.1016/j.comcom.2004.06.014 Elsevier B.V. Fig. 1 Example of stochastic L-System with rectangles. Fig. 2 Construction of the traffic process based on the single L-System. Fig. 3 Construction of the traffic process based on the joint L-System. Fig. 4 General flow diagram of a L-System inference procedure. Fig. 5 Second-order logscale diagram, with 95% confidence intervals, trace UA. Fig. 6 Probability mass function, trace pOct. Fig. 7 Packet arrival process autocovariance functions, trace pOct. Fig. 8 Packet size autocovariance functions, trace pOct. Fig. 9 Byte arrival process autocovariance function, trace pOct. Fig. 10 Packet loss ratio versus buffer size, trace pOct. Fig. 11 Average packet delay versus buffer size, trace pOct. Fig. 12 Packet loss ratio versus buffer size, trace UA. Fig. 13 Average packet delay versus buffer size, trace UA. Fig. 14 Packet loss ratio versus buffer size, trace Kazaa. Fig. 15 Average packet delay versus buffer size, trace Kazaa. Fig. 16 Packet loss ratio versus buffer size, trace OFP. Fig. 17 Average packet delay versus buffer size, trace OFP. Fig. 18 Linear multiscale diagrams of the packet arrival process, with 95% confidence intervals (from left to right and from top to bottom) trace pOct, trace UA, trace Kazaa and trace OFP. Table 1 Main characteristics of measured traces Trace name Capture period Trace size (pkts) Mean rate (byte/s) Mean packet size (bytes) pOct Bellcore trace 1 million 362,750 568 UA 12.41 p.m. to 14.27 p.m., July 6th 2001 7 millions 654,780 600 Kazaa 10.26 p.m. to 12.13 p.m., October 18th 2002 1 million 194,670 1225 OFP 10.26 p.m. to 12.02 p.m., October 18th 2002 0.5 million 72,552 803 Framework based on stochastic L-Systems for modeling IP traffic with multifractal behavior Paulo Salvador * António Nogueira Rui Valadas Institute of Telecommunications Aveiro, University of Aveiro, Campus de Santiago, 3810-193 Aveino, Portugal * Corresponding author. This paper presents and compares a set of traffic models, and associated parameter fitting procedures, based on so-called stochastic L-Systems, which were introduced by biologist A. Lindenmayer as a method to model plant growth. Starting from an initial symbol, an L-System generates iteratively sequences of symbols, belonging to an alphabet, through successive application of production rules. In a traffic modeling context, the symbols are interpreted as packet arrival rates or mean packet sizes, and each iteration is associated to a finest time scale of the traffic. These models are able to capture the multiscaling and multifractal behavior sometimes observed in Internet traffic. We describe and compare four traffic models, one characterizing the packet arrival process, and the other three characterizing both the packet arrival and the packet size processes. The models are tested with several measured traffic traces: the well-known pOct Bellcore, a trace of aggregate WAN traffic and two traces of specific applications (Kazaa and Operation Flashing Point). We assess the multifractality of these traces using Linear Multiscale Diagrams. The traffic models are evaluated by comparing, for the measured traffic and for traffic generated according to the inferred models, the probability mass function, the autocovariance function and the queuing behavior. Our results show that the L-System based traffic models that characterize both the packet arrival and packet size processes can achieve very good fitting performance in terms of first- and second-order statistics and queuing behavior. Keywords Traffic modeling Multifractal Multiscaling Internet traffic L-System 1 Introduction Traffic modeling has an increasing importance in the management and dimensioning of telecommunications networks. Traffic models are used, for example, in the dimensioning of links and buffers (while taking into account statistical multiplexing effects) and in performance analysis of networks. In the Internet, the complexity associated to the mechanisms for traffic generation and control, as well as the diversity of applications and services, have introduced several peculiar behaviors in the traffic, such as self-similarity, long-range dependence and multifractality. These behaviors have a significant impact on the network performance and, therefore, need to be adequately characterized. Accurate modeling of Internet traffic also requires the characterization of both the packet arrival and the packet size processes [1]. In particular, this is important for accurate prediction of the queuing behavior (i.e. the packet loss ratio or average packet delay suffered on a network node). The queuing behavior addresses the effect of traffic on network performance, and is one of the most important criteria to assess the suitability of traffic models (and associated parameter fitting procedures). Here, the analysis consists in comparing the curves of packet loss ratio (or average packet delay) versus buffer size, obtained with the measured traces (through trace-driven simulation) and with the inferred traffic model (using again trace-driven simulation or numerical computation of the performance measures whenever possible). When dealing with models that characterize only the arrival process, it is common practice to assume that the packet size is fixed and equal to the average packet size of the measured trace. This may lead to large errors when the packets have variable size, such as in IP traffic. Recent analysis of measured Internet WAN traffic has revealed that multifractal structures, such as random cascades, can help explaining the scaling behavior typically associated to networking mechanisms operating on small time scales (e.g. TCP flow control). A cascade (or multiplicative process) is a process that fragments a set into smaller and smaller components according to a fixed rule, and at the same time fragments the measure of the components by another (possibly random) rule. Random cascades were introduced by Mandelbrot as a physical model for turbulence [2]. In the traffic modeling context, the set can be interpreted as a time interval and the measure as the number of arrivals or number of bytes (in that interval). The multifractal nature of network traffic was first noticed by Riedi and Lévy Véhel [3]. Subsequently, various studies have addressed the characterization and modeling of multifractal traffic, essentially within the framework of random cascades [4–11]. Feldmann et al. [4,9] proposed conservative cascades, which are closely related with random cascades, as a model for Internet WAN traffic. They provided plausible physical explanations supporting the adoption of conservative cascades and developed tools to analyze the scaling behavior of this type of cascades. Gao and Rubin considered two extensions of the conservative cascade model: they introduced a dual cascade model, where one cascade characterizes packet inter-arrivals and the other packet sizes [8]; moreover, they considered a cascade model for the counting process representing the aggregation of the packet arrival and packet size processes, i.e. the number of bytes arriving in every time interval [12]. The latter model precludes estimating the packet loss ratio, since the detail of packet sizes is lost through aggregation. In this paper, we propose a set of traffic models, and associated fitting procedures, capable of capturing multifractal behavior. The traffic models are based on stochastic Lindenmayer-Systems (hereafter referred to as L-Systems). L-Systems are string rewriting techniques which were introduced by biologist A. Lindenmayer in 1968 as a method to model plant growth [13]. They are characterized by an alphabet, an axiom and a set of production rules, and can be used to generate fractals [14]. The alphabet is a set of symbols; the production rules define transformations of symbols into strings of symbols; starting from an initial string (the axiom), an L-System constructs iteratively sequences of symbols through replacement of each symbol by the corresponding string according to the production rules. If the production rules are random, the L-System is called a stochastic L-System. When compared with conservative cascades, stochastic L-Systems introduce a dependence on the construction process (due to the production rules), that has a meaningful physical explanation, and can help understanding the joint impact of network mechanisms and resource limitations on observed traffic [15]. The application of stochastic L-Systems in the traffic modeling context was first introduced by the authors in Ref. [15]. The model proposed in this first work only addressed the characterization of the packet arrival process. In this paper, it will be called the single L-System model. This model is relevant for traffic with fixed packet size, such as ATM traffic and IP, traffic of specific applications where the packet sizes remain approximately constant (e.g. V61P). Three subsequent extensions addressed the characterization of both the packet arrival and packet size processes. The first extension introduced a model with two independent L-Systems, one for the packet arrival and the other for the packet size processes, called double L-System model [16]. Due to the independence of the two L-Systems, this model is not able to capture the correlations between arrivals and sizes, although it captures multifractal behavior on both packet arrivals and packet sizes. The second extension was based on a single bi-dimensional L-System, where the alphabet elements are pairs of arrival rates and mean packet sizes, called the joint L-System model [17]. Opposite to the previous model, this one is able to capture correlations between arrivals and sizes. One disadvantage, however, is that it may require a large number of parameters. Also, the multifractal behavior is only captured in the (aggregate) byte arrival process. This paper introduces a third extension, which was devised in order to allow a lower number of parameters and also to provide a more detailed modeling of the packet size. In this case, only the packet arrival process is modeled through an L-System. The characterization of the packet size is performed by associating, at the finest time scale, a probability mass function (PMF) (of packet sizes) to each packet arrival rate [18]. In this way the model is able to capture correlations between packet arrivals and packet sizes, and multifractal behavior on packet arrivals (but not on packet sizes). Note that in this extension the packet sizes are characterized individually, whereas in the previous ones, only the mean packet sizes were modeled. This model will be called the L-System with PMFs. This paper is organized as follows. In Section 2 we give the required background on L-Systems. In Sections 3 and 4 we present the traffic models and describe the associated fitting procedures. In Section 5 we discuss the results of applying the different procedures to measured traffic traces. Finally, Section 6 presents the conclusions. 2 L-Systems background The basic idea behind L-Systems is to define complex objects by successively replacing parts of a simple object using a set rules. The L-System is a feedback machine that operates on strings of symbols. The set of symbols is called the alphabet. Starting from an initial state (called axiom), an L-System operates, at each iteration, by applying the set of production (or rewriting) rules simultaneously to all symbols of an input string to give an output string. For a comprehensive introduction to L-Systems see the book by Peitgen et al. [14]. Consider a simple example of an organism growing through cell subdivisions. There are two types of cells represented by letters A and B. Cell subdivisions are modeled by replacing these symbols with strings of symbols: cell A subdivides into two cells represented by string AB; cell B subdivides into two cells represented by string AA. The ordering of the symbols is relevant in an L-System. The organism modeled by this L-System grows by repeated cell subdivisions. At birth the organism is the single cell A. After one subdivision the organism has two cells represented by string AB. After two subdivisions, the organism has four cells given by string ABAA, and after three subdivisions the organism has eight cells represented by string ABAAABAB. Using the formalism of L-Systems this growth process can be described as: Alphabet: {A,B} Axiom: A Rules: A→AB B→AA The production rules can be stochastic. In stochastic L-Systems, there may be several production rules for one symbol, and the specific rule is selected according to a probability distribution. Taking previous example, one production rule could be to convert A into AB with probability 0.4 or into BB with probability 0.6 (instead of converting always A into AB). In this case, after three iterations several strings are possible, e.g. ABAAABAB, ABABBBAB, or AAAAABBB. Stochastic L-Systems are a method to construct recursively random sequences with multifractal behavior [14]. As another example, consider the following stochastic L-System: Alphabet: {X 1,X 2,X 3,X 4,X 5} Axiom: X 3 Rule 1: X 1→X 1 X 1 Rule 2: X 2→X 1 X 3, with prob. 1/3 X 2→X 3 X 1, with prob. 1/3 X 2→X 2 X 2, with prob. 1/3 Rule 3: X 3→X 3 X 3, with prob. 1/5 X 3→X 2 X 4, with prob. 1/5 X 3→X 4 X 2, with prob. 1/5 X 3→X 1 X 5, with prob. 1/5 X 3→X 5 X 1, with prob. 1/5 Rule 4: X 4→X 3 X 5, with prob. 1/3 X 4→X 5 X 3, with prob. 1/3 X 4→X 4 X 4, with prob. 1/3 Rule 5: X 5→X 5 X 5 The alphabet elements of this L-System can be associated to graphical elements. For example, X i can represent a rectangle with an area of i units. The L-System production rules assure that the average area of the child rectangles is equal to the area of its parent rectangle. Some of the possible outcomes of the L-System construction are represented in Fig. 1 . In order to build a network traffic model, the area of a rectangle can be interpreted as the amount of traffic (number of arrivals or number of bytes), observed in a particular time interval. This is precisely the idea behind the proposed traffic model, that will be described in Section 3. 3 Traffic models 3.1 Single L-System We first describe the traffic model based on a single L-System, that characterizes the packet arrival process. The single L-System is defined by an alphabet of arrival rates (1) Λ = { λ 1 , λ 2 , … , λ L } , λ i ∈ R 0 + , i = 1 , … , L , by production rules that randomly generate two arrival rates from a previous one and by an axiom which is a predefined initial arrival rate. Without loss of generality, we assume λ 1<λ 2<⋯<λ L . The packet arrival process is constructed progressively, governed by an L-System machine, where each iteration produces a new time scale. Starting with the coarsest time scale, where traffic is characterized by a single arrival rate over a single time interval, each iteration generates a finest time scale by (i) division of each (parent) time interval in two new equal length (child) subintervals and (ii) association of arrival rates to each new subinterval according to the production rules of the stochastic L-System. We allow the grouping of time scales in time scale ranges and the definition of different sets of production rules for each time scale range. This is motivated by the fact that each set of production rules maps into a distinct scaling behavior [19]. Classically, there will be scaling if the log–log plot of the qth order energies (usual energy is q=2) as a function of scale behaves linearly; if the plot is (globally) non-linear, different time scale ranges can be detected where linearity is observed (see, for example, Ref. [7]). The packet arrival process construction is shown in Fig. 2 . To characterize the packet arrival process we define X ( j , r a ) ( i ) ∈ Λ as the arrival rate at time interval i of time scale j and time scale range r a . Let the number of scales be S and the number of ranges of scales be R a . For convenience, we let j decrease from j=S−1 (at the coarsest time scale) to j=0 (at the finest time scale). Also, we let r a decrease from r a =R a (the range of coarsest time scales) to r a =1 (the range of finest time scales). Thus, the number of time intervals at time scale j, which we will denote by N j , is 2 S−j−1. Moreover, assuming a unitary width for the intervals of the finest time scale, j=0, the width at scale j will be 2 j . To relate time scales and time scale ranges we define j r a as the coarsest scale j in range r a . Thus, in Fig. 2, S=4, R a =2, j 2=3 and j 1=1. In order to assure that the average arrival rate is the same in all time scales, so as to maintain physical meaning, we will impose the following condition to the production rules: (2) X ( j , r a ) ( i ) = 1 2 X ( j − 1 , r ′ a ) ( 2 i − 1 ) + 1 2 X ( j − 1 , r ′ a ) ( 2 i ) , i.e. the mapping of arrival rates is such that the arrival rate averaged over the left and right child subintervals will be equal to the parent arrival rate. This will be called the mass preservation property. With this condition, the traffic process generation can be described by axiom X ( S − 1 , R a ) ( 1 ) , the arrival rate at the coarsest time scale, and production rules defined by (3) X ( j , r a ) ( i ) = λ l ⟶ p l q ( r a ) { X ( j − 1 , r ′ a ) ( 2 i − 1 ) = λ q , X ( j − 1 , r ′ a ) ( 2 i ) = 2 λ l − λ q , where ∑ q = 1 L p l q ( r a ) = 1 , ∀ l . Thus, an arrival rate λ l in interval i, scale j and range r a produces, with probability p l q ( r a ) , arrival rate λ q at the left subinterval 2i−1 and arrival rate 2λ l −λ q at the right subinterval 2i, of next scale j−1 and range r′ a . The production rules can be totally described by R a L×L matrices (4) P ( r a ) = ( p l q ( r a ) ) , l , q = 1 , … , L , r a = 1 , … , R a . In order to guarantee that the alphabet is closed with respect to the production rules, we impose the following conditions: (i) λ i − λ i − 1 = ( λ L − λ 1 ) / ( L − 1 ) , i=2,3,…,L, i.e the λ i values will be equidistant; (ii) p l q ( r a ) = 0 , if q>l+min(L−l,l−1) or q<l−min(L−l,l−1). Finally, the L-System construction defines, at scale j and range r a , the time series (5) Z ( j , r a ) = { X ( j , r a ) ( i ) , i = 1 , … , N j } . 3.2 Double L-System To characterize both the packet arrival and packet size processes, we first consider a traffic model based on two independent L-Systems, where one L-System describes packet arrivals and the other mean packet sizes. The L-System describing the packet arrival process is equal to the one presented in Section 3.1. The L-System describing the packet size process is defined by an alphabet of mean packet sizes (6) Γ = { γ 1 , γ 2 , … , γ G } , γ i ∈ R 0 + , i = 1 , … , G , by production rules that randomly generate two mean packet sizes from a previous one and by an axiom which is a predefined initial mean size. Without loss of generality, we assume γ 1<γ 2<⋯<γ G . The traffic process construction follows the same steps of the single L-System one, except that now each time interval is associated to both a packet arrival rate and a mean packet size, generated by each of the independent L-Systems. We allow the ranges of time scales of mean sizes to be different from those of arrival rates. The time scale ranges for mean sizes will be denoted by r s and the number of time scale ranges by R s . To relate time scales and time scale ranges for mean sizes, we define j r s as the coarsest scale j in range r s . To characterize the traffic process we define the pair ( X ( j , r a ) ( i ) , Y ( j , r s ) ( i ) ) , where X ( j , r a ) ( i ) ∈ Λ and Y ( j , r s ) ( i ) ∈ Γ are the packet arrival rate and the mean packet size at time interval i of time scale j and time scale ranges r a for arrivals and r s for sizes, respectively. Note that there can be a different scaling phenomena for the arrival and packet size processes, driven by the diverse mechanisms that are involved in the traffic generation and control at the various time scales. Consider, for example, the traffic generated at the user level by an HTTP access. The arrival process depends mainly on the frequency of clicks. However, the packet sizes and flow durations depend mainly on the type of clicks and are independent of the frequency of clicks. For example, the download of a large file generates many large packets and the download of a WWW page generates a few small packets. This motivates allowing different time scale ranges for the packet arrival and packet size processes. The mass conservation property also holds in the case of mean packet sizes. Thus, (7) Y ( j , r s ) ( i ) = 1 2 Y ( j − 1 , r ′ s ) ( 2 i − 1 ) + 1 2 Y ( j − 1 , r ′ s ) ( 2 i ) , i.e. the mapping of mean sizes is such that the mean size averaged over the left and right child subintervals will be equal to the parent mean size. The generation of mean sizes can be described by axiom Y ( s − 1 , R s ) ( 1 ) , the mean size at the coarsest time scale, and by production rules defined by (8) Y ( j , r s ) ( i ) = γ m ⟶ v m n ( r s ) { Y ( j − 1 , r ′ s ) ( 2 i − 1 ) = γ n , Y ( j − 1 , r ′ s ) ( 2 i ) = 2 γ m − γ n , where ∑ n = 1 G v m n ( r s ) = 1 , ∀ m . Thus, a mean size γ m in interval i, scale j and range r s produces, with probability v m n ( r s ) , mean size γ n at the left subinterval 2i−1 and mean size 2γ m −γ n at the right subinterval 2i, of next scale j−1 and range r′ s . The production rules of mean packet sizes can be totally described by R s G×G matrices (9) V ( r s ) = ( v m n ( r s ) ) , m , n = 1 , … , G , r s = 1 , … , R s . The closure property must also hold in this case. Thus, (i) γ i − γ i − 1 = ( γ G − γ 1 ) / ( G − 1 ) , i=2,3,…,G; (ii) v m n ( r s ) = 0 , if n>m+min(G−m,m−1) or n<m−min(G−m,m−1). Finally, the traffic process at scale j can be defined by time series (10) Z ( j , r a , r s ) = { ( X ( j , r a ) ( i ) , Y ( j , r s ) ( i ) ) , i = 1 , … , N j } . Note that it is not possible to have mass conservation simultaneously in the three processes of packet arrivals, byte arrivals and packet sizes using finite alphabets. In our approach, except for a trivial case, the mass conservation property does not hold for the byte arrival process. In fact, the number bytes in a parent interval, which is given by X ( j , r a ) ( i ) Y ( j , r s ) ( i ) Δ 2 j , will not be equal to the sum of bytes in the corresponding child intervals, given by (11) [ X ( j − 1 , r ′ a ) ( 2 i − 1 ) Y ( j − 1 , r ′ s ) ( 2 i − 1 ) + X ( j − 1 , r ′ a ) ( 2 i ) Y ( j − 1 , r ′ s ) ( 2 i ) ] Δ 2 j − 1 = [ 2 X ( j , r a ) ( i ) Y ( j , r s ) ( i ) + X ( j − 1 , r ′ a ) ( 2 i − 1 ) Y ( j − 1 , r ′ s ) ( 2 i − 1 ) − X ( j , r a ) ( i ) Y ( j − 1 , r ′ s ) ( 2 i − 1 ) − X ( j − 1 , r ′ a ) ( 2 i − 1 ) Y ( j , r s ) ( i ) ] Δ 2 j , due to the imposition of mass conservation on arrival rates and mean sizes. Conservation of bytes occurs only in the special case of X ( j , r a ) ( i ) = X ( j − 1 , r ′ a ) ( 2 i − 1 ) or Y ( j , r a ) ( i ) = Y ( j − 1 , r ′ a ) ( 2 i − 1 ) , i.e. when the arrival rates or the mean sizes of the parent and child. intervals are the same. 3.3 Joint L-System In this traffic model, a single bi-dimensional L-System is used to characterize jointly the packet arrival and packet size processes. The joint L-System is defined by an alphabet of pairs, where one pair element is a packet arrival rate, λ l , and the other is a mean packet size, γ g , i.e. (12) Ω = { ( λ l , γ g ) : λ l ∈ Λ , γ g ∈ Γ } , by production rules that randomly generate two pairs (of arrival rates and mean sizes) from a previous one and by an axiom which is a predefined initial pair. The construction of the traffic process follows directly the case of the single L-System. Here, the time scale ranges are defined based on the byte arrival process (process of arrival rates times mean sizes, in bytes/seconds). We denote a time scale range by r b and the number of time scale ranges by R b . To relate time scales and time scale ranges, we define j r b as the coarsest scale j in range r b . To characterize the traffic process we define the pair ( X ( j , r b ) ( i ) , Y ( j , r b ) ( i ) ) ∈ Ω , as the arrival rate and mean size at time interval i of time scale j and time scale range r b . The traffic process construction is shown in Fig. 3 . As in the case of the previous two models, both the mass conservation and the closure properties hold. The generation of arrival rates and mean sizes can be described by axiom ( X ( S − 1 , R 6 ) ( 1 ) , Y ( S − 1 , R 6 ) ( 1 ) ) , the pair of arrival rate and mean size at the coarsest time scale, and by production rules defined by (13) ( X ( j , r b ) , ( i ) Y ( j , r b ) ( i ) ) = ( λ l , γ m ) ⟶ u l m q n ( r b ) { ( X ( j − 1 , r ′ b ) ( 2 i − 1 ) , Y ( j − 1 , r ′ b ) ( 2 i − 1 ) ) = ( λ q , γ n ) , ( X ( j − 1 , r ′ b ) ( 2 i ) , Y ( j − 1 , r ′ b ) ( 2 i ) ) = ( 2 λ l − λ q , 2 γ m − γ n ) , where ∑ q = 1 L ∑ n = 1 G u l m q n ( r b ) = 1 , ∀ l , ∀ m . Thus, a pair with arrival rate λ l and mean size γ m in interval i, scale j and range r b produces, with probability u l m q n ( r b ) , a pair with arrival rate λ q and mean size γ n at the left subinterval 2i−1 and arrival rate 2λ l −λ q and mean size 2γ m −γ n at the right subinterval 2i, of next scale j−1 and range r′ b . The production rules can be totally described by the R b matrices with dimension L×G×L×G, U ( r b ) = ( u l m q n ( r b ) ) , with l,q=1,…,L, m,n=1,…,G and r b =1,…,R b . Finally, the traffic process at scale j and range r b can be defined by time series (14) Z ( j , r b ) = { ( X ( j , r b ) ( i ) , Y ( j , r b ) ( i ) ) , i = 1 , … , N j } . 3.4 L-System with PMFs This traffic model resorts to a single L-System to characterize the packet arrival process and to a set of discrete distributions to characterize the packet size process. The packet size is characterized only at the finest time scale. Moreover, contrarily to the previous two models, the L-System with PMFs characterizes the individual packet size, instead of the mean packet size computed over a time interval. In this scale, each possible arrival rate is assigned a PMF describing the packet sizes. Thus, there will be a total of L PMFs. To characterize the packet size process, let E l be a discrete random variable representing the (individual) packet size associated to arrival rate λ l . We define L PMFs, one for each packet arrival rate, given by h l (e)=P(E l =e), with e ∈ ϒ l = { v 1 , v 2 , … , v Q l } and l=1,2,…,L; ϒ l is the set of Q l packet sizes associated with arrival rate λ l . Note that all packets arriving in a time interval with associated arrival rate λ l , will be assigned a packet size according to PMF h l . The generation of the complete traffic process has three steps: (i) we first generate the sequence of arrival rates at the finest time scale given by the corresponding L-System; (ii) second, within each time interval, the packet arrival instants are spaced uniformly (the number of arrivals is set according to the arrival rate of the interval); (iii) at last, the sizes of all packets are determined, based on PMFs of the[ associated arrival rates. 4 Fitting procedures 4.1 Single L-System The fitting procedure determines the parameters of the single L-System from a data trace. It starts by fixing a sampling interval Δ and considering the time series representing the total number of packet arrivals in each non-overlapping sampling interval. Let this (empirical) time series be {A k ,k=1,2,…,K}, where A k represents the number of arrivals in sampling interval k. For convenience, we take the length of the time series K to be a power of 2. The inference procedure can then be divided into four steps: (i) determination of the L-System alphabet and axiom, (ii) identification of the time scale ranges and (iii) inference of the L-System production rules. The general flow diagram for a L-System fitting procedure is represented in Fig. 4 . There are several possible strategies to infer the L alphabet elements. One choice is to consider the L equidistant arrival rate values, ranging from the minimum to the maximum values of the measured data. However, it is important to include in the alphabet the mean arrival rate of the measured data. Thus, we infer the alphabet with L elements {λ i ,i=1,2,…,L} such that (i) the L elements are equidistant, i.e. λ i+1−λ i =δ>0, i=1,2,…,L−1, (ii) the mean arrival rate of data is included in the alphabet, i.e. ∃i:λ i =mean(A k /Δ), i=1,2,…,L, and (iii) the minimum and the maximum values of data are within the range of the alphabet, i.e. λ 1≤min(A k /Δ), λ L ≥max(A k /Δ). The value of L is a compromise between accuracy and complexity. Due to the mass preservation property, the axiom is inferred as the average arrival rate of {A k }, rounded to the closest alphabet element, i.e. (15) X ( S − 1 , R a ) ( 1 ) = Φ Λ ( ( 1 / K Δ ) ∑ k = 1 K A k ) , where Φ A (x) represents a function that rounds x towards the nearest element of A. The identification of time scale ranges is based on wavelet scaling analysis. We use the method proposed by Abry et al. [7], which resorts to the (second-order) logscale diagram. A (second-order) logscale diagram is a plot of energies against scale j, together with confidence intervals about the energies, where these values are a function of the wavelet discrete transform coefficients at scale j. The time scale ranges correspond to the set of time scales for which, within the limits of the confidence intervals, the energies fall on a straight line, i.e. the scaling behavior is linear in a time scale range. Fig. 5 shows the logscale diagram of a trace measured at the University of Aveiro (which is described in Section 5), with 95% confidence intervals. There are three time scale ranges (within a total of 17 time scales) defined by j 1=2, j 2=8 and j 3=17. Note that, with this method, it is not possible to estimate the energies up to the last specified time scale, due to lack of precision resulting from boundary effects. Specifically, in our case, it was not possible to estimate the energies for j>12, as shown in Fig. 5. However, the usual procedure is to assume that the alignment holds up to the highest specified time scale. The next step is the inference of the L-System production rules, which are fully characterized by the P ( r a ) , r a = 1 , … , R a matrices. First, data is rounded in order to define sequence Z ( j , r a ) at each time scale. This comprises obtaining the arrival rates X ( j , r a ) ( i ) from {A k } through (16) X ( j , r a ) ( i ) = Φ Λ ( ( N j / K Δ ) ∑ k = K ( i − 1 ) / N j + 1 K i / N j A k ) , with i=1,…,N j , for each j. Finally, letting c l q ( r a ) represent the number of times that, at scale j and range r a , the parent X ( j , r a ) ( i ) = λ l produced the left child X ( j − 1 , r ′ a ) ( 2 i − 1 ) = λ q , the production rule probabilities can be inferred as (17) p l q ( r a ) = c l q ( r a ) / ∑ q = 1 L c l q ( r a ) , l = 1 , … , L , r a = 1 , … , R a . 4.2 Double L-system The fitting procedure of the double L-System comprises determining the parameters of the two independent L-Systems characterizing the arrival rates and the mean sizes. We start by constructing the (empirical) time series {(A k ,B k ),k=1,2,…,K}, where A k and B k represent the number of arrivals and the mean packet size in sampling interval k. After this, the parameters of the two L-Systems are inferred separately through the procedure described in Section 4.1 (and shown in Fig. 4) applied to time series {A k } and {B k }, respectively. In the case of the L-System characterizing the packet size process, the alphabet is inferred as G equidistant mean packet size values such that one alphabet element coincides with the mean packet size of data and the minimum and the maximum values of data are within the range of the alphabet. The axiom is inferred as the mean of {B k }, rounded to the closest alphabet element, i.e. (18) Y ( S − 1 , R s ) ( 1 ) = Φ Γ ( ( 1 / K ) ∑ k = 1 K B k ) . The identification of time scale ranges is again based on the (second-order) logscale diagram. The production rules, defined by matrices V ( r s ) , r s =1,…,R s , are inferred by rounding the empirical times series {B k } to obtain (19) Y ( j , r s ) ( i ) = Φ Γ ( ( N j / K ) ∑ k = K ( i − 1 ) N j + 1 K i / N j B k ) , with i=1,…,N j , for each j, and then determining the probabilities through (20) v m n ( r s ) = d m n ( r s ) / ∑ n = 1 G d m n ( r s ) , m = 1 , … , G , r s = 1 , … , R s , where d m n ( r s ) represents the number of times that, over all scales of range r s , the parent Y ( j , r s ) ( i ) = γ m produced the left child Y ( j − 1 , r ′ s ) ( 2 i − 1 ) = γ n . 4.3 Joint L-System As in the case of the double L-System, the fitting procedure of the joint L-System starts by considering the time series {(A k ,B k ),k=1,2,…,K}. The L-System alphabet is inferred as the set with LG pairs (λ l ,γ g ), using the procedure of the double L-System described in Section 4.2. Thus, the arrival rates and the mean sizes are inferred independently. The identification of time scale ranges is now based on the time series of byte arrivals, i.e. {A k B k ,k=1,2,…,K}. To infer the production rules, defined by matrices U ( r b ) , r b =1,…,R b , data is first rounded as in the case of the double L-System. Then the probabilities are inferred as (21) u l m q n ( r b ) = f l m q n ( r b ) / ∑ q = 1 L ∑ n = 1 G f l m q n ( r b ) , with l=1,…,L, m=1,…,G and r b =1,…,R b , where f l m q n ( r b ) represents the number of times that, over all scales of range r b , the parent ( X ( j , r b ) ( i ) , Y ( j , r b ) ( i ) ) = ( λ l , γ m ) produced the left child ( X ( j − 1 , r ′ b ) ( 2 i − 1 ) , Y ( j − 1 , r ′ b ) ( 2 i − 1 ) ) = ( λ q , γ n ) . 4.4 L-System with PMFs The L-System characterizing the packet arrival process is inferred exactly as in the case of the single L-System (Section 4.1). Note that this first step implicitly associates each individual packet (at the finest time scale) with an arrival rate. The inference of the packet size process starts by considering the time series of (individual) packet sizes {C n ,n=1,2,…,N}, where C n is the size of the nth packet and N is the total number of packets. We then partition this time series into L subsets defined by (22) D l = { C n : L ( n ) = λ l , n = 1 , 2 , … , N } , l = 1 , 2 , … , L , where L(n) represents the arrival rate that has been associated to the nth packet. Thus subset D l collects the sizes of all (individual) packets that were assigned an arrival rate λ l . These subsets will be used to infer alphabets of (individual) packet sizes for each arrival rate. Specifically, we determine from each D l the Q l most frequent packet size values (e.g. using histograms) and collect them in alphabet ϒ l = { v 1 v 2 , … , v Q l } . At this point, we round each element of D l to the nearest element in ϒ l , resulting in new subsets (23) D ˜ l = { Φ ϒ l ( x ) , x ∈ D l } , l = 1 , 2 , … , L . Finally, we infer for each set D ˜ l the corresponding PMF h l ( e ) = P { E 1 = e } , e ∈ ϒ l . 5 Numerical results We have applied our fitting procedures to four traces: (i) the well-known pOct Bellcore trace, (ii) one IP trace measured at the University of Aveiro (UA), (iii) one IP trace measured at a Portuguese ADSL ISP, representing the usage of Kazaa by a group of 10 users, and (iv) a IP trace measured in the same ISP, rep-resenting the usage of the online game operation flashing point (OFP) also by a group of 10 users. The sampling interval was 0.1s in all traces. The UA trace is representative of Internet access traffic produced within a University campus environment. The University of Aveiro is connected to the Internet through a 10Mb/s ATM link and the measurements were carried out in a 100Mb/s Ethernet link connecting the border router to the firewall, which only transports Internet access traffic. The traffic analyzer was a 1.2GHz AMD Athlon PC, with 1.5GB of RAM, running WinDump. The measurements recorded the arrival instant and the IP header of each packet. WinDump reported no packet drops during the measurement periods. The main characteristics of the used traces are summarized in Table 1 . Note that for the Bellcore trace the measured sizes correspond to Ethernet packet sizes and for the remaining traces correspond to IP packet sizes. 5.1 Single L-System The pOct trace was fitted to an alphabet of L=234 arrival rates ranging from 4 and 2364pkts/s with a step of 10pkts/s (because it corresponds to one arrival in the sampling interval). The logscale diagram identified four time scale ranges (within a total of 14 time scales) defined by j 1=3, j 2=6, j 3=8, j 4=9 and j 5=14. In the case of the UA trace the fitted alphabet had L=215 arrival rates, ranging from 441 to 2581 pkts/s, in steps of 10 pkts/s. As referred before, the UA trace has three time scale ranges (Fig. 5). The Kazaa and OFP traces were fitted to alphabets of L=32 arrival rates. These traces revealed the same two time scale ranges, defined by j 1=5 and j 2=13. 5.2 Double L-System The L-Systems modeling the packet arrival process were those inferred for the single L-System model. The packet size process of the pOct trace was fitted to an alphabet of G=50 mean packet sizes, ranging from 64 to 1436 bytes in steps of 28 bytes. We identified three timescale ranges defined by j 1=3, j 2=8 and j 3=14. The UA trace was fitted to an alphabet of G=50 mean packet sizes, ranging from 232 bytes to 1016 bytes in 16 bytes steps. Again three timescale ranges were identified, defined by j 1=3, j 2=8 and j 3=17. For the Kazaa and OFP traces we obtained alphabets with G=30, ranging, respectively, from 29 bytes to 1537 bytes in steps of 52 bytes and from 23 bytes to 1531 bytes in steps of 52 bytes. In the Kazaa trace four timescale ranges were identified (defined by j 1=3, j 2=8, j 3=9 and j 4=14) but in the OFP trace only two were identified (defined by j 1=5 and j 2=14). 5.3 Joint L-System For each trace, the alphabets of the joint L-System was inferred as all possible combinations of the alphabets, for arrivals and sizes, obtained in the previous two models. The analysis of the (second-order) logscale diagram of the byte arrival process identified the following time scale ranges: (i) for the pOct trace the four timescale ranges j 1=5, j 2=8, j 3=9, j 4=14; (ii) for the UA trace also four ranges defined by j 1=5, j 2=8, j 3=9, j 4=14; (iii) for the Kazaa trace only two ranges defined by j 1=5, j=2=14 and (iv) for the OFP trace the three ranges j 1=5, j 2=11, j 3=14. 5.3.1 L-System with PMFs As in the double L-System case, the L-Systems modeling the packet arrival process were those inferred for the single L-System model. To infer the packet size PMFs, we have considered the same set of packet sizes for all arrival rates. Also, in all traces, only the 20 most frequent packet sizes were considered. The inferred packet size sets were: Ψ l ={64, 74, 94, 102, 110, 126, 130, 142, 150, 162, 174, 190, 570, 938, 986, 1082, 1090, 1242, 1282, 1518} for the pOct trace, Ψ l ={40, 48, 52, 60, 77, 114, 213, 351, 386, 552, 576, 608, 628, 837, 932, 1216, 1400, 1420, 1462, 1500} for the UA trace, Ψ l ={40, 48, 52, 124, 236, 576, 776, 808, 1084, 1176, 1362, 1400, 1420, 1440, 1442, 1454, 1462, 1476, 1480, 1492}, for the Kazaa trace and Ψ l ={40, 44, 48, 52, 208, 636, 648, 668, 674, 686, 708, 710, 1064, 1418, 1420, 1442, 1454, 1460, 1480, 1492} for the OFP trace. 5.4 Model comparison The parameter estimation took, in all cases, less than 2min, using a MATLAB implementation running in the PC described above. This shows that the fitting procedures are computationally very efficient (note that the size of the alphabet, the number of ranges and the size of the trace, which determine the computational time, are all relatively large). The suitability of the traffic models and the accuracy of the fitting procedures was assessed using several criteria. For the original data traces and for traces synthesized according to the inferred models, we compare both the PMF of the byte arrival process and the autocovariance functions of the byte arrival, packet arrival and packet size processes. For the same two traces, we compare the queuing behavior, assessed by the packet loss ratio and by the average packet delay estimated through trace-driven simulation. In the case of the single L-System, we have considered a fixed packet length equal to the mean packet size of the original data. For the pOct Bellcore trace, we also considered a special case of the L-System with PMFs model with only one PMF (for packet sizes), i.e. with no dependence between arrivals and sizes. Note that this special model is only able to characterize the packet size distribution; it will not capture the autocovariance and the multifractal behavior of the packet size process, nor the correlations between arrivals and sizes. Fig. 6 shows that, in the case of the pOct trace, all models were able to match relatively well the PMF of the byte arrival process. The agreement is not so good in the case of the autocovariance functions. In the packet arrival process (Fig. 7 ), there is a relatively good match for all models because all of them include an L-System of arrival rates. In the packet size process (Fig. 8 ), there is a good agreement except in the case of the L-System with PMFs. This model has null autocovariance for all positive lags, which is not the case of both the double and joint L-System models where the autocovariance of the packet size process is implicitly driven by the cascaded structure of the L-System for mean packet sizes. In the byte arrival process (Fig. 9 ), a good agreement was only obtained in the case of the joint L-System model. This model is the most complete one since it is able to capture the autocovariance of the packet arrival and packet size processes, correlations between arrivals and sizes and multifractal behavior on the byte arrival process. Note that in the case of the double L-System, although there is a good agreement both in the packet arrival and packet size processes, there is a deviation in the case of the byte arrival process. This clearly illustrates the importance of modeling the correlations between arrivals and sizes, since the lack of such ability is the only difference between the double and the joint L-System models. Similar results were obtained for the other traces. The multifractal characteristics of the packet arrival process were assessed using a linear multiscale diagram [7], which plots h q =α q /q against q; α q represents the qth order scaling exponent, estimated in the qth order logscale diagram. Multifractal scaling behavior is detected when there is no horizontal alignment (within the limits of the 95% confidence intervals). Fig. 18 shows that the packet arrival processes of the UA and Kazaa traces, and of the traces synthesized according to the inferred L-System, all have multifractal scaling behavior. The pOct trace is not multifractal and the OFP trace is in the limit between non-trivial and trivial multifractality. For all traces, and independently of the presence of multifractal scaling behavior, the L-System was able to capture the scaling behavior of the original traces, since the curves of the original traces are very similar to the ones of the fitted traces. To assess queuing behavior the buffer size was varied from 10KB to 20MB. The service rate was 518KB/s for the pOct trace (corresponding to all utilization of 0.7) and 726KB/s for the UA trace (corresponding to an utilization of 0.9). Figs. 10–13 show that, for all traces, the fitting of the queuing behavior was very good for the joint L-System model but slight differences occurred for the double L-System and the L-System with PMFs. The single L-System and L-System with only one PMF both achieve a similar performance with a large deviation from the original data. This clearly shows the importance of characterizing the correlations between arrivals and sizes. We have also analyzed the queuing behavior of the Kazaa and OFP traces (for utilizations of 0.7). The results are shown in Figs. 14–17 . In these cases, there is a good matching for all L-System models (characterizing both the packet arrivals and packet sizes) but again the best match is obtained with the joint L-System model. From these results, we conclude first that it is important to characterize both the packet arrival and packet size processes and their correlations. The best model, which was able to track almost perfectly the queuing behavior of all traces, is the joint L-System. This can be attributed to its ability of capturing correlations between arrivals and sizes, as well as multifractal behavior on the byte arrival process. The double L-System is somewhat impaired by its inability to capture these correlations and the L-System with PMFs by its inability to capture the autocovariance and the multifractal behavior of the packet size process. However, the L-System with PMFs has a lower number of parameters and therefore can be considered a good alternative. When the alphabet of arrivals has L elements, the alphabet of sizes has G elements and there are R time scale ranges, the number of parameters of the L-System with PMFs is L 2 R+GL and the one of the joint L-System is G 2 L 2 R. 6 Conclusions In this paper, we compared four traffic models, and associated parameter fitting procedures, based on so-called Lindenmayer Systems (L-Systems), which were introduced by biologist A. Lindenmayer as a method to model plant growth. One traffic model characterizes the packet arrival process and the remaining three characterize both the packet arrival and the packet size processes. These models are able to capture the multiscaling and multifractal behavior sometimes observed in Internet traffic. We applied the models to measured traffic data: the well-known pOct Bellcore, a trace of aggregate WAN traffic and two traces of specific applications (Kazaa and OFP). We assessed the multifractality of these traces using Linear Multiscale Diagrams. The suitability of the traffic models was evaluated by comparing the empirical and fitted probability and autocovariance functions; we also compared the packet loss ratio and average packet delay obtained with the measured traces and with traces generated from the fitted models. Our results highlight the importance of characterizing both the packet arrival and packet size processes and show that L-System based traffic models that have these characteristics can achieve very good fitting performance in terms of first- and second-order statistics and queuing behavior. References [1] P. Salvador A. Pacheco R. Valadas Modeling IP traffic: joint characterization of packet arrivals and packet sizes using BMAPs Computer Networks Journal 44 3 2004 335 352 [2] B. Mandelbrot Intermittant turbulence in self-similar cascades: divergence of high moments and dimensions of the carrier Journal of Fluid Mechanics 62 1974 331 358 [3] R. Riedi, J.L. Véhel, Multifractal properties of TCP traffic: a numerical study, Technical Report No. 3129, INRIA Rocquencourt, France Available at www.dsp.rice.edu/~riedi. [4] A. Feldmann, A. Gilbert, W. Willinger, Data networks as cascades: investigating the multifractal nature of internet WAN traffic, in: Proceedings of ACM/SIGCOMM'98, Vancouver, Canada, 1998, pp. 42–55. [5] R. Riedi M. Crouse V. Ribeiro R. Baraniuk A multifractal wavelet model with application to network traffic IEEE Transactions on Information Theory 45 4 1999 992 1018 [6] A. Feldmann, A. Gilbert, P. Huang, W. Willinger, Dynamics of IP traffic: a study of the role of variability and the impact of control, in: ACM/SIGCOMM'99, Cambridge, MA, USA, 1999, pp. 301–313. [7] P. Abry P. Flandrin M. Taqqu D. Witch Self Similar Network Traffic Analysis and Performance Evaluation 2000 Wiley New York Wavelets for the analysis, estimation and synthesis of scaling data, pp. 39–88 [8] J. Gao, I. Rubin, Multifractal analysis and modeling of long-range-dependent traffic, in: Proceedings ICC'99, Vancouver, Canada, 1999, pp. 382–386. [9] A. Gilbert W. Willinger A. Feldmann Scaling analysis of conservative cascades, with applications to network traffic IEEE Transactions on Information Theory 45 3 1999 971 992 [10] A. Erramilli, O. Narayan, A. Neidhardt, I. Saniee, Performance impacts of multi-scaling in wide area TCP/IP traffic, in: Proceedings of INFOCOM'2000, Tel Aviv, Israel, 2000, pp. 352–359. [11] D. Veitch, P. Abry, P. Flandrin, P. Chainais, Infinitely divisible cascade analysis of network traffic data, in: Proceedings of the International Conference on Acoustic Speech and Signal Processing, Istanbul, Turkey, 2000. [12] J. Gao I. Rubin Multifractal modeling of counting processes of long-range-dependent network traffic Computer Communications 24 2001 1400 1410 [13] A. Lindenmayer Mathematical models for cellular interactions in development. II. Simple and branching filaments with two-sided inputs Journal of Theoretical Biology 18 1968 300 315 [14] H. Peitgen H. Jurgens D. Saupe Chaos and Fractals: New Frontiers of Science 1992 Springer Berlin [15] P. Salvador, A. Nogueira, R. Valadas, Modeling multifractal traffic with stochastic L-Systems, in: Proceedings of GLOBECOM'2002, Taipei, Taiwan, 2002. [16] P. Salvador, A. Nogueira, R. Valadas, Modeling multifractal IP traffic: characterization of packet arrival and sizes with stochastic L-Systems, in: Proceedings of the 10th International Conference on Telecommunication Systems, Modeling and Analysis (ICTSM10), vol. 2, Monterey, CA, USA, 2002, pp. 577–587. [17] P. Salvador, A. Nogueira, R. Valadas, Joint characterization of the packet arrival and packet size processes of multifractal traffic based on stochastic L-Systems, in: Proceedings of the 18th International Teletraffic Congress (ITC18), Berlin, Germany, 2003, pp. 561–570. [18] P. Salvador, A. Nogueira, R. Valadas, Framework based on stochastic L-Systems for modeling IP traffic with multifractal behavior, in: Proceedings of SPIE Conference on Performance and Control of Next Generation Communication Networks, vol. 5244, ITCom 2003, Orlando, FL, USA, 2003, pp. 18–28. [19] P. Salvador, A. Nogueira, R. Valadas, Scaling behavior analysis of multifractal traffic models based on stochastic L-Systems, Technical Report, University of Aveiro, 2002. "
    },
    {
        "doc_title": "Modeling IP traffic: Joint characterization of packet arrivals and packet sizes using BMAPs",
        "doc_scopus_id": "0346342502",
        "doc_doi": "10.1016/j.comnet.2003.10.004",
        "doc_eid": "2-s2.0-0346342502",
        "doc_date": "2004-02-20",
        "doc_type": "Article",
        "doc_areas": [
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            }
        ],
        "doc_keywords": [
            "Autocovariance",
            "Packet size distributions"
        ],
        "doc_abstract": "This paper proposes a traffic model and a parameter fitting procedure that are capable of achieving accurate prediction of the queuing behavior for IP traffic exhibiting long-range dependence. The modeling process is a discrete-time batch Markovian arrival process (dBMAP) that jointly characterizes the packet arrival process and the packet size distribution. In the proposed dBMAP, packet arrivals occur according to a discrete-time Markov modulated Poisson process (dMMPP) and each arrival is characterized by a packet size with a general distribution that may depend on the phase of the dMMPP. The fitting procedure is designed to provide a close match of both the autocovariance and the marginal distribution of the packet arrival process, using a dMMPP; a packet size distribution is fitted individually to each state of the dMMPP. A major feature of the procedure is that the number of states of the fitted dBMAP is not fixed a priori; it is determined as part of the procedure itself. In this way, the procedure allows establishing a compromise between the accuracy of the fitting and the number of parameters, while maintaining a low computational complexity. We apply the inference procedure to several traffic traces exhibiting long-range dependence. Very good results were obtained since the fitted dBMAPs match closely the autocovariance, the marginal distribution and the queuing behavior of the measured traces. Our results also show that ignoring the packet size distribution and its correlation with the packet arrival process can lead to large errors in terms of queuing behavior. © 2003 Elsevier B.V. All rights reserved.",
        "available": true,
        "clean_text": "serial JL 271990 291210 291718 291869 31 Computer Networks COMPUTERNETWORKS 2003-11-05 2003-11-05 2010-10-06T23:24:19 S1389-1286(03)00398-0 S1389128603003980 10.1016/j.comnet.2003.10.004 S300 S300.1 FULL-TEXT 2015-05-15T06:10:32.372761-04:00 0 0 20040220 2004 2003-11-05T00:00:00Z articleinfo crossmark dco dateupdated tomb dateloaded datesearch indexeddate issuelist volumelist yearnav articletitlenorm authfirstinitialnorm authfirstsurnamenorm cid cids contenttype copyright dateloadedtxt docsubtype doctype doi eid ewtransactionid hubeid issfirst issn issnnorm itemstage itemtransactionid itemweight openaccess openarchive pg pgfirst pglast pii piinorm pubdatestart pubdatetxt pubyr sortorder srctitle srctitlenorm srctype subheadings volfirst volissue figure table body acknowledge affil articletitle auth authfirstini authfull authkeywords authlast footnotes misctext primabst ref alllist content subj ssids 1389-1286 13891286 44 44 3 3 Volume 44, Issue 3 6 335 352 335 352 20040220 20 February 2004 2004-02-20 2004 converted-article fla Copyright © 2003 Elsevier B.V. All rights reserved. MODELINGIPTRAFFICJOINTCHARACTERIZATIONPACKETARRIVALSPACKETSIZESUSINGBMAPS SALVADOR P 1 Introduction 2 Background 2.1 Characterization of the discrete-time batch Markovian arrival process used 2.2 Auxiliary results for the fitting procedure 3 Inference procedure 3.1 Autocovariance approximation and time scales identification 3.2 Inference of the M-dMMPP probability function and of the L 2-dMMPP parameters 3.3 Inference of the M-dMMPP packet arrival rates and transition probabilities 3.4 Packet size distribution fitting and calculation of the final parameters 4 The importance of fitting the packet size 5 Results 5.1 Belcore trace 5.2 UA traces 6 Conclusions Acknowledgements References MEIERHELLSTERN 1987 370 377 K LI 1997 95 110 S ROBERT 1997 57 68 S ANDERSEN 1998 719 732 A HAJEK 1998 588 598 B RIEDI 1999 992 1018 R YOSHIHARA 2001 185 211 T SALVADOR 2003 123 148 P KLEMM 2003 149 173 A LELAND 1994 1 15 W BERAN 1995 1566 1579 J CROVELLA 1997 835 846 M PAXSON 1995 226 244 V WILLINGER 1997 71 86 W WILLINGER 1998 W SELFSIMILARITYHEAVYTAILSSTRUCTURALMODELINGNETWORKTRAFFICAPRACTICALGUIDEHEAVYTAILSSTATISTICALTECHNIQUESAPPLICATIONS ABRY 2000 P SELFSIMILARNETWORKTRAFFICANALYSISPERFORMANCEEVALUATION WAVELETSFORANALYSISSTIMATIONSYNTHESISSCALINGDATA RYU 1996 3 14 B GROSSGLAUSER 1999 629 640 M LUCANTONI 1991 1 46 D LUCANTONI 1993 330 358 D MODELSTECHNIQUESFORPERFORMANCEEVALUATIONCOMPUTERCOMMUNICATIONSYSTEMS BMAPG1QUEUEATUTORIAL PACHECO 1995 167 194 A ADVANCESINQUEUEINGTHEORYMETHODS MARKOVADDITIVEPROCESSESARRIVALS VEITCH 1999 878 897 D LUCANTONI 1990 676 705 D ASMUSSEN 1993 365 372 S BLONDIA 1992 5 20 C BLONDIA 1993 3 23 C ALFA 1994 437 451 A RANANAND 1995 713 734 N GEERTS 1996 F INFORMATIONNETWORKDATACOMMUNICATIONSPROCEEDINGSIFIPICCCINTERNATIONALCONFERENCEINFORMATIONNETWORKDATACOMMUNICATION SUPERPOSITIONMARKOVSOURCESLONGRANGEDEPENDENCE RIDDER 1998 127 132 A FELDMANN 1997 245 279 A OSBORNE 1995 119 138 M KARLIS 2001 93 115 D SALVADORX2004X335 SALVADORX2004X335X352 SALVADORX2004X335XP SALVADORX2004X335X352XP item S1389-1286(03)00398-0 S1389128603003980 10.1016/j.comnet.2003.10.004 271990 2010-11-07T22:26:51.416897-05:00 2004-02-20 true 840934 MAIN 18 54525 849 656 IMAGE-WEB-PDF 1 si99 396 24 65 si98 1339 51 259 si97 396 24 65 si96 1404 51 304 si95 661 22 168 si94 784 21 161 si93 642 24 132 si92 396 24 65 si91 280 24 41 si90 280 24 41 si9 678 18 125 si89 280 24 41 si88 2602 50 495 si87 818 22 188 si86 684 22 135 si85 2074 31 446 si84 318 22 39 si83 1553 50 309 si82 280 24 41 si81 774 22 197 si80 706 17 189 si8 721 18 151 si79 734 22 203 si78 1233 22 277 si77 1468 35 310 si76 185 22 17 si75 1205 51 228 si74 858 48 176 si73 875 22 223 si72 306 17 49 si71 1523 52 329 si70 969 19 215 si69 1522 19 407 si7 194 14 18 si68 1913 19 494 si67 1388 48 315 si66 1021 27 372 si65 317 17 51 si64 2559 49 505 si63 2702 53 437 si62 955 17 216 si61 1214 22 317 si60 1604 51 359 si6 723 18 146 si59 2948 90 349 si58 1995 33 469 si57 1457 28 355 si56 964 37 227 si55 1012 48 215 si54 462 15 123 si53 1003 24 282 si52 867 18 208 si51 833 19 200 si50 2320 50 456 si49 1089 22 326 si48 632 22 143 si47 1967 50 336 si46 1324 21 340 si45 1324 21 342 si5 475 18 101 si44 652 17 123 si43 652 17 123 si42 792 18 160 si41 782 17 164 si40 897 18 201 si4 1906 40 487 si39 1501 79 236 si38 1563 79 233 si37 251 13 38 si36 778 17 170 si35 301 17 41 si34 919 18 206 si33 609 18 119 si32 301 17 41 si31 609 18 119 si30 609 18 119 si29 2181 48 507 si28 350 14 63 si27 309 14 52 si26 289 14 44 si25 1287 49 211 si24 309 14 52 si23 301 17 41 si22 309 14 52 si21 653 18 136 si3 309 14 52 si20 723 18 146 si2 821 18 182 si19 263 13 40 si18 657 36 120 si17 678 18 125 si16 913 19 240 si15 475 18 101 si14 301 17 41 si13 309 14 52 si12 435 20 74 si110 121 11 12 si11 189 13 23 si109 147 12 15 si108 567 20 142 si107 653 18 136 si106 1269 48 180 si105 996 26 210 si104 202 16 27 si103 233 15 30 si102 274 16 53 si101 305 15 56 si100 935 25 251 si10 498 18 89 si1 194 14 18 gr1 1836 44 125 gr1 3721 91 257 gr2 933 93 51 gr2 14397 600 329 gr3 1808 94 54 gr3 6897 323 186 gr4 2177 86 125 gr4 3853 146 211 gr5 1990 93 121 gr5 3413 163 211 gr6 2123 93 119 gr6 3892 165 211 gr7 2417 88 125 gr7 4112 148 211 gr8 1901 93 120 gr8 9055 254 327 gr9 1924 93 120 gr9 9343 254 327 gr10 2239 94 117 gr10 4115 170 211 gr11 1890 94 113 gr11 3530 176 211 gr12 2013 93 118 gr12 3573 167 213 gr13 1927 93 119 gr13 3269 165 211 gr14 1828 92 116 gr14 3143 168 212 gr15 2576 88 125 gr15 4563 149 211 gr16 2460 88 125 gr16 4191 149 211 gr17 2409 88 125 gr17 4091 149 211 gr18 2491 88 125 gr18 4188 149 211 COMPNW 2855 S1389-1286(03)00398-0 10.1016/j.comnet.2003.10.004 Elsevier B.V. Fig. 1 Superposition of one M-dMMPP and L 2-dMMPP processes. Fig. 2 Flow diagram of the inference procedure. Fig. 3 Algorithm for calculation of the number of states and Poisson packet arrival rates of the M-dMMPP. Fig. 4 Packet loss ratio versus buffer size, dBMAP. Fig. 5 Probability function of the packet arrival rate, trace pAug.TL. Fig. 6 Autocovariance of the packet arrival rate, trace pAug.TL. Fig. 7 Packet loss ratio versus buffer size, trace pAug.TL. Fig. 8 Packet size histogram of original data, trace pAug.TL. Fig. 9 Packet size histogram of fitted trace, trace pAug.TL. Fig. 10 Logscale diagram for the bytes/s process, trace UA19. Fig. 11 Probability function of the packet arrival rate, trace UA19. Fig. 12 Autocovariance of the packet arrival rate, trace UA19. Fig. 13 Packet size histogram of original data, trace UA19. Fig. 14 Packet size histogram of fitted trace, trace UA19. Fig. 15 Packet loss ratio versus buffer size, trace UA19. Fig. 16 Packet loss ratio versus buffer size, trace UA1. Fig. 17 Packet loss ratio versus buffer size, trace UA6. Fig. 18 Packet loss ratio versus buffer size, trace UA10. Table 1 Fitting results for the packet arrival process Trace name Inferred model π 1 L Mean rate (pkts/s) PF IC (%) AF IC (%) pAug.TL 56-dBMAP 0.1 3 318 7.25 29.05 UA1 24-dBMAP 0.1 3 776 10.02 7.31 UA6 12-dBMAP 0.2 2 527 13.62 5.70 UA10 16-dBMAP 0.1 2 1111 9.70 17.88 UA19 12-dBMAP 0.2 2 1125 10.75 5.23 Table 2 Estimated Hurst parameters of original and fitted traces Trace name Hurst parameter (original) Hurst parameter (fitted) pAug.TL 0.866 (3–11) 0.880 (4–11) UA1 0.985 (7–15) 0.956 (8–15) UA6 0.969 (6–15) 0.943 (7–15) UA10 0.986 (6–15) 0.981 (6–15) UA19 0.982 (6–15) 0.977 (5–15) Table 3 Main characteristics of measured traces Trace name Capture date Capture interval Trace size (pkts) UA1 Tue, July 3rd 2001 8.00 p.m. to 3.15 a.m. 20 millions UA6 Thu, July 5th 2001 3.58 a.m. to 9.11 a.m. 10 millions UA10 Fri, July 6th 2001 12.41 p.m. to 3.16 p.m. 10 millions UA19 Tue, July 10th 2001 10.15 a.m. to 3.08 p.m. 20 millions Table 4 Main statistics of measured traces Trace name Mean rate (pkts/s) Mean rate (Kbytes/s) Mean pkt size (bytes) UA1 766 461.0 598 UA6 533 441.8 692 UA10 1074 645.4 600 UA19 1138 629.0 557 Modeling IP traffic: joint characterization of packet arrivals and packet sizes using BMAPs Paulo Salvador a António Pacheco b ∗ Rui Valadas a a Institute of Telecommunications Aveiro, University of Aveiro, Campus de Santiago, 3810-193 Aveiro, Portugal b Department of Mathematics and Centre for Mathematics and its Applications, Instituto Superior Técnico, Technical University of Lisbon, Av. Rovisco Pais 1, 1049-001 Lisboa, Portugal ∗ Corresponding author Responsible Editor: H.L. Truong This paper proposes a traffic model and a parameter fitting procedure that are capable of achieving accurate prediction of the queuing behavior for IP traffic exhibiting long-range dependence. The modeling process is a discrete-time batch Markovian arrival process (dBMAP) that jointly characterizes the packet arrival process and the packet size distribution. In the proposed dBMAP, packet arrivals occur according to a discrete-time Markov modulated Poisson process (dMMPP) and each arrival is characterized by a packet size with a general distribution that may depend on the phase of the dMMPP. The fitting procedure is designed to provide a close match of both the autocovariance and the marginal distribution of the packet arrival process, using a dMMPP; a packet size distribution is fitted individually to each state of the dMMPP. A major feature of the procedure is that the number of states of the fitted dBMAP is not fixed a priori; it is determined as part of the procedure itself. In this way, the procedure allows establishing a compromise between the accuracy of the fitting and the number of parameters, while maintaining a low computational complexity. We apply the inference procedure to several traffic traces exhibiting long-range dependence. Very good results were obtained since the fitted dBMAPs match closely the autocovariance, the marginal distribution and the queuing behavior of the measured traces. Our results also show that ignoring the packet size distribution and its correlation with the packet arrival process can lead to large errors in terms of queuing behavior. Keywords IP traffic modeling Packet size distribution BMAP 1 Introduction Traffic characterization and modeling is a crucial activity towards an efficient dimensioning and resource management of IP networks. Accurate modeling of IP traffic requires matching closely not only the packet arrival process but also the packet size distribution. Surprisingly, while the arrival process has received considerable attention [1–10], very few works have addressed the packet size distribution and, more so, its joint characterization with the arrival process [11,12]. However, as it will be made clear in this paper, a joint characterization is required for accurate prediction of the queuing behavior (i.e., the packet loss ratio or average packet delay observed in a queuing system). The queuing behavior is one of the most important criteria to assess the suitability of traffic models (and associated parameter fitting procedures), since it addresses the effect of traffic on network performance. The analysis consists in comparing the curves of packet loss ratio (or average packet delay) versus buffer size, obtained with the measured traces (through trace-driven simulation) and with the inferred traffic model (using again trace-driven simulation or numerical computation of these performance measures whenever possible). When dealing with models that characterize only the arrival process, it is common practice to assume that the packet size is fixed and equal to the average packet size of the measured trace. This may lead to large errors when the packets have variable size, such as in IP traffic. Accurate prediction of the queuing behavior also requires detailed modeling of the first and second order statistics of the packet arrival process. This motivated the inference procedures for circulant Markov modulated Poisson processes (MMPPs) presented in [2] and for other special cases of MMPPs presented in [10]. Also in this direction, the work in [6] discusses the limitations of using only the mean and the autocorrelation function as statistical descriptors of the input traffic, for the purpose of analyzing queuing performance. The authors show that the mean queue length can vary substantially when the parameters of the input process are varied, subject to the same mean arrival rate and autocorrelation function. Thus, in general, accurate prediction of the queuing behavior requires detailed modeling of the marginal distribution, and not just of the mean arrival rate, in addition to the autocovariance modeling. Since the work by Leland et al. [13] several studies have shown that network traffic may exhibit properties of self-similarity [13–19]. More recently, a multifractal behavior, which is typically associated with networking mechanisms operating on small time scales, was discovered in several traces of Internet WAN traffic [20–24]. In general, these characteristics include the long-range dependence (LRD) property and can have a significant impact on the network performance. However, as pointed out in [25–27] matching the LRD is only required within the time scales of interest to the system under study. For example, in order to analyze queuing behavior, the selected traffic model needs only to capture the correlation structure of the source up to the so-called critical time scale or correlation horizon, which is directly related to the maximum buffer size. One of the consequences of this result is that more traditional traffic models, such as MMPPs, can still be used to model traffic exhibiting LRD. We introduce a batch Markovian arrival process (BMAP) (see, e.g., [28–30]), that jointly characterizes the packet arrival process and the packet size distribution, and we develop a parameter fitting procedure that is capable of achieving accurate prediction of queuing behavior for IP traffic exhibiting LRD behavior. We consider the discrete-time version of the BMAP process, denoted hereby by dBMAP. In this dBMAP, packet arrivals occur according to a discrete-time Markov modulated Poisson process (dMMPP) and each arrival is further characterized by a packet size with a general distribution that may depend on the phase of the dMMPP. The fitting procedure starts by matching both the autocovariance and the marginal distribution of the packet arrival process using a dMMPP; it then matches the packet size distribution in each state of the associated dMMPP in order to fully characterize the dBMAP. This allows having a packet size distribution closely related to the packet arrival process, and is in contrast with the approach followed by [11] where the packet size distribution is fitted prior to the matching of the packet arrival rates. In addition, the number of states of the associated dMMPP is not fixed a priori; it is determined as part of the procedure. In this way, the procedure allows establishing a compromise between the accuracy of the fitting and the number of parameters, while maintaining a low computational complexity. The associated dMMPP fits the first and second order statistics of the packet arrival process. Specifically, we work with the counts of the packet arrival process, i.e., the number of packet arrivals in a pre-defined sampling interval (also called time slot). Matching simultaneously the autocovariance and marginal distribution of the packet arrival process is a difficult task since every dMMPP parameter has an influence on both characteristics. With the purpose of achieving some degree of decoupling when matching these two statistics, we construct the dMMPP as a superposition of L 2-dMMPPs and one M-dMMPP (where k-dMMPP represents a dMMPP with k states); L and M are determined as part of the fitting procedure. We will denote the resulting process as M2 L -dMMPP. We use the L 2-dMMPPs to match the autocovariance, where each 2-dMMPP models a characteristic time constant of this function, and the M-dMMPP to match the marginal distribution (taking into account the contribution of the L 2-dMMPPs). While, in general, the addition of a dMMPP to a process changes both the marginal distribution and the autocovariance function, we devised a procedure where this is done in a controlled way. Specifically, the procedure assures that the M-dMMPP has null autocovariance, thus forcing the autocovariance of the combined process to equal that of the superposition of the L 2-dMMPPs. Finally, the dBMAP is constructed by associating a packet size distribution to each state of the associated dMMPP. We apply the fitting procedure to several traffic traces exhibiting LRD. The LRD characteristics are analyzed using the wavelet based estimator of [31]. Results show that the dBMAPs obtained through the fitting procedure are capable of modeling the LRD behavior present in data, and closely match the first and second order statistics of the packet arrival process, the packet size distribution and the queuing behavior. This paper is organized as follows. In Section 2 we give some background on discrete-time BMAPs and define the specific dBMAP that we propose. In Section 3 we describe the fitting procedure. A study concerning the importance of the packet size fitting is carried out in Section 4. In Section 5 we present the results of applying the fitting procedure to measured traffic traces. Finally, in Section 6 we conclude the paper. The main contributions of this paper are the following. First, we introduce a traffic model and a fitting procedure that provide a detailed joint characterization of the packet size distribution and the first and second order statistics of the packet arrival process; the process is both accurate and numerically efficient. Second, we show that ignoring the packet size distribution and its correlation with the packet arrival process can lead to large errors in terms of queuing behavior. Finally, we show that the proposed traffic model and fitting procedure are capable of matching closely traffic traces with LRD characteristics. 2 Background The (continuous-time) BMAP was introduced by Lucantoni [28] as a generalization of the (simple) Markovian arrival process introduced in [32]. The BMAP is a very general arrival process that, as remarked by Pacheco and Prabhu [30], achieves the full generality of the univariate Markov additive processes of arrivals when the associated Markov component has finite state space. In addition, it enjoys the many good properties of Markov additive processes as, e.g., being closed for the superposition of independent processes. Moreover, Asmussen and Koole [33] proved that any marked point process whose marks are real-valued can be obtained as the weak limit, i.e., limit in distribution, of a sequence of Markovian arrival processes. The fitting of the BMAP to IP traffic is used in [11] with relative success. For a history of the BMAP and its applications, and a very extensive list of references, see [29]. The discrete-time version of the BMAP (which we denote by dBMAP, usually denoted by D-BMAP) was proposed by Blondia and Casals [34] and has received a great deal of attention (see, e.g., [35–39] and references therein), although not as many as its continuous-time counterpart. The dBMAP also belongs to the class of univariate Markov additive processes and, thus, similarly enjoys the many good properties of this class of processes, some of which are addressed in Section 2.1. Among other applications, the dBMAP has been used to model bursty sources and in speech recognition. Moreover, it has been shown that LRD may result from the superposition of dBMAPs [38]. A very important particular case of the dBMAP is the dMMPP [10]. In the dMMPP the number of arrivals at each instant has a Poisson distribution with parameter depending on the phase (of the modulator discrete-time Markov chain). For the modeling of IP traffic we propose to use a dBMAP such that: arrivals (of packets) occur according to a dMMPP; and, each arrival is characterized by a batch whose size has a general distribution that may depend on the phase of the dMMPP describing the packet arrival process. This is in contrast with [11], where the packet size is fitted in advance, in part, to avoid a prohibitive number of parameters to be estimated. However we do not have such a problem since the packet size distribution for each phase of the dMMPP that models the arrival of packets is fitted only after the parameters of the dMMPP have been adjusted. Our procedure is especially well suited to accurately fit the packet size distribution. 2.1 Characterization of the discrete-time batch Markovian arrival process used The dBMAP may be regarded as an Markov random walk whose additive component takes values on the non-negative integers, N 0 . Thus, we say that a Markov chain (Y,J)={(Yk,Jk),k∈N 0} on the state space N 0×S is a dBMAP if (1) P(Yk+1=m,Jk+1=j∣Yk=n,Jk=i)= 0, m<n, pijqij(m−n), m⩾n, where P =(pij)i,j∈S is a stochastic matrix and, for each pair (i,j)∈S 2, qij={qij(n),n∈N 0} is a probability function over N 0 , and we let Q (n)=(qij(n))i,j∈S . This implies, in particular that J is a Markov chain, called the Markov component or phase of (Y,J) and S is the set of modulating states or the phase set. When the dBMAP (Y,J) is used to model an arrival process, Y k may be interpreted as the total number of arrivals until instant k. Following [30], we will say that the dBMAP (Y,J) described by (1) has parametrization ( P ,{ Q (n),n∈N}). 1 We note that this parametrization does not correspond to the most common parametrization used for dBMAPs, which is of the form { D n,n∈N 0}, where the matrices D n are finite non-negative square matrices such that ∑n=0 ∞ D n is a stochastic matrix [34]. However, the parametrization we will use is more adequate for the dBMAPs we consider in the paper. 1 In the paper, we will refer to two dBMAPs, (X,J) and (Y,J), where X n (Y n ) will represent the total number of packets (bytes) that arrive until instant n. Similarly, J will represent the state of a non-observable environment that affects both the number of packets that arrive at each instant and the corresponding packet sizes (in bytes). An important particular case of the dBMAP is the dMMPP. We say that the process (X,J) on the state space N 0×S is a dMMPP with parameters ( P , Λ ), where P =(pij)i,j∈S is a stochastic matrix and Λ =(λij)i,j∈S=(λi1{i=j})i,j∈S is a diagonal matrix with non-negative entries (i.e., λ i ⩾0, i∈S), if it is a dBMAP with parametrization ( P ,{ Q (n),n∈N}), where (2) qij(n)=e −λj λj n n! for i,j∈S and n∈N ; i.e., qij={qij(n),n∈N 0} is the probability function of a Poisson random variable with mean λ j . Thus a dMMPP is a dBMAP for which the number of arrivals in a given instant of time is only a function of the current phase of the dBMAP and when the process is in phase j the number of arrivals at an instant has a Poisson distribution with mean λ j ; the parameter λ j may be null, in which case no arrivals occur in phase j. In our analysis a dMMPP will be used to model the packet arrival process. We will consider additionally that the packets have independent sizes, with the size of packets arriving in phase i having probability function qi={qi(n),n∈N}. Accordingly, if we let (X,J) denote the dMMPP, on the state space N 0×S and having parametrization ( P , Λ ), that models the packet arrival process, then the byte arrival process (Y,J) is a dBMAP, on the state space N 0×S, satisfying (1) with (3) qij(n)=∑l=0 +∞ e −λj λj l l! qj (l)(n) for i,j∈S and n∈N 0 , where q j (l) denotes de convolution of order l of q j . Thus, (Y,J) is a dBMAP on the state space N 0×S, such that, for n,m∈N 0 , (4) P(Yk+1=m+n,Jk+1=j∣Yk=m,Jk=i)=pij∑l=0 +∞ e −λj λj l l! qj (l)(n), which we express by saying that (Y,J) has type-II parametrization ( P , Λ ,{qi,i∈S}). The alternative type-II parametrization is the most convenient for the subclass of dBMAPs that we will consider in the paper, since ( P , Λ ,{qi,i∈S}) contains: (i) the parameters ( P , Λ ) of the associated dMMPP modeling the packet arrival process and (ii) the distribution of the size of packets arriving in phase i, q i , for i∈S. However, as our construction highlights, the type-II parametrization is only valid for dBMAPs satisfying (4). Given a dBMAP (Y,J) with phase set S and type-II parametrization ( P , Λ ,{qi,i∈S}) we write (5) (Y,J)∼dBMAP S( P , Λ ,{qi}). Similarly if (X,J) is a dMMPP with phase set S and having parameters ( P , Λ ), we write (6) (X,J)∼dMMPP S( P , Λ ). If S has cardinality r, we say that (Y,J) ((X,J)) is a dBMAP (dMMPP) of order r, r-dBMAP (r-dMMPP). When, in particular, S={1,2,…,r} for some r∈N , then (7) P = p11 p12 … p1r p21 p22 … p2r … … … … pr1 pr2 … prr , Λ = λ1 0 … 0 0 λ2 … 0 … … … … 0 0 … λr , and we write simply (Y,J)∼dBMAP r( P , Λ ,{qi}) and (X,J)∼dMMPP r( P , Λ ). 2.2 Auxiliary results for the fitting procedure The fitting of a dBMAP M2L ( P , Λ ,{qi}) to the input traffic is made in two steps: (i) fitting of the dMMPP M2L ( P , Λ ) modeling the packet arrival process and (ii) fitting of the packet size distribution in phase i, q i , for i=1,2,…,M2 L . Thus, we next proceed with a description of some transformations on dMMPPs which we will use to obtain the process dMMPP M2L ( P , Λ ). We consider the superposition of L independent 2-dMMPPs (8) (X(l),J(l))∼dMMPP 2( P (l), Λ (l)),l=1,2,…,L and one M-dMMPP (9) (X(L+1),J(L+1))∼dMMPP M( P (L+1), Λ (L+1)), which is illustrated in Fig. 1 . Note that, in particular, for l=1,2,…,L, (10) P (l)= p(l) 11 p(l) 12 p(l) 21 p(l) 22 , Λ (l)= λ(l) 1 0 0 λ(l) 2 and we assume that p (l) 12+p (l) 21<1. In addition, we consider J (1),J (2),…,J (L+1) to be ergodic chains in steady-state. For l=1,2,…,L we denote by π(l)=[ π(l) 1 π(l) 2 ] the stationary distribution of J (l). Similarly, we denote by π(L+1)=[ π(L+1) 1 π(L+1) 2 ⋯ π(L+1) M ] the stationary distribution of J (L+1). The result of the superposition is the process (11) (X,J)= ∑ l=1 L+1 X(l),(J(1),J(2),…,J(L+1)) ∼dMMPP M2L ( P , Λ ), where (12) P = P (1)⊗ P (2)⊗⋯⊗ P (L+1), (13) Λ = Λ (1)⊕ Λ (2)⊕⋯⊕ Λ (L+1) with ⊕ and ⊗ denoting the Kronecker sum and the Kronecker product, respectively. Note that the Markov chain J is also in steady-state. We refer to (X,J) as being the M2 L -dMMPP. In our approach L and M are not fixed a priori but instead are computed as part of the fitting procedure. However, in the rest of this section they may be thought as being fixed. We want that the L 2-dMMPPs capture the autocovariance function of the increments of the packet arrival process (X) and, discounting for the effect of the other L 2-dMMPPs, the M-dMMPP approximates the distribution of the increments of the packet arrival process. To explain how this may be accomplished, it is convenient to define the increment processes associated to X (1),X (2),…,X (L+1), and X, which we denote by Z (1),Z (2),…,Z (L+1), and Z, respectively. Thus, (14) Z(l) k=X(l) k+1−X(l) k,l=1,2,…,L+1 and (15) Zk=Xk+1−Xk for k=0,1,… Note that Z k is the (total) number of packet arrivals at sampling interval k and Z (l) k is the number of packet arrivals that are due to the lth packet arrival process, so that, in particular, (16) Zk=∑l=1 L+1Z(l) k,k=0,1,2,… Moreover Z (1),Z (2),…,Z (L+1), and Z, are stationary sequences. In order to characterize the marginal distributions of the processes Z (1),Z (2),…,Z (L+1), and Z, we denote, respectively, by {f l (k),k=0,1,2,…}, l=1,2,…,L+1, and {f(k),k=0,1,2,…}, their (marginal) probability functions. As the univariate distributions of Z (1),Z (2),…,Z (L+1) are mixtures of Poisson distributions, we denote the probability function of a Poisson random variable with mean μ by {g μ (k),k=0,1,2,…}, for μ∈[0,+∞), so that (17) gμ(k)=e −μ μk k! ,k=0,1,2,… For l=1,2,…,L, the (stationary) marginal distribution of Z (l) (that is, the distribution of Z (l) k , for k=0,1,…) is a mixture of two Poisson distributions with means λ (l) 1 and λ (l) 2 and weights π (l) 1 and π (l) 2, respectively, since π (l) 1 and π (l) 2 are the stationary probabilities of states 1 and 2 and λ (l) 1 and λ (l) 2 are the corresponding Poisson packet arrival rates. Thus the probability functions of Z (l), l=1,2,…,L, are given by (18) fl(k)=π(l) 1gλ(l) 1 (k)+π(l) 2gλ(l) 2 (k),k=0,1,2,… and their autocovariance functions are (19) γ(l) k=Cov Z(l) 0,Z(l) k =π(l) 1π(l) 2 λ(l) 2−λ(l) 1 2 e kcl ,k=1,2,…, where c l =ln(1−p (l) 12−p (l) 21). Note that, in particular, the autocovariance functions of Z (1),Z (2),…,Z (L) exhibit an exponential decay to zero. As we want the M-dMMPP to approximate the distribution of the increments of the packet arrival process but to have no contribution to the autocovariance function of the increments of the M2 L -dMMPP, we choose to make J (L+1) a Markov chain with no memory whatsoever. This is accomplished by choosing (20) P (L+1)= π(L+1) 1 π(L+1) 2 ⋯ π(L+1) M π(L+1) 1 π(L+1) 2 ⋯ π(L+1) M ⋯ ⋯ ⋯ ⋯ π(L+1) 1 π(L+1) 2 ⋯ π(L+1) M . Note that this implies that Z (L+1) is an independent and identically distributed sequence of random variables whose distribution is a mixture of M Poisson random variables with means λ (L+1) i and weights π L+1 i , for i=1,2,…,M. As a consequence, the probability function of Z (L+1) is given by (21) fL+1(k)=∑j=1 Mπ(L+1) jgλ(L+1) j (k),k=0,1,2,… and the autocovariance function of Z (L+1) is null for all positive lags; i.e., (22) γ(L+1) k=Cov(Z(L+1) 0,Z(L+1) k)=0,k⩾1. Taking into account (16), it follows that the probability function of Z is given by (23) f(k)=(f1⊕f2⊕⋯⊕fL+1)(k), where ⊕ denotes the convolution of probability functions. Z is a sequence of random variables whose distribution is a mixture of Poisson random variables (note that the sum of independent mixtures of Poisson random variables is also a mixture of Poisson random variables), and the probability function of Z may be written in the following way: (24) f(k)=∑j1=1 2∑j2=1 2⋯∑jL=1 2∑jL+1=1 M ∏l=1 L+1π(l) jl g∑l=1 L+1λ(l) jl (k). Moreover, from (16) and taking into account (19) and (22), we conclude that the autocovariance function of Z is given by (25) γk=Cov(Z0,Zk)=∑l=1 L+1 Cov(Z0 (l),Zk (l))=∑l=1 Lπ(l) 1π(l) 2(λ(l) 2−λ(l) 1)2 e kcl for k=1,2,… 3 Inference procedure In the rest of the paper we will refer to Z (1),Z (2),…,Z (L) as the 2-dMMPPs that are used to match the autocovariance of packet arrival counts, to Z (L+1) as the M-dMMPP that is incorporated in order to match the marginal distribution of packet arrivals counts, to Z as the counts of X, the aggregate M2 L -dMMPP that models the packet arrival process, and to Y as the M2 L -dBMAP that models the arrival process of bytes. The inference procedure can be divided in four steps: (i) approximation of the empirical autocovariance of packet arrival counts by a weighted sum of exponentials and identification of time scales, (ii) inference of the M-dMMPP probability function and of the 2-dMMPPs parameters, (iii) inference of the M-dMMPP packet arrival rates and transition probabilities, and subsequent calculation of the M2 L -dMMPP parameters, and (iv) fitting of the packet size (in bytes) distribution for each of the M2 L phases and calculation of the final M2 L -dBMAP parameters. The flow diagram of this procedure is represented in Fig. 2 . In the following four subsections we describe these four steps in detail. 3.1 Autocovariance approximation and time scales identification Our approach is to approximate the autocovariance (of packet arrival counts) by a large number of exponentials and then aggregate exponentials with a similar decay into the same time scale. This is close to the approaches considered in [5,8,40]. As a first step, we approximate the empirical autocovariance by a sum of K exponentials with real positive weights and negative real time constants. We chose K as k max , where k max represents the number of points of the empirical autocovariance. This is accomplished through a modified Prony algorithm [41]. The Prony algorithm returns two vectors, a → = a1 ⋯ aK , b → = b1 ⋯ bK , which correspond to the approximating function (26) Ck( a → , b → )=∑i=1 Kai e −bik,k=0,1,2,… At this point we identify the components of the autocovariance that characterize the different time scales. We define L different time scales, in which the autocovariance decays, b i , i=1,…,K, fall in the same logarithmic scale. To explain how this is accomplished it is useful to order the b j coefficients in non-decreasing order, i.e., b j ⩽b j+1, 1⩽j⩽K−1, and let ⌈⋯⌉ denote the integer round towards plus infinity. The value L is computed through the following iterative process. Starting with l=1 and i l =1 compute i l+1 through il+1=min{K+1,inf{j:il<j⩽K∧⌈log 10(bj)⌉>⌈log 10(bj−1)⌉}}. If i l+1>K then make L=l and stop; otherwise increment l by one and repeat the procedure. Note that, in particular, ⌈log 10(bil )⌉=⌈log 10(bil+1)⌉=⋯=⌈log 10(bil+1−1)⌉, but, if i l+1⩽K, ⌈log 10(bil )⌉<⌈log 10(bil+1 )⌉. For l=1,2,…,L, we consider that the decays b i l to b i l+1−1 characterize the same traffic time scale and we aggregate the n l =i l+1−i l components in one component with the following parameters: (27) αl=∑il+1−1 k=il ak and βl= ∑il+1−1 k=il akbk αl . Taking into account (26) and (27), the autocovariance function of the 2-dMMPP Z (l), γ k (l), is fitted by αl e kβl . Thus, in view of (19), it results that (28) αl=dl 2π(l) 1π(l) 2 and βl=cl, where d l =λ (l) 2−λ (l) 1, and the fitted autocovariance function of Z 1+Z 2+⋯+Z L is (29) ∑l=1 Lαl e kβl ,k=1,2,… The parameters α l and β l are obtained via the autocovariance approximation just described; in the next steps, the inference procedure will restrict d l 2, π 1 (l) and π 2 (l) to satisfy (28). 3.2 Inference of the M-dMMPP probability function and of the L 2-dMMPP parameters The next step is the inference of the M-dMMPP probability function from the empirical probability function of the original data trace. The relation between the probability functions of the 2-dMMPPs, the M-dMMPP and the M2 L -dMMPP is defined by (23). In order to simplify the deconvolution of f L+1(k) and f l (k), l=1,…,L, we reduce the number of parameters to be fitted by considering that the Poisson packet arrival rate is zero in one state of each 2-dMMPP source; that is, λ (l) 1=0 and λ (l) 2=d l , for l=1,…,L. From (28), (30) dl= αl π(l) 1π(l) 2 ,l=1,2,…,L. The probability function of the M-dMMPP, f L+1, is inferred from the empirical probability function of the packet data, denoted by f e, and the L 2-dMMPP probability functions, denoted by f ̂ l , l=1,2,…,L, based on the fitted parameters, after fixing the probabilities π (l) 1, l=1,2,…,L, through (23). More precisely, f L+1 is fitted jointly with the parameters π (l) 1, l=1,…,L, through the following constrained minimization process: (31) minimize {π(l) 1,l=1,…,L},{fL+1(k),k=0,1,…} ∑k|o e (k)|, where (32) o e (k)=f e (k)−( f ̂ 1⊕⋯⊕ f ̂ L⊕fL+1)(k) subject to (28) and (33) 0<π(l) 1<1,l=1,2,…,L, fL+1(k)⩾0,k=0,1,… and ∑k=0 +∞fL+1(k)=1. We denote by f ̂ L+1 the fitted probability function of the M-dMMPP. Note that π 1 (l) is not allowed to be 0 or 1 because, in both cases, the lth 2-dMMPP would degenerate into a Poisson process. The empirical probability function, f e(k), is inferred for the range of values defined by k=0,1,…,max 1.1∑l=1 Ldl Δt,max kZk , where Δt is the sampling interval and Z k is the number of packet arrivals at sampling interval k. The probability functions f ̂ l(k), l=1,…,L are also calculated for the same range of values. However, in order to the reduce the number of points used in the convolutions, only the subrange of values defined by k=min j{ f ̂ l(j)>ξl},min j{ f ̂ l(j)>ξl}+1,…,max j{ f ̂ l(j)>ξl}, where ξl=10−4 max( f ̂ l), is considered. The constrained minimization process given by (31)–(33) is a non-linear programming problem and in general, it is computationally demanding to obtain the global optimal solution. Accordingly, to solve this problem we consider two approximations: (i) we make π 1 (l)=π 1 (l+1), l=1,…,L−1 and (ii) we restrict the range of possible π 1 (l) solutions to be discrete and such that π 1 (l)=0.001k, k=1,…,999. Then a search process is used to find the minimum value of the objective function. The complexity of the minimization process is essentially proportional to L, due to the convolution of the L 2-dMMPPs. The considered approximations have had negligible impact on the results obtained so far with the fitting procedure, in particular on those presented in Section 5. At this point all parameters of the 2-dMMPPs, X (1),X (2),…,X (L), have been determined and their corresponding 2-dMMPP matrices {( P (l), Λ (l)),l=1,2,…,L} can be constructed in the following way: P (l)= 1−π(l) 2(1−e βl ) π(l) 2(1−e βl ) π(l) 1(1−e βl ) 1−π(l) 1(1−e βl ) , Λ (l)= 0 0 0 dl . 3.3 Inference of the M-dMMPP packet arrival rates and transition probabilities The next step is the inference of the number of states and Poisson packet arrival rates of the M-dMMPP from f ̂ L+1 . To do this we infer f ̂ L+1 as a weighted sum of Poisson probability functions. The matching is carried out through an algorithm that progressively subtracts a Poisson probability function from f ̂ L+1 . This algorithm is described in the flowchart of Fig. 3 . We represent the ith Poisson probability function with mean ϕ i by g ϕ i (k). We define h (i)(k) as the difference between f ̂ L+1(k) and the weighted sum of Poisson probability functions at the ith iteration. Initially, we set h(1)(k)= f ̂ L+1(k). In each step, we first detect the maximum of h (i)(k). The corresponding k-value, ϕi=argmax kh(i)(k), will be considered the ith Poisson rate of the M-dMMPP. We then calculate the weights of each Poisson probability function, w → i=[w1i,w2i,…,wii], through the following set of linear equations: f ̂ L+1(ϕl)=∑j=1 iwjigϕj (ϕl),l=1,…,i. This assures that the fitting between f ̂ L+1(k) and the weighted sum of Poisson probability functions is exact at ϕ i points, for l=1,2,…,i. The final step in each iteration is the calculation of the new difference function h(i)(k)= f ̂ L+1(k)−∑j=1 iwjigϕj (k). The algorithm stops when the maximum of h (i)(k) is lower than a pre-defined percentage ε of the maximum of f ̂ L+1(k) and M is made equal to i. Other methods for parameter estimation of finite Poisson mixtures with an unknown number of components, have been proposed, e.g., based on moment estimation or maximum likelihood (see, e.g., [42] and references therein). These methods lead to the solution of a system of non-linear equations with a number of variables equal to twice the number of components of the Poisson mixture model. By contrast, in the algorithm described above the rates of the Poisson mixture model are fitted directly and the weights are fitted by solving a system of linear equations with the weights as variables, thus obtaining a more computationally efficient procedure. Moreover, the proposed procedure leads to the fitting of a small number of components for the fitted IP traces. Note also that the proposed procedure is in line with the global heuristic approach followed in the paper, which seeks a fast method to fit a particular class of MMPPs instead of a purely statistical fitting of an MMPP. After M has been determined, the parameters of the M-dMMPP, {(π j (L+1),λ j (L+1)),j=1,2,…,M}, are then set equal to π(L+1) j=wjM and λ(L+1) j=ϕj. Finally, the M2 L -dMMPP process can be constructed using Eqs. (12) and (13), where Λ (L+1) , P (L+1) , Λ (i) and P (i) , i=1,…,L, were calculated in the last two subsections. 3.4 Packet size distribution fitting and calculation of the final parameters The packet size characterization is made independently for each state of the inferred M2 L -dMMPP. There are two steps: (i) association of each time slot to one of the M2 L -dMMPP states and (ii) inference of a packet size distribution for each state of the M2 L -dMMPP. In the first step, we scan all time slots of the empirical data. A time slot in which k packet arrivals were observed is randomly assigned to a state, according to the probability vector θ → (k)={θ1(k),…,θM2L (k)}, where θ i (k) represents the probability that the observed k packet arrivals were originated in state i. This is given by (34) θi(k)= πigλi (k) ∑j=1 M2L πjgλj (k) , where λ j represents the Poisson packet arrival rate of the jth state of the M2 L -dMMPP and π j the corresponding steady-state probability (as stated before, g λ (y) represents a Poisson probability distribution function with mean λ). The inference of the packet size distribution in each state resorts to histograms. The inference of each histogram uses only the packets that arrived during the time slots previously associated with the state for which we are inferring the packet size distribution. Note that some low-probability states may have no packets associated with them, making impossible the packet characterization specifically for these states. We associate a packet size distribution to these states that considers all data packets, i.e., the packet size distribution unconditioned on the M2 L -dMMPP states. The histograms result in the packet size distributions qi={qi(n),n∈N} for i=1,2,…,M2 L . This step completes the inference procedure. According to (5), the M2 L -dBMAP that models the input traffic is fully characterized by the qi,i=1,2,…,M2L , inferred in this section and by matrices Λ and P inferred in previous sections. 4 The importance of fitting the packet size The purpose of this section is to illustrate, through a worked example, the impact in terms of queuing behavior of modeling the packet size and its correlation with the packet arrivals. We compare the packet loss ratio versus buffer size curves obtained with three dBMAPs where the packet size distribution differs but the packet arrival process is kept the same. The packet arrival process is modeled by a 2-dMMPP with parameters π 1=0.2, π 2=0.8, λ 1=1000 pkts/s and λ 2=300 pkts/s. We consider two possible packet sizes: 50 and 1000 bytes. In the first dBMAP, which we take as our reference in this study, the packet size distribution is 80% of 50 bytes and 20% of 1000 bytes in state 1, i.e., q 1(50)=0.8 and q 1(1000)=0.2, and 50% of both sizes in state 2, i.e., q 2(50)=0.5 and q 2(1000)=0.5. In the second dBMAP, we consider that the packet size distribution is the same in both states, and is given by the unconditional packet size distribution of the first dBMAP, i.e., the packet size distribution that considers all packets irrespective of the 2-dMMPP states. Thus the packet size distribution is, in both states, 63.63% of 50 bytes and 36.37% of 1000 bytes. In the third dBMAP, we assume that the packet size is fixed and equal to the average packet size of the first and second dBMAPs (395 bytes). Note that the second and third dBMAPs correspond to simplifications of the first one, which are usually taken when characterizing the input traffic and assessing queuing behavior. In particular, both simplifications consider independence between packet arrivals and packet sizes. We estimated the packet loss ratio via trace-driven simulation using traces of 1 million packets generated from the three dBMAPs described above. The sampling period was 0.1 s, the service rate was 210 Kbytes/s and the buffer size was varied from 1 to 100 Kbytes. The results are shown in Fig. 4 . As can be observed, there is a large difference between the packet loss ratio obtained with the first dBMAP and with the second and third ones. For example, for a buffer size of 20 Kbytes the packet loss ratios were 1.39×10−3, 3.79×10−2 and 6.36×10−2 for the first, second and third dBMAP traces, respectively. This clearly indicates that the simplifications subjacent to the second and third dBMAPs can lead to large errors in terms of queuing behavior. Thus detailed modeling of the packet size and of the correlations with the packet arrivals is clearly required. In the next section, we complete this study through the consideration of measured data traces. 5 Results We have applied our fitting procedure to five traces of IP traffic: (i) the well known pAug.TL Bellcore trace [13] and (ii) four traces measured at the University of Aveiro (UA), all of them exhibiting LRD. The UA traces are representative of Internet access traffic produced within a University campus environment. The University of Aveiro is connected to the Internet through a 10 Mbit/s ATM link and the measurements were carried out in a 100 Mbit/s Ethernet link connecting the border router to the firewall, which only transports Internet access traffic. We assess the fitting procedure using several performance evaluation criteria. In the case of the packet arrival process, we compare both the probability and autocovariance functions of the packet arrival counts obtained with the fitted dBMAPs (theoretical) and with the original data traces. The sampling interval of the counting process was 0.1 s. In the case of the packet size distribution, we compare the probability function of the original trace and of a trace generated from the fitted dBMAP (hereafter called fitted trace). We analyze the presence of LRD behavior, in both the original and fitted traces, using the method described in [31]. This method resorts to the so-called logscale diagram which consists in the graph of y j against j, together with confidence intervals about the y j , where y j is a function of the wavelet discrete transform coefficients at scale j. Traffic is LRD if, within the limits of the confidence intervals, the y j fall on a straight line with slope α∈(0,1), in a range of scales from some initial value j up to the largest one present in data. The Hurst parameter is related to the slope α by H=(α+1)/2. Thus LRD behavior implies an Hurst parameter H∈(0.5,1). To relate scales with seconds we note that octave j corresponds to 0.1×2 j s. Table 1 indicates the number of states of the fitted dBMAPs and summarize the fitting results relative to the probability function (PF) and autocovariance function (AF) of the packet arrival counts. The fitting error is defined as the quotient between the integral of the absolute difference between the curves of the original and fitted traces, and the integral of the original trace curve. The results indicate that a close match was obtained in case of the PF; the match is not so good for the AF due to the oscillatory behavior in the case of the original data, but this has negligible impact on the queuing behavior. This type of behavior has been observed in other data traces. Table 2 lists the estimated Hurst parameters of both original and fitted traces, showing that all traces exhibit LRD behavior and that the fitted dBMAPs were able to capture this behavior. The table also includes the range of largest scales where alignment (in the logscale diagram) was obtained. We also analyze the queuing behavior by comparing the packet loss ratio, obtained through trace-driven simulation, using four types of input traffic: (i) original traces, (ii) traces generated according to the fitted dBMAP, (iii) traces where the arrival instants were generated according to the fitted dMMPP arrival process and the packet size according to the unconditional packet size distribution of the fitted dBMAP and (iv) traces where the arrival instants were also generated according to the fitted dMMPP arrival process but the packet size is fixed and equal to the average packet size of the original trace. The results of trace-driven simulation for the fitted traces were based on 10 replicas. 5.1 Belcore trace A 56-dBMAP was fitted to the pAug.TL trace. In Figs. 5 and 6 we show the results of the packet arrival fitting. There is an excellent agreement in terms of probability functions. In terms of autocovariance, it can be seen that the fitted model is able to reproduce the average behavior of the empirical autocovariance (but not its oscillatory behavior). In order to analyze the queuing behavior we considered a queue with a service rate of 175 Kbytes/s, corresponding to a link utilization of ρ=0.79, and varied the buffer size from 100 Kbytes to 8 Mbytes. As it can be observed in Fig. 7 , there is a close agreement between the curves corresponding to the original trace and to the trace generated according to the fitted 56-dBMAP, for all buffer size values. In contrast, for the other two curves corresponding to traces where the packet size is fitted independently of the packet arrival process, significant deviations are obtained. This confirms the conclusions of the previous section. The packet size distributions of the original and fitted traces are shown in Figs. 8 and 9 , respectively. An excellent agreement between the original and fitted distributions was obtained. 5.2 UA traces The main characteristics of the UA traces are described in Tables 3 and 4 . Each UA trace corresponds to a different day period. All measurements captured 20 million packets. However, to assure stationarity, traces UA6 and UA10 were truncated to 10 million packets. The traffic analyzer was a 1.2 GHz AMD Athlon PC, with 1.5 Gbytes of RAM, running WinDump. The measurements recorded the arrival instant and the IP header of each packet. In the following we will make a detailed analysis of the results relative to trace UA19. Fig. 10 shows that the trace has LRD, since there is alignment from scale 6 up the maximum one present in data. The slope of the straight line is α=0.964, leading to an Hurst parameter of H=0.982. This analysis considered the traffic in bytes/s, i.e., including arrivals and packet sizes. Similar results were obtained when considering only the arrival process (traffic in packets/s). A 12-dBMAP was fitted to the trace. The parameter estimation took less than 30 s, using a MATLAB implementation running in the PC described above. This shows that the fitting procedure is computationally very efficient. In Figs. 11 and 12 we show the results of the packet arrival fitting. There is an excellent agreement in terms of probability functions. In terms of autocovariance, the empirical function shows some oscillatory behavior. However, the dBMAP succeeded in capturing the main trend and, as will be seen later, this is enough for accurate queuing behavior assessment. Note that the autocovariance was fitted up to time lags of 500 s. In general, the accuracy of packet arrival fitting is similar to the ones reported in [2] for the case of the autocovariance and marginal distribution and in [5] for the case of the autocovariance and mean arrival rate. The packet size distributions of the original and fitted traces are shown in Figs. 13 and 14 , respectively. The distribution is essentially bimodal with two pronounced peaks around 40 and 1500 bytes; it also presents non-negligible values at 576 and 885 bytes. We note that the minimum IP packet size is 40 bytes and that, in many implementations, the maximum is 1500 bytes. Again, an excellent agreement between the original and fitted distributions was obtained. Note, in particular, the fitting accuracy on the lowest probability packet sizes. In order to analyze the queuing behavior we considered a queue with a service rate of 700 Kbytes/s, corresponding to a link utilization of ρ=0.90, and varied the buffer size from 10 Kbytes to 60 Mbytes. As it can be observed in Fig. 15 , there is a close agreement between the curves corresponding to the original trace and to the trace generated according to the fitted 24-dBMAP, for all buffer size values. In contrast, for the other two curves corresponding to traces where the packet size is fitted independently of the packet arrival process, significant deviations are obtained. This confirms the conclusions of the previous section. The results obtained with the other three traces are similar. The queuing results for the three traces are shown in Figs. 16–18 . The service rate was 625 Kbytes/s (ρ=0.72), 500 Kbytes/s (ρ=0.88) and 650 Kbytes/s (ρ=0.99) for traces UA1, UA6 and UA10, respectively. In all cases the buffer size was varied from 10 Kbytes to 60 Mbytes. As in the case of the UA19 trace, there exist a close agreement for the fitted dBMAPs, but large differences when the packet size is fitted independently of the packet arrival process. When compared with the queuing results reported in [11], our results show a closer fitting, despite the fact that we are considering higher link utilizations. The number of states of the resulting dBMAPs can, in some cases, restrict the applicability of the model to very simple analytical performance studies. However, we note that the number of states is determined as part of the fitting procedure and that it can be reduced by alleviating the accuracy requirements on the fitting of the M-dMMPP probability function. 6 Conclusions We have developed a fitting procedure for discrete-time batch Markovian arrival processes (dBMAPs), which allows for the simultaneous matching of both: (i) the autocovariance and marginal distribution of the packet arrival process and (ii) the distribution of the packet size. The procedure was applied to several measured traces exhibiting LRD. Our numerical results, have shown that the procedure matches closely the autocovariance and the probability function of the packet arrival process and also the packet size distribution. The queuing behavior, as assessed by the packet loss ratio suffered by data and fitted traces, also shows a very good agreement, when the packet size distribution is fitted individually for each state of the dMMPP modeling packet arrivals. Our results also point out that matching only the packet arrival process and considering that packets have a fixed size or distribution can lead to significant errors in the estimation of the packet loss ratio. A direction for future work is the consideration of continuous-time BMAPs. In fact, continuous-time BMAPs are popular for a large range of performance models and there are performance modeling tools available using continuous-time BMAPs. Thus, it is of interest to develop traffic modeling procedures similar to the one presented in the paper using continuous-time BMAPs. As our approach is based at first on the fitting of the autocovariance function of packet arrival counts, a discrete-time characteristic, a first step in this direction would be to obtain a proper continuous-time function substitute of the autocovariance function of packets counts. Acknowledgements The authors would like to thank the anonymous referees for their valuables comments and suggestions. This research was supported in part by Fundação para a Ciência e a Tecnologia, the project POSI/42069/CPS/2001, and the grant BD/19781/99. References [1] K. Meier-Hellstern A fitting algorithm for Markov-modulated Poisson process having two arrival rates European Journal of Operational Research 29 1987 370 377 [2] S. Li C. Hwang On the convergence of traffic measurement and queuing analysis: a statistical-match and queuing (SMAQ) tool IEEE/ACM Transactions on Networking 5 1 1997 95 110 [3] S. Robert, J.L. Boudec, A modulated Markov process for self-similar traffic, in: Proceedings of Saarbrucken Schloss Dagstuhl, Germany, 1995, pp. 1–14 [4] S. Robert J.L. Boudec New models for self-similar traffic Performance Evaluation 30 1–2 1997 57 68 [5] A. Andersen B. Nielsen A Markovian approach for modeling packet traffic with long-range dependence IEEE Journal on Selected Areas in Communications 16 5 1998 719 732 [6] B. Hajek L. He On variations of queue response for inputs with the same mean and autocorrelation function IEEE/ACM Transactions on Networking 6 5 1998 588 598 [7] R. Riedi M. Crouse V. Ribeiro R. Baraniuk A multifractal wavelet model with application to network traffic IEEE Transactions on Information Theory 45 4 1999 992 1018 [8] T. Yoshihara S. Kasahara Y. Takahashi Practical time-scale fitting of self-similar traffic with Markov-modulated Poisson process Telecommunication Systems 17 1–2 2001 185 211 [9] P. Salvador, A. Nogueira, R. Valadas, Modeling multifractal traffic with stochastic L-Systems, in: Proceedings of GLOBECOM 2002, 2002 [10] P. Salvador R. Valadas A. Pacheco Multiscale fitting procedure using Markov modulated Poisson processes Telecommunications Systems 23 1–2 2003 123 148 [11] A. Klemm C. Lindemann M. Lohmann Traffic modeling of IP networks using the batch Markovian arrival process Performance Evaluation 54 2 2003 149 173 [12] J. Gao, I. Rubin, Multifractal analysis and modeling of long-range-dependent traffic, in: Proceedings ICC’99, 1999, pp. 382–386 [13] W. Leland M. Taqqu W. Willinger D. Wilson On the self-similar nature of Ethernet traffic (extended version) IEEE/ACM Transactions on Networking 2 1 1994 1 15 [14] J. Beran R. Sherman M. Taqqu W. Willinger Long-range dependence in variable-bit rate video traffic IEEE Transactions on Communications 43 2–4 1995 1566 1579 [15] M. Crovella A. Bestavros Self-similarity in World Wide Web traffic: evidence and possible causes IEEE/ACM Transactions on Networking 5 6 1997 835 846 [16] V. Paxson S. Floyd Wide-area traffic: the failure of Poisson modeling IEEE/ACM Transactions on Networking 3 3 1995 226 244 [17] K. Park, G. Kim, M. Crovella, On the relationship between file sizes, transport protocols, and self-similar network traffic, in: Proceedings of the 4th International Conference on Networks Protocols (ICNP’96), 1996, pp. 171–180 [18] W. Willinger M. Taqqu R. Sherman D. Wilson Self-similarity through high-variability: statistical analysis of Ethernet LAN traffic at the source level IEEE/ACM Transactions on Networking 5 1 1997 71 86 [19] W. Willinger V. Paxson M. Taqqu Self-similarity and Heavy Tails: Structural Modeling of Network Traffic, A Practical Guide to Heavy Tails: Statistical Techniques and Applications 1998 Birkhauser Boston [20] R. Riedi, J. Véhel, Multifractal properties of TCP traffic: a numerical study, Technical Report No. 3129, INRIA Rocquencourt, France. Available from <www.stat.rice.edu/~riedi> [21] A. Feldmann, A. Gilbert, W. Willinger, Data networks as cascades: investigating the mullifractal nature of Internet WAN traffic, in: Proceedings of SIGCOMM, 1998, pp. 42–55 [22] A. Feldmann, A. Gilbert, P. Huang, W. Willinger, Dynamics of IP traffic: a study of the role of variability and the impact of control, in: SIGCOMM, 1999, pp. 301–313 [23] P. Abry P. Flandrin M. Taqqu D. Veitch Wavelets for the analysis, stimation and synthesis of scaling data K. Park W. Willinger Self-Similar Network Traffic Analysis and Performance Evaluation 2000 Wiley New York [24] A. Erramilli, O. Narayan, A. Neidhardt, I. Saniee, Performance impacts of multi-scaling in wide area TCP/IP traffic, in: Proceedings of INFOCOM’2000, 2000 [25] B. Ryu A. Elwalid The importance of long-range dependence of VBR video traffic in ATM traffic engineering: myths and realities ACM Computer Communication Review 26 1996 3 14 [26] M. Grossglauser J.C. Bolot On the relevance of long-range dependence in network traffic IEEE/ACM Transactions on Networking 7 5 1999 629 640 [27] A. Nogueira, R. Valadas, A simulation study on the relevant time scales of the input traffic for a tandem network, in: Proceedings of IEEE ICC 2002, 2002 [28] D. Lucantoni New results on the single server queue with a batch Markovian arrival process Stochastic Models 7 1 1991 1 46 [29] D. Lucantoni The BMAP/G/1 queue: a tutorial L. Donatiello R. Nelson Models and Techniques for Performance Evaluation of Computer and Communication Systems 1993 Springer Berlin 330 358 [30] A. Pacheco N.U. Prabhu Markov-additive processes of arrivals J. Dshalalow Advances in Queueing: Theory and Methods 1995 CRC Boca Raton, FL 167 194 (Chapter 6) [31] D. Veitch P. Abry A wavelet based joint estimator for the parameters of LRD IEEE Transactions on Information Theory 45 3 1999 878 897 [32] D. Lucantoni K. Meier-Hellstern M. Neuts A single-server queue with server vacations and a class of non-renewal arrival processes Advances in Applied Probability 22 1990 676 705 [33] S. Asmussen G. Koole Marked point processes as limits of Markovian arrival streams Journal of Applied Probability 30 2 1993 365 372 [34] C. Blondia O. Casals Statistical multiplexing of VBR sources: a matrix-analytic approach Performance Evaluation 16 1–3 1992 5 20 [35] C. Blondia A discrete-time batch Markovian arrival process as B-ISDN traffic model Belgian Journal of Operations Research, Statistics and Computer Science 32 1993 3 23 [36] A. Alfa S. Chakravarthy A discrete queue with the Markovian arrival process and phase type primary and secondary services Stochastic Models 10 2 1994 437 451 [37] N. Rananand Markov approximations to D-BMAPs: information-theoretic bounds on queueing performance Stochastic Models 11 4 1995 713 734 [38] F. Geerts C. Blondia Superposition of Markov sources and long range dependence F. Aagesen H. Botnevik D. Khakhar Information Network and Data Communications: Proceedings of the IFIP/ICCC International Conference on Information Network and Data Communication 1996 Chapman & Hall London [39] A. Ridder Fast simulation of discrete time queues with Markov modulated batch arrivals and batch departures AEU International Journal of Electronics and Communications 52 1998 127 132 [40] A. Feldmann W. Whitt Fitting mixtures of exponentials to long-tail distributions to analyze network performance models Performance Evaluation 31 3–4 1997 245 279 [41] M. Osborne G. Smyth A modified prony algorithm for fitting sums of exponential functions SIAM Journal on Scientific and Statistical Computing 16 1995 119 138 [42] D. Karlis E. Xekalaki Robust inference for finite Poisson mixtures Journal of Statistical Planning and Inference 93 2001 93 115 "
    },
    {
        "doc_title": "Multi-time-scale traffic modeling using Markovian and L-Systems models",
        "doc_scopus_id": "35048839724",
        "doc_doi": "10.1007/978-3-540-30197-4_30",
        "doc_eid": "2-s2.0-35048839724",
        "doc_date": "2004-01-01",
        "doc_type": "Article",
        "doc_areas": [
            {
                "area_name": "Theoretical Computer Science",
                "area_abbreviation": "MATH",
                "area_code": "2614"
            },
            {
                "area_name": "Computer Science (all)",
                "area_abbreviation": "COMP",
                "area_code": "1700"
            }
        ],
        "doc_keywords": [
            "Autocovariance functions",
            "Batch Markovian arrival process",
            "L-systems",
            "Markov modulated Poisson process",
            "Markovian arrival process",
            "Multi-time scale modeling",
            "Parameter inference procedures",
            "Traffic model"
        ],
        "doc_abstract": "Traffic engineering of IP networks requires the characterization and modeling of network traffic on multiple time scales due to the existence of several statistical properties that are invariant across a range of time scales, such as selfsimilarity, LRD and multifractality. These properties have a significant impact on network performance and, therefore, traffic models must be able to incorporate them in their mathematical structure and parameter inference procedures. In this work, we address the modeling of network traffic using a multi-timescale framework. We evaluate the performance of two classes of traffic models (Markovian and Lindenmayer-Systems based traffic models) that incorporate the notion of time scale using different approaches: directly in the model structure, in the case of the Lindenmayer-Systems based models, or indirectly through a fitting of the second-order statistics, in the case of the Markovian models. In addition, we address the importance of modeling packet size for IP traffic, an issue that is frequently misregarded. Thus, in each class we evaluate models that are intended to describe only the packet arrival process and models that are intended to describe both the packet arrival and packet size processes: specifically, we consider a Markov modulated Poisson process and a batch Markovian arrival process as examples of Markovian models and a set of four Lindenmayer-Systems based models as examples of non Markovian models that are able to perform a multitime-scale modeling of network traffic. All models are evaluated by comparing the density function, the autocovariance function, the loss ratio and the average waiting time in queue corresponding to measured traces and to traces synthesized from the fitted models. We resort to the well known Bellcore pOct traffic trace and to a trace measured at the University of Aveiro. The results obtained show that (i) both the packet arrival and packet size processes need to be modeled for an accurate characterization of IP traffic and (ii) despite the differences in the ways Markovian and L-System models incorporate multiple time scales in their mathematical framework, both can achieve very good performance. © Springer-Verlag 2004.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Fitting Self-Similar Traffic by a Superposition of MMPPs Modeling the Distribution at Multiple Time Scales",
        "doc_scopus_id": "1642396946",
        "doc_doi": null,
        "doc_eid": "2-s2.0-1642396946",
        "doc_date": "2004-01-01",
        "doc_type": "Article",
        "doc_areas": [
            {
                "area_name": "Software",
                "area_abbreviation": "COMP",
                "area_code": "1712"
            },
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            },
            {
                "area_name": "Electrical and Electronic Engineering",
                "area_abbreviation": "ENGI",
                "area_code": "2208"
            }
        ],
        "doc_keywords": [
            "Markov modulated Poisson processes",
            "Self-similar",
            "Time scales",
            "Traffic modeling"
        ],
        "doc_abstract": "Measuring and modeling network traffic is of key importance for the traffic engineering of IP networks, due to the growing diversity of multimedia applications and the need to efficiently support QoS differentiation in the network. Several recent measurements have shown that Internet traffic may incorporate long-range dependence and self-similar characteristics, which can have significant impact on network performance. Self-similar traffic shows variability over many time scales, and this behavior must be taken into account for accurate prediction of network performance. In this paper, we propose a new parameter fitting procedure for a superposition of Markov Modulated Poisson Processes (MMPPs), which is able to capture self-similarity over a range of time scales. The fitting procedure matches the complete distribution of the arrival process at each time scale of interest. We evaluate the procedure by comparing the Hurst parameter, the probability mass function at each time scale, and the queuing behavior (as assessed by the loss probability and average waiting time), corresponding to measured traffic traces and to traces synthesized according to the proposed model. We consider three measured traffic traces, all exhibiting self-similar behavior: the well-known pOct Bellcore trace, a trace of aggregated IP WAN traffic, and a trace corresponding to the popular file sharing application Kazaa. Our results show that the proposed fitting procedure is able to match closely the distribution over the time scales present in data, leading to an accurate prediction of the queuing behavior.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Framework based on stochastic L-Systems for modeling IP traffic with multifractal behavior",
        "doc_scopus_id": "1642514645",
        "doc_doi": "10.1117/12.509357",
        "doc_eid": "2-s2.0-1642514645",
        "doc_date": "2003-12-01",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Electronic, Optical and Magnetic Materials",
                "area_abbreviation": "MATE",
                "area_code": "2504"
            },
            {
                "area_name": "Condensed Matter Physics",
                "area_abbreviation": "PHYS",
                "area_code": "3104"
            },
            {
                "area_name": "Computer Science Applications",
                "area_abbreviation": "COMP",
                "area_code": "1706"
            },
            {
                "area_name": "Applied Mathematics",
                "area_abbreviation": "MATH",
                "area_code": "2604"
            },
            {
                "area_name": "Electrical and Electronic Engineering",
                "area_abbreviation": "ENGI",
                "area_code": "2208"
            }
        ],
        "doc_keywords": [
            "Autocovariance functions",
            "L-System",
            "Multifractals",
            "Traffic modeling"
        ],
        "doc_abstract": "In a previous work we have introduced a multifractal traffic model based on so-called stochastic L-Systems, which were introduced by biologist A. Lindenmayer as a method to model plant growth. L-Systems are string rewriting techniques, characterized by an alphabet, an axiom (initial string) and a set of production rules. In this paper, we propose a novel traffic model, and an associated parameter fitting procedure, which describes jointly the packet arrival and the packet size processes. The packet arrival process is modeled through a L-System, where the alphabet elements are packet arrival rates. The packet size process is modeled through a set of discrete distributions (of packet sizes), one for each arrival rate. In this way the model is able to capture correlations between arrivals and sizes. We applied the model to measured traffic data: the well-known pOct Bellcore, a trace of aggregate WAN traffic and two traces of specific applications (Kazaa and Operation Flashing Point). We assess the multifractality of these traces using Linear Multiscale Diagrams. The suitability of the traffic model is evaluated by comparing the empirical and fitted probability mass and autocovariance functions; we also compare the packet loss ratio and average packet delay obtained with the measured traces and with traces generated from the fitted model. Our results show that our L-System based traffic model can achieve very good fitting performance in terms of first and second order statistics and queuing behavior.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Markovian Approach for Modeling IP Traffic Behavior on Several Time Scales",
        "doc_scopus_id": "1642432988",
        "doc_doi": "10.1117/12.509358",
        "doc_eid": "2-s2.0-1642432988",
        "doc_date": "2003-12-01",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Electronic, Optical and Magnetic Materials",
                "area_abbreviation": "MATE",
                "area_code": "2504"
            },
            {
                "area_name": "Condensed Matter Physics",
                "area_abbreviation": "PHYS",
                "area_code": "3104"
            },
            {
                "area_name": "Computer Science Applications",
                "area_abbreviation": "COMP",
                "area_code": "1706"
            },
            {
                "area_name": "Applied Mathematics",
                "area_abbreviation": "MATH",
                "area_code": "2604"
            },
            {
                "area_name": "Electrical and Electronic Engineering",
                "area_abbreviation": "ENGI",
                "area_code": "2208"
            }
        ],
        "doc_keywords": [
            "Markov modulated Poisson processes (MMPP)",
            "Traffic modeling"
        ],
        "doc_abstract": "In this paper we compare two traffic models based on Markov modulated Poisson processes (MMPPs), that were designed to capture self-similar behavior over multiple time scales. These models are both constructed by fitting the distribution of packet counts in a number of time scales. The first model is a superposition of MMPPs where each MMPP describes a different time scale. The second one is obtained as the equivalent to an hierarchical construction process that, starting at the coarsest time scale, successively decomposes MMPP states into new MMPPs to incorporate the characteristics offered by finner time scales. We evaluate the accuracy of the models by comparing the probability mass function at each time scale, as well as the loss probability and average waiting time in queue, corresponding to measured traces and to traces synthesized according to the proposed models. The analysis is based on three measured traffic traces exhibiting self-similar behavior: the well-known pOct Bellcore trace and two traces measured in a Portuguese ISP. Based on the obtained results, we conclude that both Markovian models have good and very similar performances in matching the characteristics of the data traces over the relevant time scales. However, one advantage of the hierarchical approach is that the number of states of the corresponding MMPP can be much smaller.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Modeling Network Traffic with Multifractal Behavior",
        "doc_scopus_id": "0347090476",
        "doc_doi": "10.1023/A:1026183318200",
        "doc_eid": "2-s2.0-0347090476",
        "doc_date": "2003-10-01",
        "doc_type": "Article",
        "doc_areas": [
            {
                "area_name": "Electrical and Electronic Engineering",
                "area_abbreviation": "ENGI",
                "area_code": "2208"
            }
        ],
        "doc_keywords": [
            "Conservative cascade",
            "L-system",
            "Markov modulated Poisson process",
            "Multifractal",
            "Multiscaling",
            "Traffic modeling"
        ],
        "doc_abstract": "Modeling of network traffic with multifractal behavior by evaluating the performance of four models covering a wide range of traffic types was discussed. A Markovian model, fractional Gaussian noise model, L-system model and the conservative cascade model were selected for the study. All the models were evaluated comparing the density function, the autocovariance and the loss ratio queuing behavior of the measured traces and traces synthesized from the fitted models. It was observed that the Gaussian noise model does not perform well, whereas Markovian, the conservative cascade and the L-system models show almost similar results.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Multiscale Fitting Procedure Using Markov Modulated Poisson Processes",
        "doc_scopus_id": "0037727665",
        "doc_doi": "10.1023/A:1023672904130",
        "doc_eid": "2-s2.0-0037727665",
        "doc_date": "2003-06-01",
        "doc_type": "Article",
        "doc_areas": [
            {
                "area_name": "Electrical and Electronic Engineering",
                "area_abbreviation": "ENGI",
                "area_code": "2208"
            }
        ],
        "doc_keywords": [],
        "doc_abstract": "This paper proposes a parameter fitting procedure using Markov Modulated Poisson Processes (MMPPs) that leads to accurate estimates of queuing behavior for network traffic exhibiting long-range dependence behavior. The procedure matches both the autocovariance and marginal distribution of the counting process. A major feature is that the number of states is not fixed a priori, and can be adapted to the particular trace being modeled. The MMPP is constructed as a superposition of L 2-MMPPs and one M-MMPP. The 2-MMPPs are designed to match the autocovariance and the M-MMPP to match the marginal distribution. Each 2-MMPP models a specific time-scale of the data. The procedure starts by approximating the autocovariance by a weighted sum of exponential functions that model the autocovariance of the 2-MMPPs. The autocovariance tail can be adjusted to capture the long-range dependence characteristics of the traffic, up to the time-scales of interest to the system under study. The procedure then fits the M-MMPP parameters in order to match the marginal distribution, within the constraints imposed by the autocovariance matching. The number of states is also determined as part of this step. The final MMPP with M2L states is obtained by superposing the L 2-MMPPs and the M-MMPP. We apply the inference procedure to traffic traces exhibiting long-range dependence and evaluate its queuing behavior through simulation. Very good results are obtained, both in terms of queuing behavior and number of states, for the traces used, which include the well-known Bellcore traces.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Modeling self-similar traffic through Markov modulated poisson processes over multiple time scales",
        "doc_scopus_id": "35248856335",
        "doc_doi": "10.1007/978-3-540-45076-4_55",
        "doc_eid": "2-s2.0-35248856335",
        "doc_date": "2003-01-01",
        "doc_type": "Article",
        "doc_areas": [
            {
                "area_name": "Theoretical Computer Science",
                "area_abbreviation": "MATH",
                "area_code": "2614"
            },
            {
                "area_name": "Computer Science (all)",
                "area_abbreviation": "COMP",
                "area_code": "1700"
            }
        ],
        "doc_keywords": [
            "Long range dependence",
            "Markov modulated Poisson process",
            "Multiple time scale",
            "Parameter fitting",
            "Self-similar",
            "Self-similar traffic",
            "Time-scales",
            "Traffic model"
        ],
        "doc_abstract": "In recent years several studies have reported peculiar types of traffic behavior, such as long-range dependence and self-similarity, which can have significant impact on network performance. In this paper we propose a novel traffic model and parameter fitting procedure, based on Markov Modulated Poisson Processes (MMPPs), which is able to capture variability over many time scales, a characteristic of self-similar traffic. The fitting procedure matches the complete distribution at each time scale, and not only some of its moments as it is the case in related proposals. Our results show that the proposed traffic model and parameter fitting procedure closely matches the main characteristics of measured traces over the time scales present in data. © Springer-Verlag Berlin Heidelberg 2003.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Modeling network traffic with multifractal behavior",
        "doc_scopus_id": "33644642083",
        "doc_doi": "10.1109/ICTEL.2003.1191586",
        "doc_eid": "2-s2.0-33644642083",
        "doc_date": "2003-01-01",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Computer Networks and Communications",
                "area_abbreviation": "COMP",
                "area_code": "1705"
            },
            {
                "area_name": "Signal Processing",
                "area_abbreviation": "COMP",
                "area_code": "1711"
            },
            {
                "area_name": "Computer Science Applications",
                "area_abbreviation": "COMP",
                "area_code": "1706"
            }
        ],
        "doc_keywords": [
            "Fractional Gaussian noise",
            "Markov modulated Poisson process",
            "Multi fractals",
            "Multimedia applications",
            "Multiscaling",
            "Second order statistics",
            "Self-similar",
            "Traffic model"
        ],
        "doc_abstract": "©2003 IEEE.The traffic engineering of IP networks requires accurate characterization and modeling of network traffic, due to the growing diversity of multimedia applications and the need to efficiently support QoS differentiation in the network. In recent years several types of traffic behavior, that can have significant impact on network performance, were discovered: long-range dependence, self-similarity and, more recently, multifractality. The extent to which a traffic model needs to incorporate each of these characteristics is still the subject of much research. In this work, we address the modeling of network traffic multifractality by evaluating the performance of three models, which cover a wide range of traffic types, as mathematical descriptors of measured traffic traces showing multifractal behavior. We resort to traffic traces measured both at University of Aveiro and at a Portuguese ISP. For the traffic models, we selected a Markov modulated Poisson process as an example of a Markovian model, the well known fractional Gaussian noise model as an example of a self-similar process and the conservative cascade model as an example of a multifractal model. These models are evaluated comparing the density function, the autocovariance and the loss rate queuing behavior of the measured traces and of traces synthesized from the fitted models. Our results show that the fractional Gaussian noise model is not able to perform a good fitting of the first and second order statistics as well as the loss rate queuing behavior, whereas the Markovian and the conservative cascade models both give similar and very good results. The cascade model is intrinsically multifractal, thus the obtained results are not surprising. The good performance of the Markovian model can be attributed to the parameter fitting procedure, that aggregates distinct sub-processes operating in different time scales, and matches closely both the first and second order statistics of the traffic. The poor performance of the self-similar model can be explained mainly by its lack of parameters.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "Modeling multifractal traffic with stochastic L-Systems",
        "doc_scopus_id": "0036970328",
        "doc_doi": null,
        "doc_eid": "2-s2.0-0036970328",
        "doc_date": "2002-12-01",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Electrical and Electronic Engineering",
                "area_abbreviation": "ENGI",
                "area_code": "2208"
            },
            {
                "area_name": "Global and Planetary Change",
                "area_abbreviation": "ENVI",
                "area_code": "2306"
            }
        ],
        "doc_keywords": [],
        "doc_abstract": "This paper proposes a novel multifractal traffic model, and an associated parameter fitting procedure, based on stochastic L-Systems, which were introduced by biologist A. Lindenmayer as a method to model plant growth. We provide a detailed comparison with a related multifractal model based on conservative cascades. Our results, that include applying the fitting procedure to real observed data with multifractal scaling behavior, show that L-System based models can achieve excellent fitting performance in terms of first and second order statistics and queuing behavior.",
        "available": false,
        "clean_text": ""
    },
    {
        "doc_title": "A framework based on Markov modulated poisson processes for modeling traffic with long-range dependence",
        "doc_scopus_id": "0035179552",
        "doc_doi": "10.1117/12.434317",
        "doc_eid": "2-s2.0-0035179552",
        "doc_date": "2001-01-01",
        "doc_type": "Conference Paper",
        "doc_areas": [
            {
                "area_name": "Electronic, Optical and Magnetic Materials",
                "area_abbreviation": "MATE",
                "area_code": "2504"
            },
            {
                "area_name": "Condensed Matter Physics",
                "area_abbreviation": "PHYS",
                "area_code": "3104"
            },
            {
                "area_name": "Computer Science Applications",
                "area_abbreviation": "COMP",
                "area_code": "1706"
            },
            {
                "area_name": "Applied Mathematics",
                "area_abbreviation": "MATH",
                "area_code": "2604"
            },
            {
                "area_name": "Electrical and Electronic Engineering",
                "area_abbreviation": "ENGI",
                "area_code": "2208"
            }
        ],
        "doc_keywords": [
            "Long-range dependence",
            "Markov modulated Poisson processes",
            "Traffic characterization",
            "Traffic modeling"
        ],
        "doc_abstract": "A fitting procedure for Markov Modulated Poisson Processes (MMPPs) that matches both the autocovariance and marginal distribution functions of the rate process is proposed. The MMPP is constrained to be decomposable into a superposition of N two-state MMPPs (2-MMPPs). The procedure works simultaneously in the state space of N individual 2-MMPPs and on the state space of its equivalent MMPP with 2N.",
        "available": false,
        "clean_text": ""
    }
]